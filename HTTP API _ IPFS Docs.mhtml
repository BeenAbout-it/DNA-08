From: <Saved by Blink>
Snapshot-Content-Location: https://docs.ipfs.io/reference/http/api/#getting-started
Subject: HTTP API | IPFS Docs
Date: Thu, 26 Aug 2021 03:27:42 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--6V0Wl9F4SfHcxYcJ2HcpRKDAh61pWLJewhIgsWtcqa----"


------MultipartBoundary--6V0Wl9F4SfHcxYcJ2HcpRKDAh61pWLJewhIgsWtcqa----
Content-Type: text/html
Content-ID: <frame-2B541EA9CB140E256BAFDD4E0E8DF266@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.ipfs.io/reference/http/api/#getting-started

<!DOCTYPE html><html lang=3D"en-US"><head><meta http-equiv=3D"Content-Type"=
 content=3D"text/html; charset=3DUTF-8">
   =20
   =20
    <title>HTTP API | IPFS Docs</title>
   =20
    <link rel=3D"preconnect" href=3D"https://www.google-analytics.com/">
    <link rel=3D"apple-touch-icon" sizes=3D"180x180" href=3D"https://docs.i=
pfs.io/apple-touch-icon.png">
    <link rel=3D"icon" type=3D"image/png" sizes=3D"32x32" href=3D"https://d=
ocs.ipfs.io/favicon-32x32.png">
    <link rel=3D"icon" type=3D"image/png" sizes=3D"16x16" href=3D"https://d=
ocs.ipfs.io/favicon-16x16.png">
    <link rel=3D"manifest" href=3D"https://docs.ipfs.io/manifest.json">
    <link rel=3D"mask-icon" href=3D"https://docs.ipfs.io/safari-pinned-tab.=
svg" color=3D"#3a0839">
    <link rel=3D"shortcut icon" href=3D"https://docs.ipfs.io/favicon.ico">
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
   =20
    <link rel=3D"preload" href=3D"https://docs.ipfs.io/assets/css/0.styles.=
7261f257.css" as=3D"style"><link rel=3D"preload" href=3D"https://docs.ipfs.=
io/assets/js/app.90624d9d.js" as=3D"script"><link rel=3D"preload" href=3D"h=
ttps://docs.ipfs.io/assets/js/6.dfcc5cfc.js" as=3D"script"><link rel=3D"pre=
load" href=3D"https://docs.ipfs.io/assets/js/1.4842e347.js" as=3D"script"><=
link rel=3D"preload" href=3D"https://docs.ipfs.io/assets/js/8.bc7005c4.js" =
as=3D"script"><link rel=3D"preload" href=3D"https://docs.ipfs.io/assets/js/=
100.e4a86e23.js" as=3D"script"><link rel=3D"prefetch" href=3D"https://docs.=
ipfs.io/assets/js/10.9b3de9ed.js"><link rel=3D"prefetch" href=3D"https://do=
cs.ipfs.io/assets/js/101.2666db23.js"><link rel=3D"prefetch" href=3D"https:=
//docs.ipfs.io/assets/js/11.661d5b72.js"><link rel=3D"prefetch" href=3D"htt=
ps://docs.ipfs.io/assets/js/12.2597247e.js"><link rel=3D"prefetch" href=3D"=
https://docs.ipfs.io/assets/js/13.2dbc1710.js"><link rel=3D"prefetch" href=
=3D"https://docs.ipfs.io/assets/js/14.9c4c9d9c.js"><link rel=3D"prefetch" h=
ref=3D"https://docs.ipfs.io/assets/js/15.9821c005.js"><link rel=3D"prefetch=
" href=3D"https://docs.ipfs.io/assets/js/16.f289ebd1.js"><link rel=3D"prefe=
tch" href=3D"https://docs.ipfs.io/assets/js/17.a9b19a98.js"><link rel=3D"pr=
efetch" href=3D"https://docs.ipfs.io/assets/js/18.57bb9aba.js"><link rel=3D=
"prefetch" href=3D"https://docs.ipfs.io/assets/js/19.d1097de8.js"><link rel=
=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/20.3ad3a981.js"><link =
rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/21.1092e7a7.js"><li=
nk rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/22.0f0d4a0d.js">=
<link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/23.6a48bc28.j=
s"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/24.b64708b=
4.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/25.5328=
f342.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/26.7=
78f6ed3.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/2=
7.29d1c655.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/j=
s/28.8a906ab9.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/asset=
s/js/29.007725f1.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/as=
sets/js/30.cc63030b.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io=
/assets/js/31.c630599e.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs=
.io/assets/js/32.d4658331.js"><link rel=3D"prefetch" href=3D"https://docs.i=
pfs.io/assets/js/33.cfd7a359.js"><link rel=3D"prefetch" href=3D"https://doc=
s.ipfs.io/assets/js/34.8f26ff99.js"><link rel=3D"prefetch" href=3D"https://=
docs.ipfs.io/assets/js/35.a58d4608.js"><link rel=3D"prefetch" href=3D"https=
://docs.ipfs.io/assets/js/36.88bebe52.js"><link rel=3D"prefetch" href=3D"ht=
tps://docs.ipfs.io/assets/js/37.11839d29.js"><link rel=3D"prefetch" href=3D=
"https://docs.ipfs.io/assets/js/38.12076f89.js"><link rel=3D"prefetch" href=
=3D"https://docs.ipfs.io/assets/js/39.3aa9b0de.js"><link rel=3D"prefetch" h=
ref=3D"https://docs.ipfs.io/assets/js/4.63b6f9a1.js"><link rel=3D"prefetch"=
 href=3D"https://docs.ipfs.io/assets/js/40.8c4496b7.js"><link rel=3D"prefet=
ch" href=3D"https://docs.ipfs.io/assets/js/41.2b2b6bcf.js"><link rel=3D"pre=
fetch" href=3D"https://docs.ipfs.io/assets/js/42.3591bb73.js"><link rel=3D"=
prefetch" href=3D"https://docs.ipfs.io/assets/js/43.e625314d.js"><link rel=
=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/44.a53c8d77.js"><link =
rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/45.d89f7dbe.js"><li=
nk rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/46.3eff4280.js">=
<link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/47.6c54628a.j=
s"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/48.4848f74=
b.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/49.b8b3=
71d7.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/5.31=
884cec.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/50=
.30b323b6.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js=
/51.03cfe9cf.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets=
/js/52.e8c8d21a.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/ass=
ets/js/53.39e21468.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/=
assets/js/54.128e225a.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.=
io/assets/js/55.dc7bf217.js"><link rel=3D"prefetch" href=3D"https://docs.ip=
fs.io/assets/js/56.3edde872.js"><link rel=3D"prefetch" href=3D"https://docs=
.ipfs.io/assets/js/57.4dd14354.js"><link rel=3D"prefetch" href=3D"https://d=
ocs.ipfs.io/assets/js/58.b7f27180.js"><link rel=3D"prefetch" href=3D"https:=
//docs.ipfs.io/assets/js/59.fb1c6ac8.js"><link rel=3D"prefetch" href=3D"htt=
ps://docs.ipfs.io/assets/js/60.ad507434.js"><link rel=3D"prefetch" href=3D"=
https://docs.ipfs.io/assets/js/61.ef98cf7e.js"><link rel=3D"prefetch" href=
=3D"https://docs.ipfs.io/assets/js/62.c0ea31bf.js"><link rel=3D"prefetch" h=
ref=3D"https://docs.ipfs.io/assets/js/63.de29b4b6.js"><link rel=3D"prefetch=
" href=3D"https://docs.ipfs.io/assets/js/64.f55b82b6.js"><link rel=3D"prefe=
tch" href=3D"https://docs.ipfs.io/assets/js/65.ffa73726.js"><link rel=3D"pr=
efetch" href=3D"https://docs.ipfs.io/assets/js/66.1a7671bf.js"><link rel=3D=
"prefetch" href=3D"https://docs.ipfs.io/assets/js/67.96bc414d.js"><link rel=
=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/68.87bff9f9.js"><link =
rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/69.af45b108.js"><li=
nk rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/7.0fce3c7c.js"><=
link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/70.34e66b60.js=
"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/71.1d3d5eaf=
.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/72.33675=
bc3.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/73.34=
9e1af2.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/74=
.406dd71c.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js=
/75.5013b619.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets=
/js/76.2c3f9257.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/ass=
ets/js/77.dface357.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/=
assets/js/78.ca12f3c4.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.=
io/assets/js/79.04405540.js"><link rel=3D"prefetch" href=3D"https://docs.ip=
fs.io/assets/js/80.fed791dc.js"><link rel=3D"prefetch" href=3D"https://docs=
.ipfs.io/assets/js/81.0c795e41.js"><link rel=3D"prefetch" href=3D"https://d=
ocs.ipfs.io/assets/js/82.da84b161.js"><link rel=3D"prefetch" href=3D"https:=
//docs.ipfs.io/assets/js/83.159d97ee.js"><link rel=3D"prefetch" href=3D"htt=
ps://docs.ipfs.io/assets/js/84.b1555052.js"><link rel=3D"prefetch" href=3D"=
https://docs.ipfs.io/assets/js/85.0414160e.js"><link rel=3D"prefetch" href=
=3D"https://docs.ipfs.io/assets/js/86.bc7d17e5.js"><link rel=3D"prefetch" h=
ref=3D"https://docs.ipfs.io/assets/js/87.f7fa592a.js"><link rel=3D"prefetch=
" href=3D"https://docs.ipfs.io/assets/js/88.64a4161d.js"><link rel=3D"prefe=
tch" href=3D"https://docs.ipfs.io/assets/js/89.664a1476.js"><link rel=3D"pr=
efetch" href=3D"https://docs.ipfs.io/assets/js/9.5575bc89.js"><link rel=3D"=
prefetch" href=3D"https://docs.ipfs.io/assets/js/90.8008c3cf.js"><link rel=
=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/91.903d6a0c.js"><link =
rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/92.19015e1c.js"><li=
nk rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/93.c9d0fa9b.js">=
<link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/94.63753fcf.j=
s"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/95.5fafc2e=
a.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/96.38b7=
dfd4.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/97.a=
8f59e96.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/js/9=
8.50f45be2.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/assets/j=
s/99.a9312c49.js"><link rel=3D"prefetch" href=3D"https://docs.ipfs.io/asset=
s/js/vendors~docsearch.65f29a2c.js">
    <link rel=3D"stylesheet" href=3D"https://docs.ipfs.io/assets/css/0.styl=
es.7261f257.css">
  <meta name=3D"description" content=3D"HTTP API reference for IPFS, the In=
terPlanetary File System."><meta property=3D"article:modified_time" content=
=3D"2021-08-18T16:35:55.000Z"><meta property=3D"og:title" content=3D"HTTP A=
PI"><meta property=3D"og:description" content=3D"HTTP API reference for IPF=
S, the InterPlanetary File System."><meta property=3D"og:type" content=3D"w=
ebsite"><meta property=3D"og:url" content=3D"https://docs.ipfs.io/reference=
/http/api/"><meta property=3D"og:image" content=3D"https://docs.ipfs.io/ima=
ges/social-card.png"><meta name=3D"twitter:title" content=3D"HTTP API"><met=
a name=3D"twitter:description" content=3D"HTTP API reference for IPFS, the =
InterPlanetary File System."><meta name=3D"twitter:url" content=3D"https://=
docs.ipfs.io/reference/http/api/"><meta name=3D"twitter:card" content=3D"su=
mmary_large_image"><meta name=3D"twitter:image" content=3D"https://docs.ipf=
s.io/images/social-card.png"><meta name=3D"twitter:label1" content=3D"Writt=
en by"><meta name=3D"twitter:data1" content=3D"IPFS Team"><meta name=3D"twi=
tter:creator" content=3D"@ipfsbot"><meta name=3D"twitter:site" content=3D"@=
ipfsbot"><meta name=3D"image" content=3D"https://docs.ipfs.io/images/social=
-card.png"><meta name=3D"keywords" content=3D"IPFS, dweb, protocol, libp2p,=
 ipld, multiformats, bitswap, decentralized web, InterPlanetary File System=
, dapp, documentation, docs, Protocol Labs"><meta name=3D"viewport" content=
=3D"width=3Ddevice-width, initial-scale=3D1.0"><meta name=3D"msapplication-=
TileColor" content=3D"#3a0839"><meta name=3D"msapplication-config" content=
=3D"/browserconfig.xml"><meta name=3D"theme-color" content=3D"#5bbad5"></he=
ad>
  <body>
    <div id=3D"app"><div class=3D"theme-container"><header class=3D"navbar"=
><div class=3D"sidebar-button"><svg xmlns=3D"http://www.w3.org/2000/svg" ar=
ia-hidden=3D"true" role=3D"img" viewBox=3D"0 0 448 512" class=3D"icon"><pat=
h fill=3D"currentColor" d=3D"M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627=
 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160=
H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373=
 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.=
627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"><=
/path></svg></div> <a href=3D"https://docs.ipfs.io/" class=3D"home-link rou=
ter-link-active"><img src=3D"https://docs.ipfs.io/images/ipfs-logo.svg" alt=
=3D"IPFS Docs" class=3D"logo"> <span class=3D"site-name can-hide">IPFS Docs=
</span></a> <div class=3D"links" style=3D"max-width: 1052px;"><form id=3D"s=
earch-form" role=3D"search" class=3D"algolia-search-wrapper search-box"><sp=
an class=3D"algolia-autocomplete" style=3D"position: relative; display: inl=
ine-block; direction: ltr;"><input id=3D"algolia-search-input" class=3D"sea=
rch-query ds-input" placeholder=3D"" autocomplete=3D"off" spellcheck=3D"fal=
se" role=3D"combobox" aria-autocomplete=3D"list" aria-expanded=3D"false" ar=
ia-label=3D"search input" aria-owns=3D"algolia-autocomplete-listbox-0" dir=
=3D"auto" style=3D"position: relative; vertical-align: top;"><pre aria-hidd=
en=3D"true" style=3D"position: absolute; visibility: hidden; white-space: p=
re; font-family: Arial; font-size: 14.4px; font-style: normal; font-variant=
: normal; font-weight: 400; word-spacing: 0px; letter-spacing: normal; text=
-indent: 0px; text-rendering: auto; text-transform: none;"></pre><span clas=
s=3D"ds-dropdown-menu" role=3D"listbox" id=3D"algolia-autocomplete-listbox-=
0" style=3D"position: absolute; top: 100%; z-index: 100; display: none; lef=
t: 0px; right: auto;"><div class=3D"ds-dataset-1"></div></span></span></for=
m> <!----></div></header> <div class=3D"sidebar-mask"></div> <aside class=
=3D"sidebar"><!---->  <ul class=3D"sidebar-links"><li><section class=3D"sid=
ebar-group collapsable depth-0"><a href=3D"https://docs.ipfs.io/install/" c=
lass=3D"sidebar-heading clickable"><span>Install</span> <span class=3D"arro=
w right"></span></a> <!----></section></li><li><section class=3D"sidebar-gr=
oup collapsable depth-0"><a href=3D"https://docs.ipfs.io/concepts/" class=
=3D"sidebar-heading clickable"><span>Concepts</span> <span class=3D"arrow r=
ight"></span></a> <!----></section></li><li><section class=3D"sidebar-group=
 collapsable depth-0"><a href=3D"https://docs.ipfs.io/how-to/" class=3D"sid=
ebar-heading clickable"><span>How-tos</span> <span class=3D"arrow right"></=
span></a> <!----></section></li><li><section class=3D"sidebar-group collaps=
able depth-0"><a href=3D"https://docs.ipfs.io/reference/" class=3D"sidebar-=
heading clickable router-link-active open"><span>API &amp; CLI</span> <span=
 class=3D"arrow down"></span></a> <ul class=3D"sidebar-links sidebar-group-=
items"><li><a href=3D"https://docs.ipfs.io/reference/go/api/" class=3D"side=
bar-link">Go-IPFS</a></li><li><a href=3D"https://docs.ipfs.io/reference/js/=
api/" class=3D"sidebar-link">JS-IPFS</a></li><li><a href=3D"https://docs.ip=
fs.io/reference/http/api/" aria-current=3D"page" class=3D"active sidebar-li=
nk">HTTP API</a><ul class=3D"sidebar-sub-headers"><li class=3D"sidebar-sub-=
header"><a href=3D"https://docs.ipfs.io/reference/http/api/#getting-started=
" class=3D"active sidebar-link" aria-current=3D"page">Getting started</a></=
li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#http-status-codes" class=3D"sidebar-link">HTTP status codes</a=
></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/refe=
rence/http/api/#http-commands" class=3D"sidebar-link">HTTP commands</a></li=
><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#api-v0-add" class=3D"sidebar-link">/api/v0/add</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-bitswap-ledger" class=3D"sidebar-link">/api/v0/bitswap/ledger</a></=
li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#api-v0-bitswap-reprovide" class=3D"sidebar-link">/api/v0/bitsw=
ap/reprovide</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://do=
cs.ipfs.io/reference/http/api/#api-v0-bitswap-stat" class=3D"sidebar-link">=
/api/v0/bitswap/stat</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-bitswap-wantlist" class=3D"si=
debar-link">/api/v0/bitswap/wantlist</a></li><li class=3D"sidebar-sub-heade=
r"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-block-get" cl=
ass=3D"sidebar-link">/api/v0/block/get</a></li><li class=3D"sidebar-sub-hea=
der"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-block-put" =
class=3D"sidebar-link">/api/v0/block/put</a></li><li class=3D"sidebar-sub-h=
eader"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-block-rm"=
 class=3D"sidebar-link">/api/v0/block/rm</a></li><li class=3D"sidebar-sub-h=
eader"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-block-sta=
t" class=3D"sidebar-link">/api/v0/block/stat</a></li><li class=3D"sidebar-s=
ub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-boots=
trap" class=3D"sidebar-link">/api/v0/bootstrap</a></li><li class=3D"sidebar=
-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-boo=
tstrap-add" class=3D"sidebar-link">/api/v0/bootstrap/add</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-bootstrap-add-default" class=3D"sidebar-link">/api/v0/bootstrap/add=
/default</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.i=
pfs.io/reference/http/api/#api-v0-bootstrap-list" class=3D"sidebar-link">/a=
pi/v0/bootstrap/list</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-bootstrap-rm" class=3D"sideba=
r-link">/api/v0/bootstrap/rm</a></li><li class=3D"sidebar-sub-header"><a hr=
ef=3D"https://docs.ipfs.io/reference/http/api/#api-v0-bootstrap-rm-all" cla=
ss=3D"sidebar-link">/api/v0/bootstrap/rm/all</a></li><li class=3D"sidebar-s=
ub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-cat" =
class=3D"sidebar-link">/api/v0/cat</a></li><li class=3D"sidebar-sub-header"=
><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-cid-base32" cla=
ss=3D"sidebar-link">/api/v0/cid/base32</a></li><li class=3D"sidebar-sub-hea=
der"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-cid-bases" =
class=3D"sidebar-link">/api/v0/cid/bases</a></li><li class=3D"sidebar-sub-h=
eader"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-cid-codec=
s" class=3D"sidebar-link">/api/v0/cid/codecs</a></li><li class=3D"sidebar-s=
ub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-cid-f=
ormat" class=3D"sidebar-link">/api/v0/cid/format</a></li><li class=3D"sideb=
ar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-c=
id-hashes" class=3D"sidebar-link">/api/v0/cid/hashes</a></li><li class=3D"s=
idebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-=
v0-commands" class=3D"sidebar-link">/api/v0/commands</a></li><li class=3D"s=
idebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-=
v0-config" class=3D"sidebar-link">/api/v0/config</a></li><li class=3D"sideb=
ar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-c=
onfig-edit" class=3D"sidebar-link">/api/v0/config/edit</a></li><li class=3D=
"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#ap=
i-v0-config-profile-apply" class=3D"sidebar-link">/api/v0/config/profile/ap=
ply</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#api-v0-config-replace" class=3D"sidebar-link">/api/v0=
/config/replace</a></li><li class=3D"sidebar-sub-header"><a href=3D"https:/=
/docs.ipfs.io/reference/http/api/#api-v0-config-show" class=3D"sidebar-link=
">/api/v0/config/show</a></li><li class=3D"sidebar-sub-header"><a href=3D"h=
ttps://docs.ipfs.io/reference/http/api/#api-v0-dag-export" class=3D"sidebar=
-link">/api/v0/dag/export</a></li><li class=3D"sidebar-sub-header"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dag-get" class=3D"sideb=
ar-link">/api/v0/dag/get</a></li><li class=3D"sidebar-sub-header"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dag-import" class=3D"si=
debar-link">/api/v0/dag/import</a></li><li class=3D"sidebar-sub-header"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dag-put" class=3D"s=
idebar-link">/api/v0/dag/put</a></li><li class=3D"sidebar-sub-header"><a hr=
ef=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dag-resolve" class=3D=
"sidebar-link">/api/v0/dag/resolve</a></li><li class=3D"sidebar-sub-header"=
><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dag-stat" class=
=3D"sidebar-link">/api/v0/dag/stat</a></li><li class=3D"sidebar-sub-header"=
><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dht-findpeer" c=
lass=3D"sidebar-link">/api/v0/dht/findpeer</a></li><li class=3D"sidebar-sub=
-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dht-fin=
dprovs" class=3D"sidebar-link">/api/v0/dht/findprovs</a></li><li class=3D"s=
idebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-=
v0-dht-get" class=3D"sidebar-link">/api/v0/dht/get</a></li><li class=3D"sid=
ebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0=
-dht-provide" class=3D"sidebar-link">/api/v0/dht/provide</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-dht-put" class=3D"sidebar-link">/api/v0/dht/put</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-dht-query" class=3D"sidebar-link">/api/v0/dht/query</a></li><li cla=
ss=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#api-v0-diag-cmds" class=3D"sidebar-link">/api/v0/diag/cmds</a></li><li c=
lass=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#api-v0-diag-cmds-clear" class=3D"sidebar-link">/api/v0/diag/cmds/clear=
</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#api-v0-diag-cmds-set-time" class=3D"sidebar-link">/api/v=
0/diag/cmds/set-time</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-diag-sys" class=3D"sidebar-li=
nk">/api/v0/diag/sys</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-dns" class=3D"sidebar-link">/=
api/v0/dns</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#api-v0-file-ls" class=3D"sidebar-link">/api/v0=
/file/ls</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.i=
pfs.io/reference/http/api/#api-v0-files-chcid" class=3D"sidebar-link">/api/=
v0/files/chcid</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://=
docs.ipfs.io/reference/http/api/#api-v0-files-cp" class=3D"sidebar-link">/a=
pi/v0/files/cp</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://=
docs.ipfs.io/reference/http/api/#api-v0-files-flush" class=3D"sidebar-link"=
>/api/v0/files/flush</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-files-ls" class=3D"sidebar-li=
nk">/api/v0/files/ls</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-files-mkdir" class=3D"sidebar=
-link">/api/v0/files/mkdir</a></li><li class=3D"sidebar-sub-header"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#api-v0-files-mv" class=3D"side=
bar-link">/api/v0/files/mv</a></li><li class=3D"sidebar-sub-header"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#api-v0-files-read" class=3D"si=
debar-link">/api/v0/files/read</a></li><li class=3D"sidebar-sub-header"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-files-rm" class=3D"=
sidebar-link">/api/v0/files/rm</a></li><li class=3D"sidebar-sub-header"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-files-stat" class=
=3D"sidebar-link">/api/v0/files/stat</a></li><li class=3D"sidebar-sub-heade=
r"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-files-write" =
class=3D"sidebar-link">/api/v0/files/write</a></li><li class=3D"sidebar-sub=
-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-filesto=
re-dups" class=3D"sidebar-link">/api/v0/filestore/dups</a></li><li class=3D=
"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#ap=
i-v0-filestore-ls" class=3D"sidebar-link">/api/v0/filestore/ls</a></li><li =
class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http=
/api/#api-v0-filestore-verify" class=3D"sidebar-link">/api/v0/filestore/ver=
ify</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#api-v0-get" class=3D"sidebar-link">/api/v0/get</a></l=
i><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/referenc=
e/http/api/#api-v0-id" class=3D"sidebar-link">/api/v0/id</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-key-export" class=3D"sidebar-link">/api/v0/key/export</a></li><li c=
lass=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#api-v0-key-gen" class=3D"sidebar-link">/api/v0/key/gen</a></li><li cla=
ss=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#api-v0-key-import" class=3D"sidebar-link">/api/v0/key/import</a></li><li=
 class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#api-v0-key-list" class=3D"sidebar-link">/api/v0/key/list</a></li><li=
 class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#api-v0-key-rename" class=3D"sidebar-link">/api/v0/key/rename</a></li=
><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#api-v0-key-rm" class=3D"sidebar-link">/api/v0/key/rm</a></li><li=
 class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#api-v0-key-rotate" class=3D"sidebar-link">/api/v0/key/rotate</a></li=
><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#api-v0-log-level" class=3D"sidebar-link">/api/v0/log/level</a></=
li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#api-v0-log-ls" class=3D"sidebar-link">/api/v0/log/ls</a></li><=
li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#api-v0-log-tail" class=3D"sidebar-link">/api/v0/log/tail</a></li><=
li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#api-v0-ls" class=3D"sidebar-link">/api/v0/ls</a></li><li class=3D"=
sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api=
-v0-mount" class=3D"sidebar-link">/api/v0/mount</a></li><li class=3D"sideba=
r-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-na=
me-publish" class=3D"sidebar-link">/api/v0/name/publish</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-name-pubsub-cancel" class=3D"sidebar-link">/api/v0/name/pubsub/canc=
el</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io=
/reference/http/api/#api-v0-name-pubsub-state" class=3D"sidebar-link">/api/=
v0/name/pubsub/state</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-name-pubsub-subs" class=3D"si=
debar-link">/api/v0/name/pubsub/subs</a></li><li class=3D"sidebar-sub-heade=
r"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-name-resolve"=
 class=3D"sidebar-link">/api/v0/name/resolve</a></li><li class=3D"sidebar-s=
ub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-objec=
t-data" class=3D"sidebar-link">/api/v0/object/data</a></li><li class=3D"sid=
ebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0=
-object-diff" class=3D"sidebar-link">/api/v0/object/diff</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-object-get" class=3D"sidebar-link">/api/v0/object/get</a></li><li c=
lass=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#api-v0-object-links" class=3D"sidebar-link">/api/v0/object/links</a></=
li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#api-v0-object-new" class=3D"sidebar-link">/api/v0/object/new</=
a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/ref=
erence/http/api/#api-v0-object-patch-add-link" class=3D"sidebar-link">/api/=
v0/object/patch/add-link</a></li><li class=3D"sidebar-sub-header"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#api-v0-object-patch-append-dat=
a" class=3D"sidebar-link">/api/v0/object/patch/append-data</a></li><li clas=
s=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#api-v0-object-patch-rm-link" class=3D"sidebar-link">/api/v0/object/patch/=
rm-link</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ip=
fs.io/reference/http/api/#api-v0-object-patch-set-data" class=3D"sidebar-li=
nk">/api/v0/object/patch/set-data</a></li><li class=3D"sidebar-sub-header">=
<a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-object-put" clas=
s=3D"sidebar-link">/api/v0/object/put</a></li><li class=3D"sidebar-sub-head=
er"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-object-stat"=
 class=3D"sidebar-link">/api/v0/object/stat</a></li><li class=3D"sidebar-su=
b-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-p2p-cl=
ose" class=3D"sidebar-link">/api/v0/p2p/close</a></li><li class=3D"sidebar-=
sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-p2p-=
forward" class=3D"sidebar-link">/api/v0/p2p/forward</a></li><li class=3D"si=
debar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v=
0-p2p-listen" class=3D"sidebar-link">/api/v0/p2p/listen</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-p2p-ls" class=3D"sidebar-link">/api/v0/p2p/ls</a></li><li class=3D"=
sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api=
-v0-p2p-stream-close" class=3D"sidebar-link">/api/v0/p2p/stream/close</a></=
li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#api-v0-p2p-stream-ls" class=3D"sidebar-link">/api/v0/p2p/strea=
m/ls</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#api-v0-pin-add" class=3D"sidebar-link">/api/v0/pin/a=
dd</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io=
/reference/http/api/#api-v0-pin-ls" class=3D"sidebar-link">/api/v0/pin/ls</=
a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/ref=
erence/http/api/#api-v0-pin-remote-add" class=3D"sidebar-link">/api/v0/pin/=
remote/add</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#api-v0-pin-remote-ls" class=3D"sidebar-link">/=
api/v0/pin/remote/ls</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-pin-remote-rm" class=3D"sideb=
ar-link">/api/v0/pin/remote/rm</a></li><li class=3D"sidebar-sub-header"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-remote-service-=
add" class=3D"sidebar-link">/api/v0/pin/remote/service/add</a></li><li clas=
s=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#api-v0-pin-remote-service-ls" class=3D"sidebar-link">/api/v0/pin/remote/s=
ervice/ls</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.=
ipfs.io/reference/http/api/#api-v0-pin-remote-service-rm" class=3D"sidebar-=
link">/api/v0/pin/remote/service/rm</a></li><li class=3D"sidebar-sub-header=
"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-rm" class=
=3D"sidebar-link">/api/v0/pin/rm</a></li><li class=3D"sidebar-sub-header"><=
a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-update" class=
=3D"sidebar-link">/api/v0/pin/update</a></li><li class=3D"sidebar-sub-heade=
r"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-verify" c=
lass=3D"sidebar-link">/api/v0/pin/verify</a></li><li class=3D"sidebar-sub-h=
eader"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-ping" cla=
ss=3D"sidebar-link">/api/v0/ping</a></li><li class=3D"sidebar-sub-header"><=
a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pubsub-ls" class=
=3D"sidebar-link">/api/v0/pubsub/ls</a></li><li class=3D"sidebar-sub-header=
"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pubsub-peers" =
class=3D"sidebar-link">/api/v0/pubsub/peers</a></li><li class=3D"sidebar-su=
b-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pubsub=
-pub" class=3D"sidebar-link">/api/v0/pubsub/pub</a></li><li class=3D"sideba=
r-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pu=
bsub-sub" class=3D"sidebar-link">/api/v0/pubsub/sub</a></li><li class=3D"si=
debar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v=
0-refs" class=3D"sidebar-link">/api/v0/refs</a></li><li class=3D"sidebar-su=
b-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-refs-l=
ocal" class=3D"sidebar-link">/api/v0/refs/local</a></li><li class=3D"sideba=
r-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-re=
po-fsck" class=3D"sidebar-link">/api/v0/repo/fsck</a></li><li class=3D"side=
bar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-=
repo-gc" class=3D"sidebar-link">/api/v0/repo/gc</a></li><li class=3D"sideba=
r-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-re=
po-stat" class=3D"sidebar-link">/api/v0/repo/stat</a></li><li class=3D"side=
bar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-=
repo-verify" class=3D"sidebar-link">/api/v0/repo/verify</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-repo-version" class=3D"sidebar-link">/api/v0/repo/version</a></li><=
li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#api-v0-resolve" class=3D"sidebar-link">/api/v0/resolve</a></li><li=
 class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#api-v0-shutdown" class=3D"sidebar-link">/api/v0/shutdown</a></li><li=
 class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#api-v0-stats-bitswap" class=3D"sidebar-link">/api/v0/stats/bitswap</=
a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/ref=
erence/http/api/#api-v0-stats-bw" class=3D"sidebar-link">/api/v0/stats/bw</=
a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/ref=
erence/http/api/#api-v0-stats-dht" class=3D"sidebar-link">/api/v0/stats/dht=
</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#api-v0-stats-provide" class=3D"sidebar-link">/api/v0/sta=
ts/provide</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#api-v0-stats-repo" class=3D"sidebar-link">/api=
/v0/stats/repo</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://=
docs.ipfs.io/reference/http/api/#api-v0-swarm-addrs" class=3D"sidebar-link"=
>/api/v0/swarm/addrs</a></li><li class=3D"sidebar-sub-header"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-swarm-addrs-listen" class=3D"=
sidebar-link">/api/v0/swarm/addrs/listen</a></li><li class=3D"sidebar-sub-h=
eader"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-swarm-add=
rs-local" class=3D"sidebar-link">/api/v0/swarm/addrs/local</a></li><li clas=
s=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#api-v0-swarm-connect" class=3D"sidebar-link">/api/v0/swarm/connect</a></l=
i><li class=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/referenc=
e/http/api/#api-v0-swarm-disconnect" class=3D"sidebar-link">/api/v0/swarm/d=
isconnect</a></li><li class=3D"sidebar-sub-header"><a href=3D"https://docs.=
ipfs.io/reference/http/api/#api-v0-swarm-filters" class=3D"sidebar-link">/a=
pi/v0/swarm/filters</a></li><li class=3D"sidebar-sub-header"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#api-v0-swarm-filters-add" class=3D"si=
debar-link">/api/v0/swarm/filters/add</a></li><li class=3D"sidebar-sub-head=
er"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-swarm-filter=
s-rm" class=3D"sidebar-link">/api/v0/swarm/filters/rm</a></li><li class=3D"=
sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api=
-v0-swarm-peers" class=3D"sidebar-link">/api/v0/swarm/peers</a></li><li cla=
ss=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#api-v0-tar-add" class=3D"sidebar-link">/api/v0/tar/add</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-tar-cat" class=3D"sidebar-link">/api/v0/tar/cat</a></li><li class=
=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#api-v0-update" class=3D"sidebar-link">/api/v0/update</a></li><li class=3D"=
sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/api/#api=
-v0-urlstore-add" class=3D"sidebar-link">/api/v0/urlstore/add</a></li><li c=
lass=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#api-v0-version" class=3D"sidebar-link">/api/v0/version</a></li><li cla=
ss=3D"sidebar-sub-header"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#api-v0-version-deps" class=3D"sidebar-link">/api/v0/version/deps</a></li=
></ul></li><li><a href=3D"https://docs.ipfs.io/reference/cli/" class=3D"sid=
ebar-link">Command-line reference</a></li></ul></section></li><li><section =
class=3D"sidebar-group collapsable depth-0"><a href=3D"https://docs.ipfs.io=
/community/" class=3D"sidebar-heading clickable"><span>Community</span> <sp=
an class=3D"arrow right"></span></a> <!----></section></li><li><section cla=
ss=3D"sidebar-group collapsable depth-0"><a href=3D"https://docs.ipfs.io/pr=
oject/" class=3D"sidebar-heading clickable"><span>Project</span> <span clas=
s=3D"arrow right"></span></a> <!----></section></li></ul> </aside> <main da=
ta-v-4f5abb4a=3D"" class=3D"page"> <div data-v-4f5abb4a=3D"" class=3D"theme=
-default-content content__default"><h1 id=3D"http-api-reference"><a href=3D=
"https://docs.ipfs.io/reference/http/api/#http-api-reference" class=3D"head=
er-anchor">#</a> HTTP API reference</h1> <p><em>Generated on 2021-06-23, fr=
om go-ipfs v0.9.0.</em></p> <p>When an IPFS node is running as a daemon, it=
 exposes an HTTP API that allows you to control the node and run the same c=
ommands you can from the command line.</p> <p>In many cases, using this API=
 this is preferable to embedding IPFS directly in your program =E2=80=94 it=
 allows you to maintain peer connections that are longer lived than your ap=
p and you can keep a single IPFS node running instead of several if your ap=
p can be launched multiple times. In fact, the <code>ipfs</code> CLI comman=
ds use this API when operating in online mode.</p> <div class=3D"custom-blo=
ck tip"><p class=3D"custom-block-title">TIP</p> <p>This document was autoge=
nerated from go-ipfs. For issues and support, check out the <a href=3D"http=
s://github.com/ipfs/http-api-docs" target=3D"_blank" rel=3D"noopener norefe=
rrer">http-api-docs<span><svg xmlns=3D"http://www.w3.org/2000/svg" aria-hid=
den=3D"true" focusable=3D"false" x=3D"0px" y=3D"0px" viewBox=3D"0 0 100 100=
" width=3D"15" height=3D"15" class=3D"icon outbound"><path fill=3D"currentC=
olor" d=3D"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,=
0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill=
=3D"currentColor" points=3D"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37=
.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class=3D=
"sr-only">(opens new window)</span></span></a> repository on GitHub.</p></d=
iv> <h2 id=3D"getting-started"><a href=3D"https://docs.ipfs.io/reference/ht=
tp/api/#getting-started" class=3D"header-anchor">#</a> Getting started</h2>=
 <h3 id=3D"alignment-with-cli-commands"><a href=3D"https://docs.ipfs.io/ref=
erence/http/api/#alignment-with-cli-commands" class=3D"header-anchor">#</a>=
 Alignment with CLI commands</h3> <p>The HTTP API under <code>/api/v0/</cod=
e> is an RPC-style API over HTTP, not a REST API.</p> <p><a href=3D"https:/=
/docs.ipfs.io/reference/cli/" class=3D"">Every command</a> usable from the =
CLI is also available through the HTTP API. For example:</p> <div class=3D"=
language-sh extra-class"><pre class=3D"language-sh"><code><span class=3D"to=
ken operator">&gt;</span> ipfs swarm peers
/ip4/104.131.131.82/tcp/4001/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQL=
uvuJ
/ip4/104.236.151.122/tcp/4001/p2p/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJg=
W36yx
/ip4/104.236.176.52/tcp/4001/p2p/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaH=
ca9z

<span class=3D"token operator">&gt;</span> <span class=3D"token function">c=
url</span> -X POST http://127.0.0.1:5001/api/v0/swarm/peers
<span class=3D"token punctuation">{</span>
  <span class=3D"token string">"Strings"</span><span class=3D"token builtin=
 class-name">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"/ip4/104.131.131.82/tcp/4001/p2p/QmaCpDMG=
vV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ"</span>,
    <span class=3D"token string">"/ip4/104.236.151.122/tcp/4001/p2p/QmSoLju=
6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"</span>,
    <span class=3D"token string">"/ip4/104.236.176.52/tcp/4001/p2p/QmSoLnSG=
ccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z"</span>,
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>
</code></pre></div><h3 id=3D"arguments"><a href=3D"https://docs.ipfs.io/ref=
erence/http/api/#arguments" class=3D"header-anchor">#</a> Arguments</h3> <p=
>Arguments are added through the special query string key "arg":</p> <div c=
lass=3D"language- extra-class"><pre class=3D"language-text"><code>&gt; curl=
 -X POST "http://127.0.0.1:5001/api/v0/swarm/disconnect?arg=3D/ip4/54.93.11=
3.247/tcp/48131/p2p/QmUDS3nsBD1X4XK5Jo836fed7SErTyTuQzRqWaiQAyBYMP"
{
  "Strings": [
    "disconnect QmUDS3nsBD1X4XK5Jo836fed7SErTyTuQzRqWaiQAyBYMP success",
  ]
}
</code></pre></div><p>Note that it can be used multiple times to signify mu=
ltiple arguments. Boolean <code>bool</code> values may have the value <code=
>true</code> or <code>false</code>.</p> <h3 id=3D"flags"><a href=3D"https:/=
/docs.ipfs.io/reference/http/api/#flags" class=3D"header-anchor">#</a> Flag=
s</h3> <p>Flags are added through the query string. For example, the <code>=
--encoding=3Djson</code> flag is the <code>&amp;encoding=3Djson</code> quer=
y parameter below:</p> <div class=3D"language- extra-class"><pre class=3D"l=
anguage-text"><code>&gt; curl -X POST "http://127.0.0.1:5001/api/v0/object/=
get?arg=3DQmaaqrHyAQm7gALkRW8DcfGX3u8q9rWKnxEMmf7m9z515w&amp;encoding=3Djso=
n"
{
  "Links": [
    {
      "Name": "index.html",
      "Hash": "QmYftndCvcEiuSZRX7njywX2AGSeHY2ASa7VryCq1mKwEw",
      "Size": 1700
    },
    {
      "Name": "static",
      "Hash": "QmdtWFiasJeh2ymW3TD2cLHYxn1ryTuWoNpwieFyJriGTS",
      "Size": 2428803
    }
  ],
  "Data": "CAE=3D"
}
</code></pre></div><p>Some flags may be repeated. For example, the <code>--=
status</code> flag may be reused as below:</p> <div class=3D"language- extr=
a-class"><pre class=3D"language-text"><code>&gt; curl -X POST "http://127.0=
.0.1:5001/api/v0/pin/remote/service/ls?name=3Dmyservice&amp;status=3Dpinned=
&amp;status=3Dpinning"
</code></pre></div><div class=3D"custom-block tip"><p class=3D"custom-block=
-title">TIP</p> <p>Some arguments may belong only to the CLI but appear her=
e too. These usually belong to client-side processing of input, particularl=
y in the <code>add</code> command.</p> <p>Additionally, as a convenience ce=
rtain CLI commands may allow passing repeated flags as delimited lists such=
 as<br> <code>ipfs pin remote service ls --status=3Dpinned,pinning</code>; =
however, this does not apply to the HTTP API.</p></div> <h2 id=3D"http-stat=
us-codes"><a href=3D"https://docs.ipfs.io/reference/http/api/#http-status-c=
odes" class=3D"header-anchor">#</a> HTTP status codes</h2> <p>Status codes =
used at the RPC layer are simple:</p> <ul><li><code>200</code> - The reques=
t was processed or is being processed (streaming)</li> <li><code>500</code>=
 - RPC endpoint returned an error</li> <li><code>400</code> - Malformed RPC=
, argument type error, etc</li> <li><code>403</code> - RPC call forbidden</=
li> <li><code>404</code> - RPC endpoint doesn't exist</li> <li><code>405</c=
ode> - HTTP Method Not Allowed</li></ul> <p>Status code <code>500</code> me=
ans that the function <em>does</em> exist, but IPFS was not able to fulfil =
the request because of an error. To know that reason, you have to look at t=
he the error message that is usually returned with the body of the response=
 (if no error, check the daemon logs).</p> <p>Streaming endpoints fail as a=
bove, unless they have started streaming. That means they will have sent a =
<code>200</code> status code already. If an error happens during the stream=
, it will be included in a Trailer response header (some endpoints may addi=
tionally include an error in the last streamed object).</p> <p>A <code>405<=
/code>error may mean that you are using the wrong HTTP method (i.e. GET ins=
tead of POST), or that you are not allowed to call that method (i.e. due to=
 CORS restrictions when making a request from a browser).</p> <h2 id=3D"htt=
p-commands"><a href=3D"https://docs.ipfs.io/reference/http/api/#http-comman=
ds" class=3D"header-anchor">#</a> HTTP commands</h2> <h2 id=3D"api-v0-add">=
<a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-add" class=3D"he=
ader-anchor">#</a> /api/v0/add</h2> <p>Add a file or directory to IPFS.</p>=
 <h3 id=3D"arguments-2"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#arguments-2" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>qu=
iet</code> [bool]: Write minimal output. Required: no.</li> <li><code>quiet=
er</code> [bool]: Write only final hash. Required: no.</li> <li><code>silen=
t</code> [bool]: Write no output. Required: no.</li> <li><code>progress</co=
de> [bool]: Stream progress data. Required: no.</li> <li><code>trickle</cod=
e> [bool]: Use trickle-dag format for dag generation. Required: no.</li> <l=
i><code>only-hash</code> [bool]: Only chunk and hash - do not write to disk=
. Required: no.</li> <li><code>wrap-with-directory</code> [bool]: Wrap file=
s with a directory object. Required: no.</li> <li><code>chunker</code> [str=
ing]: Chunking algorithm, size-[bytes], rabin-[min]-[avg]-[max] or buzhash.=
 Default: <code>size-262144</code>. Required: no.</li> <li><code>pin</code>=
 [bool]: Pin this object when adding. Default: <code>true</code>. Required:=
 no.</li> <li><code>raw-leaves</code> [bool]: Use raw blocks for leaf nodes=
. (experimental). Required: no.</li> <li><code>nocopy</code> [bool]: Add th=
e file using filestore. Implies raw-leaves. (experimental). Required: no.</=
li> <li><code>fscache</code> [bool]: Check the filestore for pre-existing b=
locks. (experimental). Required: no.</li> <li><code>cid-version</code> [int=
]: CID version. Defaults to 0 unless an option that depends on CIDv1 is pas=
sed. (experimental). Required: no.</li> <li><code>hash</code> [string]: Has=
h function to use. Implies CIDv1 if not sha2-256. (experimental). Default: =
<code>sha2-256</code>. Required: no.</li> <li><code>inline</code> [bool]: I=
nline small blocks into CIDs. (experimental). Required: no.</li> <li><code>=
inline-limit</code> [int]: Maximum block size to inline. (experimental). De=
fault: <code>32</code>. Required: no.</li></ul> <h3 id=3D"request-body"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#request-body" class=3D"hea=
der-anchor">#</a> Request Body</h3> <p>Argument <code>path</code> is of fil=
e type. This endpoint expects one or several files (depending on the comman=
d) in the body of the request as 'multipart/form-data'.</p> <p>The <code>ad=
d</code> command not only allows adding files, but also uploading directori=
es and complex hierarchies.</p> <p>This happens as follows: Every part in t=
he multipart request is a <em>directory</em> or a <em>file</em> to be added=
 to IPFS.</p> <p>Directory parts have a special content type <code>applicat=
ion/x-directory</code>. These parts do not carry any data. The part headers=
 look as follows:</p> <div class=3D"language- extra-class"><pre class=3D"la=
nguage-text"><code>Content-Disposition: form-data; name=3D"file"; filename=
=3D"folderName"
Content-Type: application/x-directory
</code></pre></div><p>File parts carry the file payload after the following=
 headers:</p> <div class=3D"language- extra-class"><pre class=3D"language-t=
ext"><code>Abspath: /absolute/path/to/file.txt
Content-Disposition: form-data; name=3D"file"; filename=3D"folderName%2Ffil=
e.txt"
Content-Type: application/octet-stream

...contents...
</code></pre></div><p>The above file includes its path in the "folderName/f=
ile.txt" hierarchy and IPFS will therefore be able to add it inside "folder=
Name". The parts declaring the directories are optional when they have file=
s inside and will be inferred from the filenames. In any case, a depth-firs=
t traversal of the directory tree is recommended to order the different par=
ts making the request.</p> <p>The <code>Abspath</code> header is included f=
or filestore/urlstore features that are enabled with the <code>nocopy</code=
> option and it can be set to the location of the file in the filesystem (w=
ithin the IPFS root), or to its full web URL.</p> <h3 id=3D"response"><a hr=
ef=3D"https://docs.ipfs.io/reference/http/api/#response" class=3D"header-an=
chor">#</a> Response</h3> <p>On success, the call to this endpoint will ret=
urn with 200 and the following body:</p> <div class=3D"language-json extra-=
class"><pre class=3D"language-json"><code><span class=3D"token punctuation"=
>{</span>
  <span class=3D"token property">"Bytes"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;int64&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#curl-example" class=3D"header-anchor">#</a> cURL Exampl=
e</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001/api/v=
0/add?quiet=3D&lt;value&gt;&amp;quieter=3D&lt;value&gt;&amp;silent=3D&lt;va=
lue&gt;&amp;progress=3D&lt;value&gt;&amp;trickle=3D&lt;value&gt;&amp;only-h=
ash=3D&lt;value&gt;&amp;wrap-with-directory=3D&lt;value&gt;&amp;chunker=3Ds=
ize-262144&amp;pin=3Dtrue&amp;raw-leaves=3D&lt;value&gt;&amp;nocopy=3D&lt;v=
alue&gt;&amp;fscache=3D&lt;value&gt;&amp;cid-version=3D&lt;value&gt;&amp;ha=
sh=3Dsha2-256&amp;inline=3D&lt;value&gt;&amp;inline-limit=3D32"</code></p> =
<hr> <h2 id=3D"api-v0-bitswap-ledger"><a href=3D"https://docs.ipfs.io/refer=
ence/http/api/#api-v0-bitswap-ledger" class=3D"header-anchor">#</a> /api/v0=
/bitswap/ledger</h2> <p>Show the current ledger for a peer.</p> <h3 id=3D"a=
rguments-3"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-3=
" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [st=
ring]: The PeerID (B58) of the ledger to inspect. Required: <strong>yes</st=
rong>.</li></ul> <h3 id=3D"response-2"><a href=3D"https://docs.ipfs.io/refe=
rence/http/api/#response-2" class=3D"header-anchor">#</a> Response</h3> <p>=
On success, the call to this endpoint will return with 200 and the followin=
g body:</p> <div class=3D"language-json extra-class"><pre class=3D"language=
-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Exchanged"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span c=
lass=3D"token punctuation">,</span>
  <span class=3D"token property">"Peer"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Recv"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Sent"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Value"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;float64&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-2"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#curl-example-2" class=3D"header-anchor">#</a> cURL Ex=
ample</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bitswap/ledg=
er?arg=3D&lt;peer&gt;"</code></p> <hr> <h2 id=3D"api-v0-bitswap-reprovide">=
<a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-bitswap-reprovid=
e" class=3D"header-anchor">#</a> /api/v0/bitswap/reprovide</h2> <p>Trigger =
reprovider.</p> <h3 id=3D"arguments-4"><a href=3D"https://docs.ipfs.io/refe=
rence/http/api/#arguments-4" class=3D"header-anchor">#</a> Arguments</h3> <=
p>This endpoint takes no arguments.</p> <h3 id=3D"response-3"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#response-3" class=3D"header-anchor">=
#</a> Response</h3> <p>On success, the call to this endpoint will return wi=
th 200 and the following body:</p> <div class=3D"language-json extra-class"=
><pre class=3D"language-json"><code>This endpoint returns a `text/plain` re=
sponse body.
</code></pre></div><h3 id=3D"curl-example-3"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#curl-example-3" class=3D"header-anchor">#</a> cURL Ex=
ample</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bitswap/repr=
ovide"</code></p> <hr> <h2 id=3D"api-v0-bitswap-stat"><a href=3D"https://do=
cs.ipfs.io/reference/http/api/#api-v0-bitswap-stat" class=3D"header-anchor"=
>#</a> /api/v0/bitswap/stat</h2> <p>Show some diagnostic information on the=
 bitswap agent.</p> <h3 id=3D"arguments-5"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#arguments-5" class=3D"header-anchor">#</a> Arguments</h=
3> <ul><li><code>verbose</code> [bool]: Print extra information. Required: =
no.</li> <li><code>human</code> [bool]: Print sizes in human readable forma=
t (e.g., 1K 234M 2G). Required: no.</li></ul> <h3 id=3D"response-4"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#response-4" class=3D"header-an=
chor">#</a> Response</h3> <p>On success, the call to this endpoint will ret=
urn with 200 and the following body:</p> <div class=3D"language-json extra-=
class"><pre class=3D"language-json"><code><span class=3D"token punctuation"=
>{</span>
  <span class=3D"token property">"BlocksReceived"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><s=
pan class=3D"token punctuation">,</span>
  <span class=3D"token property">"BlocksSent"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span =
class=3D"token punctuation">,</span>
  <span class=3D"token property">"DataReceived"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><spa=
n class=3D"token punctuation">,</span>
  <span class=3D"token property">"DataSent"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"DupBlksReceived"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><=
span class=3D"token punctuation">,</span>
  <span class=3D"token property">"DupDataReceived"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><=
span class=3D"token punctuation">,</span>
  <span class=3D"token property">"MessagesReceived"</span><span class=3D"to=
ken operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>=
<span class=3D"token punctuation">,</span>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"ProvideBufLen"</span><span class=3D"token=
 operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span =
class=3D"token punctuation">,</span>
  <span class=3D"token property">"Wantlist"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"/"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-4"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#curl-example-4" class=3D"header-anchor">#</a> cURL Ex=
ample</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bitswap/stat=
?verbose=3D&lt;value&gt;&amp;human=3D&lt;value&gt;"</code></p> <hr> <h2 id=
=3D"api-v0-bitswap-wantlist"><a href=3D"https://docs.ipfs.io/reference/http=
/api/#api-v0-bitswap-wantlist" class=3D"header-anchor">#</a> /api/v0/bitswa=
p/wantlist</h2> <p>Show blocks currently on the wantlist.</p> <h3 id=3D"arg=
uments-6"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-6" =
class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>peer</code> [str=
ing]: Specify which peer to show wantlist for. Required: no.</li></ul> <h3 =
id=3D"response-5"><a href=3D"https://docs.ipfs.io/reference/http/api/#respo=
nse-5" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call =
to this endpoint will return with 200 and the following body:</p> <div clas=
s=3D"language-json extra-class"><pre class=3D"language-json"><code><span cl=
ass=3D"token punctuation">{</span>
  <span class=3D"token property">"Keys"</span><span class=3D"token operator=
">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"/"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-5"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#curl-example-5" class=3D"header-anchor">#</a> cURL Ex=
ample</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bitswap/want=
list?peer=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-block-get"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#api-v0-block-get" class=3D"=
header-anchor">#</a> /api/v0/block/get</h2> <p>Get a raw IPFS block.</p> <h=
3 id=3D"arguments-7"><a href=3D"https://docs.ipfs.io/reference/http/api/#ar=
guments-7" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</=
code> [string]: The base58 multihash of an existing block to get. Required:=
 <strong>yes</strong>.</li></ul> <h3 id=3D"response-6"><a href=3D"https://d=
ocs.ipfs.io/reference/http/api/#response-6" class=3D"header-anchor">#</a> R=
esponse</h3> <p>On success, the call to this endpoint will return with 200 =
and the following body:</p> <div class=3D"language-json extra-class"><pre c=
lass=3D"language-json"><code>This endpoint returns a `text/plain` response =
body.
</code></pre></div><h3 id=3D"curl-example-6"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#curl-example-6" class=3D"header-anchor">#</a> cURL Ex=
ample</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/block/get?ar=
g=3D&lt;key&gt;"</code></p> <hr> <h2 id=3D"api-v0-block-put"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#api-v0-block-put" class=3D"header-anc=
hor">#</a> /api/v0/block/put</h2> <p>Store input as an IPFS block.</p> <h3 =
id=3D"arguments-8"><a href=3D"https://docs.ipfs.io/reference/http/api/#argu=
ments-8" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>format<=
/code> [string]: cid format for blocks to be created with. Required: no.</l=
i> <li><code>mhtype</code> [string]: multihash hash function. Default: <cod=
e>sha2-256</code>. Required: no.</li> <li><code>mhlen</code> [int]: multiha=
sh hash length. Default: <code>-1</code>. Required: no.</li> <li><code>pin<=
/code> [bool]: pin added blocks recursively. Default: <code>false</code>. R=
equired: no.</li></ul> <h3 id=3D"request-body-2"><a href=3D"https://docs.ip=
fs.io/reference/http/api/#request-body-2" class=3D"header-anchor">#</a> Req=
uest Body</h3> <p>Argument <code>data</code> is of file type. This endpoint=
 expects one or several files (depending on the command) in the body of the=
 request as 'multipart/form-data'.</p> <h3 id=3D"response-7"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#response-7" class=3D"header-anchor">#=
</a> Response</h3> <p>On success, the call to this endpoint will return wit=
h 200 and the following body:</p> <div class=3D"language-json extra-class">=
<pre class=3D"language-json"><code><span class=3D"token punctuation">{</spa=
n>
  <span class=3D"token property">"Key"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-7"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#curl-example-7" class=3D"header-anchor">#</a> cURL Ex=
ample</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001/a=
pi/v0/block/put?format=3D&lt;value&gt;&amp;mhtype=3Dsha2-256&amp;mhlen=3D-1=
&amp;pin=3Dfalse"</code></p> <hr> <h2 id=3D"api-v0-block-rm"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#api-v0-block-rm" class=3D"header-anch=
or">#</a> /api/v0/block/rm</h2> <p>Remove IPFS block(s).</p> <h3 id=3D"argu=
ments-9"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-9" c=
lass=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [strin=
g]: Bash58 encoded multihash of block(s) to remove. Required: <strong>yes</=
strong>.</li> <li><code>force</code> [bool]: Ignore nonexistent blocks. Req=
uired: no.</li> <li><code>quiet</code> [bool]: Write minimal output. Requir=
ed: no.</li></ul> <h3 id=3D"response-8"><a href=3D"https://docs.ipfs.io/ref=
erence/http/api/#response-8" class=3D"header-anchor">#</a> Response</h3> <p=
>On success, the call to this endpoint will return with 200 and the followi=
ng body:</p> <div class=3D"language-json extra-class"><pre class=3D"languag=
e-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Error"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-8"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#curl-example-8" class=3D"header-anchor">#</a> cURL Ex=
ample</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/block/rm?arg=
=3D&lt;hash&gt;&amp;force=3D&lt;value&gt;&amp;quiet=3D&lt;value&gt;"</code>=
</p> <hr> <h2 id=3D"api-v0-block-stat"><a href=3D"https://docs.ipfs.io/refe=
rence/http/api/#api-v0-block-stat" class=3D"header-anchor">#</a> /api/v0/bl=
ock/stat</h2> <p>Print information of a raw IPFS block.</p> <h3 id=3D"argum=
ents-10"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-10" =
class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [stri=
ng]: The base58 multihash of an existing block to stat. Required: <strong>y=
es</strong>.</li></ul> <h3 id=3D"response-9"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#response-9" class=3D"header-anchor">#</a> Response</h=
3> <p>On success, the call to this endpoint will return with 200 and the fo=
llowing body:</p> <div class=3D"language-json extra-class"><pre class=3D"la=
nguage-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Key"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-9"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#curl-example-9" class=3D"header-anchor">#</a> cURL Ex=
ample</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/block/stat?a=
rg=3D&lt;key&gt;"</code></p> <hr> <h2 id=3D"api-v0-bootstrap"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-bootstrap" class=3D"header-an=
chor">#</a> /api/v0/bootstrap</h2> <p>Show or edit the list of bootstrap pe=
ers.</p> <h3 id=3D"arguments-11"><a href=3D"https://docs.ipfs.io/reference/=
http/api/#arguments-11" class=3D"header-anchor">#</a> Arguments</h3> <p>Thi=
s endpoint takes no arguments.</p> <h3 id=3D"response-10"><a href=3D"https:=
//docs.ipfs.io/reference/http/api/#response-10" class=3D"header-anchor">#</=
a> Response</h3> <p>On success, the call to this endpoint will return with =
200 and the following body:</p> <div class=3D"language-json extra-class"><p=
re class=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-10"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-10" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap"=
</code></p> <hr> <h2 id=3D"api-v0-bootstrap-add"><a href=3D"https://docs.ip=
fs.io/reference/http/api/#api-v0-bootstrap-add" class=3D"header-anchor">#</=
a> /api/v0/bootstrap/add</h2> <p>Add peers to the bootstrap list.</p> <h3 i=
d=3D"arguments-12"><a href=3D"https://docs.ipfs.io/reference/http/api/#argu=
ments-12" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</c=
ode> [string]: A peer to add to the bootstrap list (in the format '&lt;mult=
iaddr&gt;/&lt;peerID&gt;') Required: no.</li> <li><code>default</code> [boo=
l]: Add default bootstrap nodes. (Deprecated, use 'default' subcommand inst=
ead). Required: no.</li></ul> <h3 id=3D"response-11"><a href=3D"https://doc=
s.ipfs.io/reference/http/api/#response-11" class=3D"header-anchor">#</a> Re=
sponse</h3> <p>On success, the call to this endpoint will return with 200 a=
nd the following body:</p> <div class=3D"language-json extra-class"><pre cl=
ass=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-11"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-11" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/=
add?arg=3D&lt;peer&gt;&amp;default=3D&lt;value&gt;"</code></p> <hr> <h2 id=
=3D"api-v0-bootstrap-add-default"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#api-v0-bootstrap-add-default" class=3D"header-anchor">#</a> /api=
/v0/bootstrap/add/default</h2> <p>Add default peers to the bootstrap list.<=
/p> <h3 id=3D"arguments-13"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#arguments-13" class=3D"header-anchor">#</a> Arguments</h3> <p>This end=
point takes no arguments.</p> <h3 id=3D"response-12"><a href=3D"https://doc=
s.ipfs.io/reference/http/api/#response-12" class=3D"header-anchor">#</a> Re=
sponse</h3> <p>On success, the call to this endpoint will return with 200 a=
nd the following body:</p> <div class=3D"language-json extra-class"><pre cl=
ass=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-12"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-12" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/=
add/default"</code></p> <hr> <h2 id=3D"api-v0-bootstrap-list"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-bootstrap-list" class=3D"head=
er-anchor">#</a> /api/v0/bootstrap/list</h2> <p>Show peers in the bootstrap=
 list.</p> <h3 id=3D"arguments-14"><a href=3D"https://docs.ipfs.io/referenc=
e/http/api/#arguments-14" class=3D"header-anchor">#</a> Arguments</h3> <p>T=
his endpoint takes no arguments.</p> <h3 id=3D"response-13"><a href=3D"http=
s://docs.ipfs.io/reference/http/api/#response-13" class=3D"header-anchor">#=
</a> Response</h3> <p>On success, the call to this endpoint will return wit=
h 200 and the following body:</p> <div class=3D"language-json extra-class">=
<pre class=3D"language-json"><code><span class=3D"token punctuation">{</spa=
n>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-13"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-13" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/=
list"</code></p> <hr> <h2 id=3D"api-v0-bootstrap-rm"><a href=3D"https://doc=
s.ipfs.io/reference/http/api/#api-v0-bootstrap-rm" class=3D"header-anchor">=
#</a> /api/v0/bootstrap/rm</h2> <p>Remove peers from the bootstrap list.</p=
> <h3 id=3D"arguments-15"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#arguments-15" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code=
>arg</code> [string]: A peer to add to the bootstrap list (in the format '&=
lt;multiaddr&gt;/&lt;peerID&gt;') Required: no.</li> <li><code>all</code> [=
bool]: Remove all bootstrap peers. (Deprecated, use 'all' subcommand). Requ=
ired: no.</li></ul> <h3 id=3D"response-14"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#response-14" class=3D"header-anchor">#</a> Response</h3=
> <p>On success, the call to this endpoint will return with 200 and the fol=
lowing body:</p> <div class=3D"language-json extra-class"><pre class=3D"lan=
guage-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-14"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-14" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/=
rm?arg=3D&lt;peer&gt;&amp;all=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"ap=
i-v0-bootstrap-rm-all"><a href=3D"https://docs.ipfs.io/reference/http/api/#=
api-v0-bootstrap-rm-all" class=3D"header-anchor">#</a> /api/v0/bootstrap/rm=
/all</h2> <p>Remove all peers from the bootstrap list.</p> <h3 id=3D"argume=
nts-16"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-16" c=
lass=3D"header-anchor">#</a> Arguments</h3> <p>This endpoint takes no argum=
ents.</p> <h3 id=3D"response-15"><a href=3D"https://docs.ipfs.io/reference/=
http/api/#response-15" class=3D"header-anchor">#</a> Response</h3> <p>On su=
ccess, the call to this endpoint will return with 200 and the following bod=
y:</p> <div class=3D"language-json extra-class"><pre class=3D"language-json=
"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-15"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-15" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/bootstrap/=
rm/all"</code></p> <hr> <h2 id=3D"api-v0-cat"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#api-v0-cat" class=3D"header-anchor">#</a> /api/v0/ca=
t</h2> <p>Show IPFS object data.</p> <h3 id=3D"arguments-17"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#arguments-17" class=3D"header-anchor"=
>#</a> Arguments</h3> <ul><li><code>arg</code> [string]: The path to the IP=
FS object(s) to be outputted. Required: <strong>yes</strong>.</li> <li><cod=
e>offset</code> [int64]: Byte offset to begin reading from. Required: no.</=
li> <li><code>length</code> [int64]: Maximum number of bytes to read. Requi=
red: no.</li></ul> <h3 id=3D"response-16"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#response-16" class=3D"header-anchor">#</a> Response</h3>=
 <p>On success, the call to this endpoint will return with 200 and the foll=
owing body:</p> <div class=3D"language-json extra-class"><pre class=3D"lang=
uage-json"><code>This endpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-16"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-16" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/cat?arg=3D=
&lt;ipfs-path&gt;&amp;offset=3D&lt;value&gt;&amp;length=3D&lt;value&gt;"</c=
ode></p> <hr> <h2 id=3D"api-v0-cid-base32"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#api-v0-cid-base32" class=3D"header-anchor">#</a> /api/v=
0/cid/base32</h2> <p>Convert CIDs to Base32 CID version 1.</p> <h3 id=3D"ar=
guments-18"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-1=
8" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [s=
tring]: Cids to convert. Required: <strong>yes</strong>.</li></ul> <h3 id=
=3D"response-17"><a href=3D"https://docs.ipfs.io/reference/http/api/#respon=
se-17" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call =
to this endpoint will return with 200 and the following body:</p> <div clas=
s=3D"language-json extra-class"><pre class=3D"language-json"><code><span cl=
ass=3D"token punctuation">{</span>
  <span class=3D"token property">"CidStr"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"ErrorMsg"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"Formatted"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-17"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-17" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/cid/base32=
?arg=3D&lt;cid&gt;"</code></p> <hr> <h2 id=3D"api-v0-cid-bases"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#api-v0-cid-bases" class=3D"header-=
anchor">#</a> /api/v0/cid/bases</h2> <p>List available multibase encodings.=
</p> <h3 id=3D"arguments-19"><a href=3D"https://docs.ipfs.io/reference/http=
/api/#arguments-19" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><c=
ode>prefix</code> [bool]: also include the single letter prefixes in additi=
on to the code. Required: no.</li> <li><code>numeric</code> [bool]: also in=
clude numeric codes. Required: no.</li></ul> <h3 id=3D"response-18"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#response-18" class=3D"header-a=
nchor">#</a> Response</h3> <p>On success, the call to this endpoint will re=
turn with 200 and the following body:</p> <div class=3D"language-json extra=
-class"><pre class=3D"language-json"><code><span class=3D"token punctuation=
">[</span>
  <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"Code"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span class=
=3D"token punctuation">,</span>
    <span class=3D"token property">"Name"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">]</span>

</code></pre></div><h3 id=3D"curl-example-18"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-18" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/cid/bases?=
prefix=3D&lt;value&gt;&amp;numeric=3D&lt;value&gt;"</code></p> <hr> <h2 id=
=3D"api-v0-cid-codecs"><a href=3D"https://docs.ipfs.io/reference/http/api/#=
api-v0-cid-codecs" class=3D"header-anchor">#</a> /api/v0/cid/codecs</h2> <p=
>List available CID codecs.</p> <h3 id=3D"arguments-20"><a href=3D"https://=
docs.ipfs.io/reference/http/api/#arguments-20" class=3D"header-anchor">#</a=
> Arguments</h3> <ul><li><code>numeric</code> [bool]: also include numeric =
codes. Required: no.</li></ul> <h3 id=3D"response-19"><a href=3D"https://do=
cs.ipfs.io/reference/http/api/#response-19" class=3D"header-anchor">#</a> R=
esponse</h3> <p>On success, the call to this endpoint will return with 200 =
and the following body:</p> <div class=3D"language-json extra-class"><pre c=
lass=3D"language-json"><code><span class=3D"token punctuation">[</span>
  <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"Code"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span class=
=3D"token punctuation">,</span>
    <span class=3D"token property">"Name"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">]</span>

</code></pre></div><h3 id=3D"curl-example-19"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-19" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/cid/codecs=
?numeric=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-cid-format"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#api-v0-cid-format" class=3D=
"header-anchor">#</a> /api/v0/cid/format</h2> <p>Format and convert a CID i=
n various useful ways.</p> <h3 id=3D"arguments-21"><a href=3D"https://docs.=
ipfs.io/reference/http/api/#arguments-21" class=3D"header-anchor">#</a> Arg=
uments</h3> <ul><li><code>arg</code> [string]: Cids to format. Required: <s=
trong>yes</strong>.</li> <li><code>f</code> [string]: Printf style format s=
tring. Default: %!s(MISSING). Default: <code>%!s(MISSING)</code>. Required:=
 no.</li> <li><code>v</code> [string]: CID version to convert to. Required:=
 no.</li> <li><code>codec</code> [string]: CID codec to convert to. Require=
d: no.</li> <li><code>b</code> [string]: Multibase to display CID in. Requi=
red: no.</li></ul> <h3 id=3D"response-20"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#response-20" class=3D"header-anchor">#</a> Response</h3>=
 <p>On success, the call to this endpoint will return with 200 and the foll=
owing body:</p> <div class=3D"language-json extra-class"><pre class=3D"lang=
uage-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"CidStr"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"ErrorMsg"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"Formatted"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-20"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-20" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/cid/format=
?arg=3D&lt;cid&gt;&amp;f=3D%s&amp;v=3D&lt;value&gt;&amp;codec=3D&lt;value&g=
t;&amp;b=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-cid-hashes"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#api-v0-cid-hashes" class=3D=
"header-anchor">#</a> /api/v0/cid/hashes</h2> <p>List available multihashes=
.</p> <h3 id=3D"arguments-22"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#arguments-22" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><=
code>numeric</code> [bool]: also include numeric codes. Required: no.</li><=
/ul> <h3 id=3D"response-21"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#response-21" class=3D"header-anchor">#</a> Response</h3> <p>On success=
, the call to this endpoint will return with 200 and the following body:</p=
> <div class=3D"language-json extra-class"><pre class=3D"language-json"><co=
de><span class=3D"token punctuation">[</span>
  <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"Code"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span class=
=3D"token punctuation">,</span>
    <span class=3D"token property">"Name"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">]</span>

</code></pre></div><h3 id=3D"curl-example-21"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-21" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/cid/hashes=
?numeric=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-commands"><a hre=
f=3D"https://docs.ipfs.io/reference/http/api/#api-v0-commands" class=3D"hea=
der-anchor">#</a> /api/v0/commands</h2> <p>List all available commands.</p>=
 <h3 id=3D"arguments-23"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#arguments-23" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>=
flags</code> [bool]: Show command flags. Required: no.</li></ul> <h3 id=3D"=
response-22"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-2=
2" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call to t=
his endpoint will return with 200 and the following body:</p> <div class=3D=
"language-json extra-class"><pre class=3D"language-json"><code><span class=
=3D"token punctuation">{</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Options"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Names"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token string">"&lt;string&gt;"</span>
      <span class=3D"token punctuation">]</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Subcommands"</span><span class=3D"token o=
perator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Options"</span><span class=3D"token o=
perator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token punctuation">{</span>
          <span class=3D"token property">"Names"</span><span class=3D"token=
 operator">:</span> <span class=3D"token punctuation">[</span>
            <span class=3D"token string">"&lt;string&gt;"</span>
          <span class=3D"token punctuation">]</span>
        <span class=3D"token punctuation">}</span>
      <span class=3D"token punctuation">]</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"Subcommands"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token string">"..."</span>
      <span class=3D"token punctuation">]</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-22"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-22" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/commands?f=
lags=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-config"><a href=3D"h=
ttps://docs.ipfs.io/reference/http/api/#api-v0-config" class=3D"header-anch=
or">#</a> /api/v0/config</h2> <p>Get and set IPFS config values.</p> <h3 id=
=3D"arguments-24"><a href=3D"https://docs.ipfs.io/reference/http/api/#argum=
ents-24" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</co=
de> [string]: The key of the config entry (e.g. "Addresses.API"). Required:=
 <strong>yes</strong>.</li> <li><code>arg</code> [string]: The value to set=
 the config entry to. Required: no.</li> <li><code>bool</code> [bool]: Set =
a boolean value. Required: no.</li> <li><code>json</code> [bool]: Parse str=
ingified JSON. Required: no.</li></ul> <h3 id=3D"response-23"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#response-23" class=3D"header-anchor"=
>#</a> Response</h3> <p>On success, the call to this endpoint will return w=
ith 200 and the following body:</p> <div class=3D"language-json extra-class=
"><pre class=3D"language-json"><code><span class=3D"token punctuation">{</s=
pan>
  <span class=3D"token property">"Key"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Value"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;object&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-23"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-23" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/config?arg=
=3D&lt;key&gt;&amp;arg=3D&lt;value&gt;&amp;bool=3D&lt;value&gt;&amp;json=3D=
&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-config-edit"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#api-v0-config-edit" class=3D"header-a=
nchor">#</a> /api/v0/config/edit</h2> <p>Open the config file for editing i=
n $EDITOR.</p> <h3 id=3D"arguments-25"><a href=3D"https://docs.ipfs.io/refe=
rence/http/api/#arguments-25" class=3D"header-anchor">#</a> Arguments</h3> =
<p>This endpoint takes no arguments.</p> <h3 id=3D"response-24"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#response-24" class=3D"header-ancho=
r">#</a> Response</h3> <p>On success, the call to this endpoint will return=
 with 200 and the following body:</p> <div class=3D"language-json extra-cla=
ss"><pre class=3D"language-json"><code>This endpoint returns a `text/plain`=
 response body.
</code></pre></div><h3 id=3D"curl-example-24"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-24" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/config/edi=
t"</code></p> <hr> <h2 id=3D"api-v0-config-profile-apply"><a href=3D"https:=
//docs.ipfs.io/reference/http/api/#api-v0-config-profile-apply" class=3D"he=
ader-anchor">#</a> /api/v0/config/profile/apply</h2> <p>Apply profile to co=
nfig.</p> <h3 id=3D"arguments-26"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#arguments-26" class=3D"header-anchor">#</a> Arguments</h3> <ul><=
li><code>arg</code> [string]: The profile to apply to the config. Required:=
 <strong>yes</strong>.</li> <li><code>dry-run</code> [bool]: print differen=
ce between the current config and the config that would be generated. Requi=
red: no.</li></ul> <h3 id=3D"response-25"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#response-25" class=3D"header-anchor">#</a> Response</h3>=
 <p>On success, the call to this endpoint will return with 200 and the foll=
owing body:</p> <div class=3D"language-json extra-class"><pre class=3D"lang=
uage-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"NewCfg"</span><span class=3D"token operat=
or">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"&lt;string&gt;"</span><span class=3D"to=
ken operator">:</span> <span class=3D"token string">"&lt;object&gt;"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"OldCfg"</span><span class=3D"token operat=
or">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"&lt;string&gt;"</span><span class=3D"to=
ken operator">:</span> <span class=3D"token string">"&lt;object&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-25"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-25" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/config/pro=
file/apply?arg=3D&lt;profile&gt;&amp;dry-run=3D&lt;value&gt;"</code></p> <h=
r> <h2 id=3D"api-v0-config-replace"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#api-v0-config-replace" class=3D"header-anchor">#</a> /api/v0/c=
onfig/replace</h2> <p>Replace the config with &lt;file&gt;.</p> <h3 id=3D"a=
rguments-27"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-=
27" class=3D"header-anchor">#</a> Arguments</h3> <h3 id=3D"request-body-3">=
<a href=3D"https://docs.ipfs.io/reference/http/api/#request-body-3" class=
=3D"header-anchor">#</a> Request Body</h3> <p>Argument <code>file</code> is=
 of file type. This endpoint expects one or several files (depending on the=
 command) in the body of the request as 'multipart/form-data'.</p> <h3 id=
=3D"response-26"><a href=3D"https://docs.ipfs.io/reference/http/api/#respon=
se-26" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call =
to this endpoint will return with 200 and the following body:</p> <div clas=
s=3D"language-json extra-class"><pre class=3D"language-json"><code>This end=
point returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-26"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-26" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/config/replace"</code></p> <hr> <h2 id=3D"api-v0-config-show"><a hr=
ef=3D"https://docs.ipfs.io/reference/http/api/#api-v0-config-show" class=3D=
"header-anchor">#</a> /api/v0/config/show</h2> <p>Output config file conten=
ts.</p> <h3 id=3D"arguments-28"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#arguments-28" class=3D"header-anchor">#</a> Arguments</h3> <p>This=
 endpoint takes no arguments.</p> <h3 id=3D"response-27"><a href=3D"https:/=
/docs.ipfs.io/reference/http/api/#response-27" class=3D"header-anchor">#</a=
> Response</h3> <p>On success, the call to this endpoint will return with 2=
00 and the following body:</p> <div class=3D"language-json extra-class"><pr=
e class=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"&lt;string&gt;"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;object&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-27"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-27" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/config/sho=
w"</code></p> <hr> <h2 id=3D"api-v0-dag-export"><a href=3D"https://docs.ipf=
s.io/reference/http/api/#api-v0-dag-export" class=3D"header-anchor">#</a> /=
api/v0/dag/export</h2> <p>Streams the selected DAG as a .car stream on stdo=
ut.</p> <h3 id=3D"arguments-29"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#arguments-29" class=3D"header-anchor">#</a> Arguments</h3> <ul><li=
><code>arg</code> [string]: CID of a root to recursively export Required: <=
strong>yes</strong>.</li> <li><code>progress</code> [bool]: Display progres=
s on CLI. Defaults to true when STDERR is a TTY. Required: no.</li></ul> <h=
3 id=3D"response-28"><a href=3D"https://docs.ipfs.io/reference/http/api/#re=
sponse-28" class=3D"header-anchor">#</a> Response</h3> <p>On success, the c=
all to this endpoint will return with 200 and the following body:</p> <div =
class=3D"language-json extra-class"><pre class=3D"language-json"><code>This=
 endpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-28"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-28" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dag/export=
?arg=3D&lt;root&gt;&amp;progress=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D=
"api-v0-dag-get"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0=
-dag-get" class=3D"header-anchor">#</a> /api/v0/dag/get</h2> <p>Get a DAG n=
ode from IPFS.</p> <h3 id=3D"arguments-30"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#arguments-30" class=3D"header-anchor">#</a> Arguments</=
h3> <ul><li><code>arg</code> [string]: The object to get Required: <strong>=
yes</strong>.</li></ul> <h3 id=3D"response-29"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#response-29" class=3D"header-anchor">#</a> Response=
</h3> <p>On success, the call to this endpoint will return with 200 and the=
 following body:</p> <div class=3D"language-json extra-class"><pre class=3D=
"language-json"><code>This endpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-29"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-29" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dag/get?ar=
g=3D&lt;ref&gt;"</code></p> <hr> <h2 id=3D"api-v0-dag-import"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-dag-import" class=3D"header-a=
nchor">#</a> /api/v0/dag/import</h2> <p>Import the contents of .car files</=
p> <h3 id=3D"arguments-31"><a href=3D"https://docs.ipfs.io/reference/http/a=
pi/#arguments-31" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><cod=
e>silent</code> [bool]: No output. Required: no.</li> <li><code>pin-roots</=
code> [bool]: Pin optional roots listed in the .car headers after importing=
. Default: <code>true</code>. Required: no.</li></ul> <h3 id=3D"request-bod=
y-4"><a href=3D"https://docs.ipfs.io/reference/http/api/#request-body-4" cl=
ass=3D"header-anchor">#</a> Request Body</h3> <p>Argument <code>path</code>=
 is of file type. This endpoint expects one or several files (depending on =
the command) in the body of the request as 'multipart/form-data'.</p> <h3 i=
d=3D"response-30"><a href=3D"https://docs.ipfs.io/reference/http/api/#respo=
nse-30" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call=
 to this endpoint will return with 200 and the following body:</p> <div cla=
ss=3D"language-json extra-class"><pre class=3D"language-json"><code><span c=
lass=3D"token punctuation">{</span>
  <span class=3D"token property">"Root"</span><span class=3D"token operator=
">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"Cid"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"/"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">,</span>
    <span class=3D"token property">"PinErrorMsg"</span><span class=3D"token=
 operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-30"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-30" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/dag/import?silent=3D&lt;value&gt;&amp;pin-roots=3Dtrue"</code></p> =
<hr> <h2 id=3D"api-v0-dag-put"><a href=3D"https://docs.ipfs.io/reference/ht=
tp/api/#api-v0-dag-put" class=3D"header-anchor">#</a> /api/v0/dag/put</h2> =
<p>Add a DAG node to IPFS.</p> <h3 id=3D"arguments-32"><a href=3D"https://d=
ocs.ipfs.io/reference/http/api/#arguments-32" class=3D"header-anchor">#</a>=
 Arguments</h3> <ul><li><code>format</code> [string]: Format that the objec=
t will be added as. Default: <code>cbor</code>. Required: no.</li> <li><cod=
e>input-enc</code> [string]: Format that the input object will be. Default:=
 <code>json</code>. Required: no.</li> <li><code>pin</code> [bool]: Pin thi=
s object when adding. Required: no.</li> <li><code>hash</code> [string]: Ha=
sh function to use. Default: . Required: no.</li></ul> <h3 id=3D"request-bo=
dy-5"><a href=3D"https://docs.ipfs.io/reference/http/api/#request-body-5" c=
lass=3D"header-anchor">#</a> Request Body</h3> <p>Argument <code>object dat=
a</code> is of file type. This endpoint expects one or several files (depen=
ding on the command) in the body of the request as 'multipart/form-data'.</=
p> <h3 id=3D"response-31"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#response-31" class=3D"header-anchor">#</a> Response</h3> <p>On success, =
the call to this endpoint will return with 200 and the following body:</p> =
<div class=3D"language-json extra-class"><pre class=3D"language-json"><code=
><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Cid"</span><span class=3D"token operator"=
>:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"/"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-31"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-31" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/dag/put?format=3Dcbor&amp;input-enc=3Djson&amp;pin=3D&lt;value&gt;&=
amp;hash=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-dag-resolve"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dag-resolve" class=
=3D"header-anchor">#</a> /api/v0/dag/resolve</h2> <p>Resolve IPLD block.</p=
> <h3 id=3D"arguments-33"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#arguments-33" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code=
>arg</code> [string]: The path to resolve Required: <strong>yes</strong>.</=
li></ul> <h3 id=3D"response-32"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#response-32" class=3D"header-anchor">#</a> Response</h3> <p>On suc=
cess, the call to this endpoint will return with 200 and the following body=
:</p> <div class=3D"language-json extra-class"><pre class=3D"language-json"=
><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Cid"</span><span class=3D"token operator"=
>:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"/"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"RemPath"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-32"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-32" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dag/resolv=
e?arg=3D&lt;ref&gt;"</code></p> <hr> <h2 id=3D"api-v0-dag-stat"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#api-v0-dag-stat" class=3D"header-a=
nchor">#</a> /api/v0/dag/stat</h2> <p>Gets stats for a DAG.</p> <h3 id=3D"a=
rguments-34"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-=
34" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [=
string]: CID of a DAG root to get statistics for Required: <strong>yes</str=
ong>.</li> <li><code>progress</code> [bool]: Return progressive data while =
reading through the DAG. Default: <code>true</code>. Required: no.</li></ul=
> <h3 id=3D"response-33"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#response-33" class=3D"header-anchor">#</a> Response</h3> <p>On success, t=
he call to this endpoint will return with 200 and the following body:</p> <=
div class=3D"language-json extra-class"><pre class=3D"language-json"><code>=
<span class=3D"token punctuation">{</span>
  <span class=3D"token property">"NumBlocks"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;int64&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-33"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-33" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dag/stat?a=
rg=3D&lt;root&gt;&amp;progress=3Dtrue"</code></p> <hr> <h2 id=3D"api-v0-dht=
-findpeer"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-dht-f=
indpeer" class=3D"header-anchor">#</a> /api/v0/dht/findpeer</h2> <p>Find th=
e multiaddresses associated with a Peer ID.</p> <h3 id=3D"arguments-35"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#arguments-35" class=3D"hea=
der-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: The ID =
of the peer to search for. Required: <strong>yes</strong>.</li> <li><code>v=
erbose</code> [bool]: Print extra information. Required: no.</li></ul> <h3 =
id=3D"response-34"><a href=3D"https://docs.ipfs.io/reference/http/api/#resp=
onse-34" class=3D"header-anchor">#</a> Response</h3> <p>On success, the cal=
l to this endpoint will return with 200 and the following body:</p> <div cl=
ass=3D"language-json extra-class"><pre class=3D"language-json"><code><span =
class=3D"token punctuation">{</span>
  <span class=3D"token property">"Extra"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"ID"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;peer-id&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Responses"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Addrs"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token string">"&lt;multiaddr-string&gt;"</span>
      <span class=3D"token punctuation">]</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"ID"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"peer-id"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Type"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-34"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-34" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dht/findpe=
er?arg=3D&lt;peerID&gt;&amp;verbose=3D&lt;value&gt;"</code></p> <hr> <h2 id=
=3D"api-v0-dht-findprovs"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#api-v0-dht-findprovs" class=3D"header-anchor">#</a> /api/v0/dht/findprov=
s</h2> <p>Find peers that can provide a specific value, given a key.</p> <h=
3 id=3D"arguments-36"><a href=3D"https://docs.ipfs.io/reference/http/api/#a=
rguments-36" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg=
</code> [string]: The key to find providers for. Required: <strong>yes</str=
ong>.</li> <li><code>verbose</code> [bool]: Print extra information. Requir=
ed: no.</li> <li><code>num-providers</code> [int]: The number of providers =
to find. Default: <code>20</code>. Required: no.</li></ul> <h3 id=3D"respon=
se-35"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-35" cla=
ss=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this en=
dpoint will return with 200 and the following body:</p> <div class=3D"langu=
age-json extra-class"><pre class=3D"language-json"><code><span class=3D"tok=
en punctuation">{</span>
  <span class=3D"token property">"Extra"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"ID"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;peer-id&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Responses"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Addrs"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token string">"&lt;multiaddr-string&gt;"</span>
      <span class=3D"token punctuation">]</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"ID"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"peer-id"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Type"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-35"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-35" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dht/findpr=
ovs?arg=3D&lt;key&gt;&amp;verbose=3D&lt;value&gt;&amp;num-providers=3D20"</=
code></p> <hr> <h2 id=3D"api-v0-dht-get"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#api-v0-dht-get" class=3D"header-anchor">#</a> /api/v0/dht=
/get</h2> <p>Given a key, query the routing system for its best value.</p> =
<h3 id=3D"arguments-37"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#arguments-37" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>a=
rg</code> [string]: The key to find a value for. Required: <strong>yes</str=
ong>.</li> <li><code>verbose</code> [bool]: Print extra information. Requir=
ed: no.</li></ul> <h3 id=3D"response-36"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#response-36" class=3D"header-anchor">#</a> Response</h3> =
<p>On success, the call to this endpoint will return with 200 and the follo=
wing body:</p> <div class=3D"language-json extra-class"><pre class=3D"langu=
age-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Extra"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"ID"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;peer-id&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Responses"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Addrs"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token string">"&lt;multiaddr-string&gt;"</span>
      <span class=3D"token punctuation">]</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"ID"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"peer-id"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Type"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-36"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-36" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dht/get?ar=
g=3D&lt;key&gt;&amp;verbose=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-=
v0-dht-provide"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-=
dht-provide" class=3D"header-anchor">#</a> /api/v0/dht/provide</h2> <p>Anno=
unce to the network that you are providing given values.</p> <h3 id=3D"argu=
ments-38"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-38"=
 class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [str=
ing]: The key[s] to send provide records for. Required: <strong>yes</strong=
>.</li> <li><code>verbose</code> [bool]: Print extra information. Required:=
 no.</li> <li><code>recursive</code> [bool]: Recursively provide entire gra=
ph. Required: no.</li></ul> <h3 id=3D"response-37"><a href=3D"https://docs.=
ipfs.io/reference/http/api/#response-37" class=3D"header-anchor">#</a> Resp=
onse</h3> <p>On success, the call to this endpoint will return with 200 and=
 the following body:</p> <div class=3D"language-json extra-class"><pre clas=
s=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Extra"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"ID"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;peer-id&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Responses"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Addrs"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token string">"&lt;multiaddr-string&gt;"</span>
      <span class=3D"token punctuation">]</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"ID"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"peer-id"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Type"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-37"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-37" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dht/provid=
e?arg=3D&lt;key&gt;&amp;verbose=3D&lt;value&gt;&amp;recursive=3D&lt;value&g=
t;"</code></p> <hr> <h2 id=3D"api-v0-dht-put"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#api-v0-dht-put" class=3D"header-anchor">#</a> /api/v=
0/dht/put</h2> <p>Write a key/value pair to the routing system.</p> <h3 id=
=3D"arguments-39"><a href=3D"https://docs.ipfs.io/reference/http/api/#argum=
ents-39" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><p><code>arg<=
/code> [string]: The key to store the value at. Required: <strong>yes</stro=
ng>.</p></li> <li><p><code>verbose</code> [bool]: Print extra information. =
Required: no.</p></li></ul> <h3 id=3D"request-body-6"><a href=3D"https://do=
cs.ipfs.io/reference/http/api/#request-body-6" class=3D"header-anchor">#</a=
> Request Body</h3> <p>Argument <code>value-file</code> is of file type. Th=
is endpoint expects one or several files (depending on the command) in the =
body of the request as 'multipart/form-data'.</p> <h3 id=3D"response-38"><a=
 href=3D"https://docs.ipfs.io/reference/http/api/#response-38" class=3D"hea=
der-anchor">#</a> Response</h3> <p>On success, the call to this endpoint wi=
ll return with 200 and the following body:</p> <div class=3D"language-json =
extra-class"><pre class=3D"language-json"><code><span class=3D"token punctu=
ation">{</span>
  <span class=3D"token property">"Extra"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"ID"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;peer-id&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Responses"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Addrs"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token string">"&lt;multiaddr-string&gt;"</span>
      <span class=3D"token punctuation">]</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"ID"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"peer-id"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Type"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-38"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-38" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/dht/put?arg=3D&lt;key&gt;&amp;verbose=3D&lt;value&gt;"</code></p> <=
hr> <h2 id=3D"api-v0-dht-query"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#api-v0-dht-query" class=3D"header-anchor">#</a> /api/v0/dht/query<=
/h2> <p>Find the closest Peer IDs to a given Peer ID by querying the DHT.</=
p> <h3 id=3D"arguments-40"><a href=3D"https://docs.ipfs.io/reference/http/a=
pi/#arguments-40" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><cod=
e>arg</code> [string]: The peerID to run the query against. Required: <stro=
ng>yes</strong>.</li> <li><code>verbose</code> [bool]: Print extra informat=
ion. Required: no.</li></ul> <h3 id=3D"response-39"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#response-39" class=3D"header-anchor">#</a> Res=
ponse</h3> <p>On success, the call to this endpoint will return with 200 an=
d the following body:</p> <div class=3D"language-json extra-class"><pre cla=
ss=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Extra"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"ID"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;peer-id&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Responses"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Addrs"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token string">"&lt;multiaddr-string&gt;"</span>
      <span class=3D"token punctuation">]</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"ID"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"peer-id"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Type"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-39"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-39" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dht/query?=
arg=3D&lt;peerID&gt;&amp;verbose=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D=
"api-v0-diag-cmds"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-=
v0-diag-cmds" class=3D"header-anchor">#</a> /api/v0/diag/cmds</h2> <p>List =
commands run on this IPFS node.</p> <h3 id=3D"arguments-41"><a href=3D"http=
s://docs.ipfs.io/reference/http/api/#arguments-41" class=3D"header-anchor">=
#</a> Arguments</h3> <ul><li><code>verbose</code> [bool]: Print extra infor=
mation. Required: no.</li></ul> <h3 id=3D"response-40"><a href=3D"https://d=
ocs.ipfs.io/reference/http/api/#response-40" class=3D"header-anchor">#</a> =
Response</h3> <p>On success, the call to this endpoint will return with 200=
 and the following body:</p> <div class=3D"language-json extra-class"><pre =
class=3D"language-json"><code><span class=3D"token punctuation">[</span>
  <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"Active"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;bool&gt;"</span><span clas=
s=3D"token punctuation">,</span>
    <span class=3D"token property">"Args"</span><span class=3D"token operat=
or">:</span> <span class=3D"token punctuation">[</span>
      <span class=3D"token string">"&lt;string&gt;"</span>
    <span class=3D"token punctuation">]</span><span class=3D"token punctuat=
ion">,</span>
    <span class=3D"token property">"Command"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span c=
lass=3D"token punctuation">,</span>
    <span class=3D"token property">"EndTime"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;timestamp&gt;"</span><spa=
n class=3D"token punctuation">,</span>
    <span class=3D"token property">"ID"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span class=3D"=
token punctuation">,</span>
    <span class=3D"token property">"Options"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"&lt;string&gt;"</span><span class=3D"=
token operator">:</span> <span class=3D"token string">"&lt;object&gt;"</spa=
n>
    <span class=3D"token punctuation">}</span><span class=3D"token punctuat=
ion">,</span>
    <span class=3D"token property">"StartTime"</span><span class=3D"token o=
perator">:</span> <span class=3D"token string">"&lt;timestamp&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">]</span>

</code></pre></div><h3 id=3D"curl-example-40"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-40" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/diag/cmds?=
verbose=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-diag-cmds-clear">=
<a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-diag-cmds-clear"=
 class=3D"header-anchor">#</a> /api/v0/diag/cmds/clear</h2> <p>Clear inacti=
ve requests from the log.</p> <h3 id=3D"arguments-42"><a href=3D"https://do=
cs.ipfs.io/reference/http/api/#arguments-42" class=3D"header-anchor">#</a> =
Arguments</h3> <p>This endpoint takes no arguments.</p> <h3 id=3D"response-=
41"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-41" class=
=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this endp=
oint will return with 200 and the following body:</p> <div class=3D"languag=
e-json extra-class"><pre class=3D"language-json"><code>This endpoint return=
s a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-41"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-41" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/diag/cmds/=
clear"</code></p> <hr> <h2 id=3D"api-v0-diag-cmds-set-time"><a href=3D"http=
s://docs.ipfs.io/reference/http/api/#api-v0-diag-cmds-set-time" class=3D"he=
ader-anchor">#</a> /api/v0/diag/cmds/set-time</h2> <p>Set how long to keep =
inactive requests in the log.</p> <h3 id=3D"arguments-43"><a href=3D"https:=
//docs.ipfs.io/reference/http/api/#arguments-43" class=3D"header-anchor">#<=
/a> Arguments</h3> <ul><li><code>arg</code> [string]: Time to keep inactive=
 requests in log. Required: <strong>yes</strong>.</li></ul> <h3 id=3D"respo=
nse-42"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-42" cl=
ass=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this e=
ndpoint will return with 200 and the following body:</p> <div class=3D"lang=
uage-json extra-class"><pre class=3D"language-json"><code>This endpoint ret=
urns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-42"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-42" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/diag/cmds/=
set-time?arg=3D&lt;time&gt;"</code></p> <hr> <h2 id=3D"api-v0-diag-sys"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-diag-sys" class=3D"=
header-anchor">#</a> /api/v0/diag/sys</h2> <p>Print system diagnostic infor=
mation.</p> <h3 id=3D"arguments-44"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#arguments-44" class=3D"header-anchor">#</a> Arguments</h3> <p>=
This endpoint takes no arguments.</p> <h3 id=3D"response-43"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#response-43" class=3D"header-anchor">=
#</a> Response</h3> <p>On success, the call to this endpoint will return wi=
th 200 and the following body:</p> <div class=3D"language-json extra-class"=
><pre class=3D"language-json"><code>This endpoint returns a `text/plain` re=
sponse body.
</code></pre></div><h3 id=3D"curl-example-43"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-43" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/diag/sys"<=
/code></p> <hr> <h2 id=3D"api-v0-dns"><a href=3D"https://docs.ipfs.io/refer=
ence/http/api/#api-v0-dns" class=3D"header-anchor">#</a> /api/v0/dns</h2> <=
p>Resolve DNS links.</p> <h3 id=3D"arguments-45"><a href=3D"https://docs.ip=
fs.io/reference/http/api/#arguments-45" class=3D"header-anchor">#</a> Argum=
ents</h3> <ul><li><code>arg</code> [string]: The domain-name name to resolv=
e. Required: <strong>yes</strong>.</li> <li><code>recursive</code> [bool]: =
Resolve until the result is not a DNS link. Default: <code>true</code>. Req=
uired: no.</li></ul> <h3 id=3D"response-44"><a href=3D"https://docs.ipfs.io=
/reference/http/api/#response-44" class=3D"header-anchor">#</a> Response</h=
3> <p>On success, the call to this endpoint will return with 200 and the fo=
llowing body:</p> <div class=3D"language-json extra-class"><pre class=3D"la=
nguage-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Path"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-44"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-44" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/dns?arg=3D=
&lt;domain-name&gt;&amp;recursive=3Dtrue"</code></p> <hr> <h2 id=3D"api-v0-=
file-ls"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-file-ls=
" class=3D"header-anchor">#</a> /api/v0/file/ls</h2> <p>List directory cont=
ents for Unix filesystem objects. Deprecated: Use 'ipfs ls' instead.</p> <h=
3 id=3D"arguments-46"><a href=3D"https://docs.ipfs.io/reference/http/api/#a=
rguments-46" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg=
</code> [string]: The path to the IPFS object(s) to list links from. Requir=
ed: <strong>yes</strong>.</li></ul> <h3 id=3D"response-45"><a href=3D"https=
://docs.ipfs.io/reference/http/api/#response-45" class=3D"header-anchor">#<=
/a> Response</h3> <p>On success, the call to this endpoint will return with=
 200 and the following body:</p> <div class=3D"language-json extra-class"><=
pre class=3D"language-json"><code><span class=3D"token punctuation">{</span=
>
  <span class=3D"token property">"Arguments"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"&lt;string&gt;"</span><span class=3D"to=
ken operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Objects"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"&lt;string&gt;"</span><span class=3D"to=
ken operator">:</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Links"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token punctuation">{</span>
          <span class=3D"token property">"Hash"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><spa=
n class=3D"token punctuation">,</span>
          <span class=3D"token property">"Name"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><spa=
n class=3D"token punctuation">,</span>
          <span class=3D"token property">"Size"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><spa=
n class=3D"token punctuation">,</span>
          <span class=3D"token property">"Type"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
        <span class=3D"token punctuation">}</span>
      <span class=3D"token punctuation">]</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Type"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-45"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-45" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/file/ls?ar=
g=3D&lt;ipfs-path&gt;"</code></p> <hr> <h2 id=3D"api-v0-files-chcid"><a hre=
f=3D"https://docs.ipfs.io/reference/http/api/#api-v0-files-chcid" class=3D"=
header-anchor">#</a> /api/v0/files/chcid</h2> <p>Change the CID version or =
hash function of the root node of a given path.</p> <h3 id=3D"arguments-47"=
><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-47" class=3D=
"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Pat=
h to change. Default: '/'. Required: no.</li> <li><code>cid-version</code> =
[int]: Cid version to use. (experimental). Required: no.</li> <li><code>has=
h</code> [string]: Hash function to use. Will set Cid version to 1 if used.=
 (experimental). Required: no.</li></ul> <h3 id=3D"response-46"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#response-46" class=3D"header-ancho=
r">#</a> Response</h3> <p>On success, the call to this endpoint will return=
 with 200 and the following body:</p> <div class=3D"language-json extra-cla=
ss"><pre class=3D"language-json"><code>This endpoint returns a `text/plain`=
 response body.
</code></pre></div><h3 id=3D"curl-example-46"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-46" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/chci=
d?arg=3D&lt;path&gt;&amp;cid-version=3D&lt;value&gt;&amp;hash=3D&lt;value&g=
t;"</code></p> <hr> <h2 id=3D"api-v0-files-cp"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#api-v0-files-cp" class=3D"header-anchor">#</a> /api=
/v0/files/cp</h2> <p>Add references to IPFS files and directories in MFS (o=
r copy within MFS).</p> <h3 id=3D"arguments-48"><a href=3D"https://docs.ipf=
s.io/reference/http/api/#arguments-48" class=3D"header-anchor">#</a> Argume=
nts</h3> <ul><li><code>arg</code> [string]: Source IPFS or MFS path to copy=
. Required: <strong>yes</strong>.</li> <li><code>arg</code> [string]: Desti=
nation within MFS. Required: <strong>yes</strong>.</li></ul> <h3 id=3D"resp=
onse-47"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-47" c=
lass=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this =
endpoint will return with 200 and the following body:</p> <div class=3D"lan=
guage-json extra-class"><pre class=3D"language-json"><code>This endpoint re=
turns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-47"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-47" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/cp?a=
rg=3D&lt;source&gt;&amp;arg=3D&lt;dest&gt;"</code></p> <hr> <h2 id=3D"api-v=
0-files-flush"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-f=
iles-flush" class=3D"header-anchor">#</a> /api/v0/files/flush</h2> <p>Flush=
 a given path's data to disk.</p> <h3 id=3D"arguments-49"><a href=3D"https:=
//docs.ipfs.io/reference/http/api/#arguments-49" class=3D"header-anchor">#<=
/a> Arguments</h3> <ul><li><code>arg</code> [string]: Path to flush. Defaul=
t: '/'. Required: no.</li></ul> <h3 id=3D"response-48"><a href=3D"https://d=
ocs.ipfs.io/reference/http/api/#response-48" class=3D"header-anchor">#</a> =
Response</h3> <p>On success, the call to this endpoint will return with 200=
 and the following body:</p> <div class=3D"language-json extra-class"><pre =
class=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Cid"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-48"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-48" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/flus=
h?arg=3D&lt;path&gt;"</code></p> <hr> <h2 id=3D"api-v0-files-ls"><a href=3D=
"https://docs.ipfs.io/reference/http/api/#api-v0-files-ls" class=3D"header-=
anchor">#</a> /api/v0/files/ls</h2> <p>List directories in the local mutabl=
e namespace.</p> <h3 id=3D"arguments-50"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#arguments-50" class=3D"header-anchor">#</a> Arguments</h3=
> <ul><li><code>arg</code> [string]: Path to show listing for. Defaults to =
'/'. Required: no.</li> <li><code>long</code> [bool]: Use long listing form=
at. Required: no.</li> <li><code>U</code> [bool]: Do not sort; list entries=
 in directory order. Required: no.</li></ul> <h3 id=3D"response-49"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#response-49" class=3D"header-a=
nchor">#</a> Response</h3> <p>On success, the call to this endpoint will re=
turn with 200 and the following body:</p> <div class=3D"language-json extra=
-class"><pre class=3D"language-json"><code><span class=3D"token punctuation=
">{</span>
  <span class=3D"token property">"Entries"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;int64&gt;"</span><span cla=
ss=3D"token punctuation">,</span>
      <span class=3D"token property">"Type"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-49"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-49" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/ls?a=
rg=3D&lt;path&gt;&amp;long=3D&lt;value&gt;&amp;U=3D&lt;value&gt;"</code></p=
> <hr> <h2 id=3D"api-v0-files-mkdir"><a href=3D"https://docs.ipfs.io/refere=
nce/http/api/#api-v0-files-mkdir" class=3D"header-anchor">#</a> /api/v0/fil=
es/mkdir</h2> <p>Make directories.</p> <h3 id=3D"arguments-51"><a href=3D"h=
ttps://docs.ipfs.io/reference/http/api/#arguments-51" class=3D"header-ancho=
r">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Path to dir to m=
ake. Required: <strong>yes</strong>.</li> <li><code>parents</code> [bool]: =
No error if existing, make parent directories as needed. Required: no.</li>=
 <li><code>cid-version</code> [int]: Cid version to use. (experimental). Re=
quired: no.</li> <li><code>hash</code> [string]: Hash function to use. Will=
 set Cid version to 1 if used. (experimental). Required: no.</li></ul> <h3 =
id=3D"response-50"><a href=3D"https://docs.ipfs.io/reference/http/api/#resp=
onse-50" class=3D"header-anchor">#</a> Response</h3> <p>On success, the cal=
l to this endpoint will return with 200 and the following body:</p> <div cl=
ass=3D"language-json extra-class"><pre class=3D"language-json"><code>This e=
ndpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-50"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-50" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/mkdi=
r?arg=3D&lt;path&gt;&amp;parents=3D&lt;value&gt;&amp;cid-version=3D&lt;valu=
e&gt;&amp;hash=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-files-mv">=
<a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-files-mv" class=
=3D"header-anchor">#</a> /api/v0/files/mv</h2> <p>Move files.</p> <h3 id=3D=
"arguments-52"><a href=3D"https://docs.ipfs.io/reference/http/api/#argument=
s-52" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code>=
 [string]: Source file to move. Required: <strong>yes</strong>.</li> <li><c=
ode>arg</code> [string]: Destination path for file to be moved to. Required=
: <strong>yes</strong>.</li></ul> <h3 id=3D"response-51"><a href=3D"https:/=
/docs.ipfs.io/reference/http/api/#response-51" class=3D"header-anchor">#</a=
> Response</h3> <p>On success, the call to this endpoint will return with 2=
00 and the following body:</p> <div class=3D"language-json extra-class"><pr=
e class=3D"language-json"><code>This endpoint returns a `text/plain` respon=
se body.
</code></pre></div><h3 id=3D"curl-example-51"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-51" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/mv?a=
rg=3D&lt;source&gt;&amp;arg=3D&lt;dest&gt;"</code></p> <hr> <h2 id=3D"api-v=
0-files-read"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-fi=
les-read" class=3D"header-anchor">#</a> /api/v0/files/read</h2> <p>Read a f=
ile in a given MFS.</p> <h3 id=3D"arguments-53"><a href=3D"https://docs.ipf=
s.io/reference/http/api/#arguments-53" class=3D"header-anchor">#</a> Argume=
nts</h3> <ul><li><code>arg</code> [string]: Path to file to be read. Requir=
ed: <strong>yes</strong>.</li> <li><code>offset</code> [int64]: Byte offset=
 to begin reading from. Required: no.</li> <li><code>count</code> [int64]: =
Maximum number of bytes to read. Required: no.</li></ul> <h3 id=3D"response=
-52"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-52" class=
=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this endp=
oint will return with 200 and the following body:</p> <div class=3D"languag=
e-json extra-class"><pre class=3D"language-json"><code>This endpoint return=
s a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-52"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-52" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/read=
?arg=3D&lt;path&gt;&amp;offset=3D&lt;value&gt;&amp;count=3D&lt;value&gt;"</=
code></p> <hr> <h2 id=3D"api-v0-files-rm"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#api-v0-files-rm" class=3D"header-anchor">#</a> /api/v0/f=
iles/rm</h2> <p>Remove a file.</p> <h3 id=3D"arguments-54"><a href=3D"https=
://docs.ipfs.io/reference/http/api/#arguments-54" class=3D"header-anchor">#=
</a> Arguments</h3> <ul><li><code>arg</code> [string]: File to remove. Requ=
ired: <strong>yes</strong>.</li> <li><code>recursive</code> [bool]: Recursi=
vely remove directories. Required: no.</li> <li><code>force</code> [bool]: =
Forcibly remove target at path; implies -r for directories. Required: no.</=
li></ul> <h3 id=3D"response-53"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#response-53" class=3D"header-anchor">#</a> Response</h3> <p>On suc=
cess, the call to this endpoint will return with 200 and the following body=
:</p> <div class=3D"language-json extra-class"><pre class=3D"language-json"=
><code>This endpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-53"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-53" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/rm?a=
rg=3D&lt;path&gt;&amp;recursive=3D&lt;value&gt;&amp;force=3D&lt;value&gt;"<=
/code></p> <hr> <h2 id=3D"api-v0-files-stat"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#api-v0-files-stat" class=3D"header-anchor">#</a> /api=
/v0/files/stat</h2> <p>Display file status.</p> <h3 id=3D"arguments-55"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#arguments-55" class=3D"hea=
der-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Path to=
 node to stat. Required: <strong>yes</strong>.</li> <li><code>format</code>=
 [string]: Print statistics in given format. Allowed tokens: &lt;hash&gt; &=
lt;size&gt; &lt;cumulsize&gt; &lt;type&gt; &lt;childs&gt;. Conflicts with o=
ther format options. Default: &lt;hash&gt;<br>
Size: &lt;size&gt;<br>
CumulativeSize: &lt;cumulsize&gt;<br>
ChildBlocks: &lt;childs&gt;<br>
Type: &lt;type&gt;. Default: <code>&lt;hash&gt; Size: &lt;size&gt; Cumulati=
veSize: &lt;cumulsize&gt; ChildBlocks: &lt;childs&gt; Type: &lt;type&gt;</c=
ode>. Required: no.</li> <li><code>hash</code> [bool]: Print only hash. Imp=
lies '--format=3D&lt;hash&gt;'. Conflicts with other format options. Requir=
ed: no.</li> <li><code>size</code> [bool]: Print only size. Implies '--form=
at=3D&lt;cumulsize&gt;'. Conflicts with other format options. Required: no.=
</li> <li><code>with-local</code> [bool]: Compute the amount of the dag tha=
t is local, and if possible the total size. Required: no.</li></ul> <h3 id=
=3D"response-54"><a href=3D"https://docs.ipfs.io/reference/http/api/#respon=
se-54" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call =
to this endpoint will return with 200 and the following body:</p> <div clas=
s=3D"language-json extra-class"><pre class=3D"language-json"><code><span cl=
ass=3D"token punctuation">{</span>
  <span class=3D"token property">"Blocks"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"CumulativeSize"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><s=
pan class=3D"token punctuation">,</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Local"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;bool&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"SizeLocal"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span c=
lass=3D"token punctuation">,</span>
  <span class=3D"token property">"Type"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"WithLocality"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;bool&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-54"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-54" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/files/stat=
?arg=3D&lt;path&gt;&amp;format=3D&lt;hash&gt; Size: &lt;size&gt; Cumulative=
Size: &lt;cumulsize&gt; ChildBlocks: &lt;childs&gt; Type: &lt;type&gt;&amp;=
hash=3D&lt;value&gt;&amp;size=3D&lt;value&gt;&amp;with-local=3D&lt;value&gt=
;"</code></p> <hr> <h2 id=3D"api-v0-files-write"><a href=3D"https://docs.ip=
fs.io/reference/http/api/#api-v0-files-write" class=3D"header-anchor">#</a>=
 /api/v0/files/write</h2> <p>Write to a mutable file in a given filesystem.=
</p> <h3 id=3D"arguments-56"><a href=3D"https://docs.ipfs.io/reference/http=
/api/#arguments-56" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><p=
><code>arg</code> [string]: Path to write to. Required: <strong>yes</strong=
>.</p></li> <li><p><code>offset</code> [int64]: Byte offset to begin writin=
g at. Required: no.</p></li> <li><p><code>create</code> [bool]: Create the =
file if it does not exist. Required: no.</p></li> <li><p><code>parents</cod=
e> [bool]: Make parent directories as needed. Required: no.</p></li> <li><p=
><code>truncate</code> [bool]: Truncate the file to size zero before writin=
g. Required: no.</p></li> <li><p><code>count</code> [int64]: Maximum number=
 of bytes to read. Required: no.</p></li> <li><p><code>raw-leaves</code> [b=
ool]: Use raw blocks for newly created leaf nodes. (experimental). Required=
: no.</p></li> <li><p><code>cid-version</code> [int]: Cid version to use. (=
experimental). Required: no.</p></li> <li><p><code>hash</code> [string]: Ha=
sh function to use. Will set Cid version to 1 if used. (experimental). Requ=
ired: no.</p></li></ul> <h3 id=3D"request-body-7"><a href=3D"https://docs.i=
pfs.io/reference/http/api/#request-body-7" class=3D"header-anchor">#</a> Re=
quest Body</h3> <p>Argument <code>data</code> is of file type. This endpoin=
t expects one or several files (depending on the command) in the body of th=
e request as 'multipart/form-data'.</p> <h3 id=3D"response-55"><a href=3D"h=
ttps://docs.ipfs.io/reference/http/api/#response-55" class=3D"header-anchor=
">#</a> Response</h3> <p>On success, the call to this endpoint will return =
with 200 and the following body:</p> <div class=3D"language-json extra-clas=
s"><pre class=3D"language-json"><code>This endpoint returns a `text/plain` =
response body.
</code></pre></div><h3 id=3D"curl-example-55"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-55" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/files/write?arg=3D&lt;path&gt;&amp;offset=3D&lt;value&gt;&amp;creat=
e=3D&lt;value&gt;&amp;parents=3D&lt;value&gt;&amp;truncate=3D&lt;value&gt;&=
amp;count=3D&lt;value&gt;&amp;raw-leaves=3D&lt;value&gt;&amp;cid-version=3D=
&lt;value&gt;&amp;hash=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-fi=
lestore-dups"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-fi=
lestore-dups" class=3D"header-anchor">#</a> /api/v0/filestore/dups</h2> <p>=
List blocks that are both in the filestore and standard block storage.</p> =
<h3 id=3D"arguments-57"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#arguments-57" class=3D"header-anchor">#</a> Arguments</h3> <p>This endpoin=
t takes no arguments.</p> <h3 id=3D"response-56"><a href=3D"https://docs.ip=
fs.io/reference/http/api/#response-56" class=3D"header-anchor">#</a> Respon=
se</h3> <p>On success, the call to this endpoint will return with 200 and t=
he following body:</p> <div class=3D"language-json extra-class"><pre class=
=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Err"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Ref"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-56"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-56" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/filestore/=
dups"</code></p> <hr> <h2 id=3D"api-v0-filestore-ls"><a href=3D"https://doc=
s.ipfs.io/reference/http/api/#api-v0-filestore-ls" class=3D"header-anchor">=
#</a> /api/v0/filestore/ls</h2> <p>List objects in filestore.</p> <h3 id=3D=
"arguments-58"><a href=3D"https://docs.ipfs.io/reference/http/api/#argument=
s-58" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code>=
 [string]: Cid of objects to list. Required: no.</li> <li><code>file-order<=
/code> [bool]: sort the results based on the path of the backing file. Requ=
ired: no.</li></ul> <h3 id=3D"response-57"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#response-57" class=3D"header-anchor">#</a> Response</h3=
> <p>On success, the call to this endpoint will return with 200 and the fol=
lowing body:</p> <div class=3D"language-json extra-class"><pre class=3D"lan=
guage-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"ErrorMsg"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"FilePath"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"Key"</span><span class=3D"token operator"=
>:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"/"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Offset"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Status"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;int32&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-57"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-57" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/filestore/=
ls?arg=3D&lt;obj&gt;&amp;file-order=3D&lt;value&gt;"</code></p> <hr> <h2 id=
=3D"api-v0-filestore-verify"><a href=3D"https://docs.ipfs.io/reference/http=
/api/#api-v0-filestore-verify" class=3D"header-anchor">#</a> /api/v0/filest=
ore/verify</h2> <p>Verify objects in filestore.</p> <h3 id=3D"arguments-59"=
><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-59" class=3D=
"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Cid=
 of objects to verify. Required: no.</li> <li><code>file-order</code> [bool=
]: verify the objects based on the order of the backing file. Required: no.=
</li></ul> <h3 id=3D"response-58"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#response-58" class=3D"header-anchor">#</a> Response</h3> <p>On s=
uccess, the call to this endpoint will return with 200 and the following bo=
dy:</p> <div class=3D"language-json extra-class"><pre class=3D"language-jso=
n"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"ErrorMsg"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"FilePath"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"Key"</span><span class=3D"token operator"=
>:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"/"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Offset"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Status"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;int32&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-58"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-58" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/filestore/=
verify?arg=3D&lt;obj&gt;&amp;file-order=3D&lt;value&gt;"</code></p> <hr> <h=
2 id=3D"api-v0-get"><a href=3D"https://docs.ipfs.io/reference/http/api/#api=
-v0-get" class=3D"header-anchor">#</a> /api/v0/get</h2> <p>Download IPFS ob=
jects.</p> <h3 id=3D"arguments-60"><a href=3D"https://docs.ipfs.io/referenc=
e/http/api/#arguments-60" class=3D"header-anchor">#</a> Arguments</h3> <ul>=
<li><code>arg</code> [string]: The path to the IPFS object(s) to be outputt=
ed. Required: <strong>yes</strong>.</li> <li><code>output</code> [string]: =
The path where the output should be stored. Required: no.</li> <li><code>ar=
chive</code> [bool]: Output a TAR archive. Required: no.</li> <li><code>com=
press</code> [bool]: Compress the output with GZIP compression. Required: n=
o.</li> <li><code>compression-level</code> [int]: The level of compression =
(1-9). Required: no.</li></ul> <h3 id=3D"response-59"><a href=3D"https://do=
cs.ipfs.io/reference/http/api/#response-59" class=3D"header-anchor">#</a> R=
esponse</h3> <p>On success, the call to this endpoint will return with 200 =
and the following body:</p> <div class=3D"language-json extra-class"><pre c=
lass=3D"language-json"><code>This endpoint returns a `text/plain` response =
body.
</code></pre></div><h3 id=3D"curl-example-59"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-59" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/get?arg=3D=
&lt;ipfs-path&gt;&amp;output=3D&lt;value&gt;&amp;archive=3D&lt;value&gt;&am=
p;compress=3D&lt;value&gt;&amp;compression-level=3D&lt;value&gt;"</code></p=
> <hr> <h2 id=3D"api-v0-id"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#api-v0-id" class=3D"header-anchor">#</a> /api/v0/id</h2> <p>Show IPFS =
node id info.</p> <h3 id=3D"arguments-61"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#arguments-61" class=3D"header-anchor">#</a> Arguments</h=
3> <ul><li><code>arg</code> [string]: Peer.ID of node to look up. Required:=
 no.</li> <li><code>format</code> [string]: Optional output format. Require=
d: no.</li> <li><code>peerid-base</code> [string]: Encoding used for peer I=
Ds: Can either be a multibase encoded CID or a base58btc encoded multihash.=
 Takes {b58mh|base36|k|base32|b...}. Default: <code>b58mh</code>. Required:=
 no.</li></ul> <h3 id=3D"response-60"><a href=3D"https://docs.ipfs.io/refer=
ence/http/api/#response-60" class=3D"header-anchor">#</a> Response</h3> <p>=
On success, the call to this endpoint will return with 200 and the followin=
g body:</p> <div class=3D"language-json extra-class"><pre class=3D"language=
-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Addresses"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"AgentVersion"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><spa=
n class=3D"token punctuation">,</span>
  <span class=3D"token property">"ID"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=3D=
"token punctuation">,</span>
  <span class=3D"token property">"ProtocolVersion"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><=
span class=3D"token punctuation">,</span>
  <span class=3D"token property">"Protocols"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"PublicKey"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-60"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-60" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/id?arg=3D&=
lt;peerid&gt;&amp;format=3D&lt;value&gt;&amp;peerid-base=3Db58mh"</code></p=
> <hr> <h2 id=3D"api-v0-key-export"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#api-v0-key-export" class=3D"header-anchor">#</a> /api/v0/key/e=
xport</h2> <p>Export a keypair</p> <h3 id=3D"arguments-62"><a href=3D"https=
://docs.ipfs.io/reference/http/api/#arguments-62" class=3D"header-anchor">#=
</a> Arguments</h3> <ul><li><code>arg</code> [string]: name of key to expor=
t Required: <strong>yes</strong>.</li> <li><code>output</code> [string]: Th=
e path where the output should be stored. Required: no.</li></ul> <h3 id=3D=
"response-61"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-=
61" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call to =
this endpoint will return with 200 and the following body:</p> <div class=
=3D"language-json extra-class"><pre class=3D"language-json"><code>This endp=
oint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-61"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-61" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/key/export=
?arg=3D&lt;name&gt;&amp;output=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"a=
pi-v0-key-gen"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-k=
ey-gen" class=3D"header-anchor">#</a> /api/v0/key/gen</h2> <p>Create a new =
keypair</p> <h3 id=3D"arguments-63"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#arguments-63" class=3D"header-anchor">#</a> Arguments</h3> <ul=
><li><code>arg</code> [string]: name of key to create Required: <strong>yes=
</strong>.</li> <li><code>type</code> [string]: type of the key to create: =
rsa, ed25519. Default: <code>ed25519</code>. Required: no.</li> <li><code>s=
ize</code> [int]: size of the key to generate. Required: no.</li> <li><code=
>ipns-base</code> [string]: Encoding used for keys: Can either be a multiba=
se encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|base=
32|b...}. Default: <code>base36</code>. Required: no.</li></ul> <h3 id=3D"r=
esponse-62"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-62=
" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call to th=
is endpoint will return with 200 and the following body:</p> <div class=3D"=
language-json extra-class"><pre class=3D"language-json"><code><span class=
=3D"token punctuation">{</span>
  <span class=3D"token property">"Id"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=3D=
"token punctuation">,</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-62"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-62" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/key/gen?ar=
g=3D&lt;name&gt;&amp;type=3Ded25519&amp;size=3D&lt;value&gt;&amp;ipns-base=
=3Dbase36"</code></p> <hr> <h2 id=3D"api-v0-key-import"><a href=3D"https://=
docs.ipfs.io/reference/http/api/#api-v0-key-import" class=3D"header-anchor"=
>#</a> /api/v0/key/import</h2> <p>Import a key and prints imported key id</=
p> <h3 id=3D"arguments-64"><a href=3D"https://docs.ipfs.io/reference/http/a=
pi/#arguments-64" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><p><=
code>arg</code> [string]: name to associate with key in keychain Required: =
<strong>yes</strong>.</p></li> <li><p><code>ipns-base</code> [string]: Enco=
ding used for keys: Can either be a multibase encoded CID or a base58btc en=
coded multihash. Takes {b58mh|base36|k|base32|b...}. Default: <code>base36<=
/code>. Required: no.</p></li></ul> <h3 id=3D"request-body-8"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#request-body-8" class=3D"header-anch=
or">#</a> Request Body</h3> <p>Argument <code>key</code> is of file type. T=
his endpoint expects one or several files (depending on the command) in the=
 body of the request as 'multipart/form-data'.</p> <h3 id=3D"response-63"><=
a href=3D"https://docs.ipfs.io/reference/http/api/#response-63" class=3D"he=
ader-anchor">#</a> Response</h3> <p>On success, the call to this endpoint w=
ill return with 200 and the following body:</p> <div class=3D"language-json=
 extra-class"><pre class=3D"language-json"><code><span class=3D"token punct=
uation">{</span>
  <span class=3D"token property">"Id"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=3D=
"token punctuation">,</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-63"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-63" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/key/import?arg=3D&lt;name&gt;&amp;ipns-base=3Dbase36"</code></p> <h=
r> <h2 id=3D"api-v0-key-list"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#api-v0-key-list" class=3D"header-anchor">#</a> /api/v0/key/list</h2>=
 <p>List all local keypairs.</p> <h3 id=3D"arguments-65"><a href=3D"https:/=
/docs.ipfs.io/reference/http/api/#arguments-65" class=3D"header-anchor">#</=
a> Arguments</h3> <ul><li><code>l</code> [bool]: Show extra information abo=
ut keys. Required: no.</li> <li><code>ipns-base</code> [string]: Encoding u=
sed for keys: Can either be a multibase encoded CID or a base58btc encoded =
multihash. Takes {b58mh|base36|k|base32|b...}. Default: <code>base36</code>=
. Required: no.</li></ul> <h3 id=3D"response-64"><a href=3D"https://docs.ip=
fs.io/reference/http/api/#response-64" class=3D"header-anchor">#</a> Respon=
se</h3> <p>On success, the call to this endpoint will return with 200 and t=
he following body:</p> <div class=3D"language-json extra-class"><pre class=
=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Keys"</span><span class=3D"token operator=
">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Id"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span clas=
s=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-64"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-64" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/key/list?l=
=3D&lt;value&gt;&amp;ipns-base=3Dbase36"</code></p> <hr> <h2 id=3D"api-v0-k=
ey-rename"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-key-r=
ename" class=3D"header-anchor">#</a> /api/v0/key/rename</h2> <p>Rename a ke=
ypair.</p> <h3 id=3D"arguments-66"><a href=3D"https://docs.ipfs.io/referenc=
e/http/api/#arguments-66" class=3D"header-anchor">#</a> Arguments</h3> <ul>=
<li><code>arg</code> [string]: name of key to rename Required: <strong>yes<=
/strong>.</li> <li><code>arg</code> [string]: new name of the key Required:=
 <strong>yes</strong>.</li> <li><code>force</code> [bool]: Allow to overwri=
te an existing key. Required: no.</li> <li><code>ipns-base</code> [string]:=
 Encoding used for keys: Can either be a multibase encoded CID or a base58b=
tc encoded multihash. Takes {b58mh|base36|k|base32|b...}. Default: <code>ba=
se36</code>. Required: no.</li></ul> <h3 id=3D"response-65"><a href=3D"http=
s://docs.ipfs.io/reference/http/api/#response-65" class=3D"header-anchor">#=
</a> Response</h3> <p>On success, the call to this endpoint will return wit=
h 200 and the following body:</p> <div class=3D"language-json extra-class">=
<pre class=3D"language-json"><code><span class=3D"token punctuation">{</spa=
n>
  <span class=3D"token property">"Id"</span><span class=3D"token operator">=
:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=3D=
"token punctuation">,</span>
  <span class=3D"token property">"Now"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Overwrite"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;bool&gt;"</span><span cla=
ss=3D"token punctuation">,</span>
  <span class=3D"token property">"Was"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-65"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-65" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/key/rename=
?arg=3D&lt;name&gt;&amp;arg=3D&lt;newName&gt;&amp;force=3D&lt;value&gt;&amp=
;ipns-base=3Dbase36"</code></p> <hr> <h2 id=3D"api-v0-key-rm"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#api-v0-key-rm" class=3D"header-ancho=
r">#</a> /api/v0/key/rm</h2> <p>Remove a keypair.</p> <h3 id=3D"arguments-6=
7"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-67" class=
=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: =
names of keys to remove Required: <strong>yes</strong>.</li> <li><code>l</c=
ode> [bool]: Show extra information about keys. Required: no.</li> <li><cod=
e>ipns-base</code> [string]: Encoding used for keys: Can either be a multib=
ase encoded CID or a base58btc encoded multihash. Takes {b58mh|base36|k|bas=
e32|b...}. Default: <code>base36</code>. Required: no.</li></ul> <h3 id=3D"=
response-66"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-6=
6" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call to t=
his endpoint will return with 200 and the following body:</p> <div class=3D=
"language-json extra-class"><pre class=3D"language-json"><code><span class=
=3D"token punctuation">{</span>
  <span class=3D"token property">"Keys"</span><span class=3D"token operator=
">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Id"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span clas=
s=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-66"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-66" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/key/rm?arg=
=3D&lt;name&gt;&amp;l=3D&lt;value&gt;&amp;ipns-base=3Dbase36"</code></p> <h=
r> <h2 id=3D"api-v0-key-rotate"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#api-v0-key-rotate" class=3D"header-anchor">#</a> /api/v0/key/rotat=
e</h2> <p>Rotates the IPFS identity.</p> <h3 id=3D"arguments-68"><a href=3D=
"https://docs.ipfs.io/reference/http/api/#arguments-68" class=3D"header-anc=
hor">#</a> Arguments</h3> <ul><li><code>oldkey</code> [string]: Keystore na=
me to use for backing up your existing identity. Required: no.</li> <li><co=
de>type</code> [string]: type of the key to create: rsa, ed25519. Default: =
<code>ed25519</code>. Required: no.</li> <li><code>size</code> [int]: size =
of the key to generate. Required: no.</li></ul> <h3 id=3D"response-67"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#response-67" class=3D"heade=
r-anchor">#</a> Response</h3> <p>On success, the call to this endpoint will=
 return with 200 and the following body:</p> <div class=3D"language-json ex=
tra-class"><pre class=3D"language-json"><code>This endpoint returns a `text=
/plain` response body.
</code></pre></div><h3 id=3D"curl-example-67"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-67" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/key/rotate=
?oldkey=3D&lt;value&gt;&amp;type=3Ded25519&amp;size=3D&lt;value&gt;"</code>=
</p> <hr> <h2 id=3D"api-v0-log-level"><a href=3D"https://docs.ipfs.io/refer=
ence/http/api/#api-v0-log-level" class=3D"header-anchor">#</a> /api/v0/log/=
level</h2> <p>Change the logging level.</p> <h3 id=3D"arguments-69"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#arguments-69" class=3D"header-=
anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: The subsyst=
em logging identifier. Use 'all' for all subsystems. Required: <strong>yes<=
/strong>.</li> <li><code>arg</code> [string]: The log level, with 'debug' t=
he most verbose and 'fatal' the least verbose.<br>
One of: debug, info, warn, error, dpanic, panic, fatal.<br>
Required: <strong>yes</strong>.</li></ul> <h3 id=3D"response-68"><a href=3D=
"https://docs.ipfs.io/reference/http/api/#response-68" class=3D"header-anch=
or">#</a> Response</h3> <p>On success, the call to this endpoint will retur=
n with 200 and the following body:</p> <div class=3D"language-json extra-cl=
ass"><pre class=3D"language-json"><code><span class=3D"token punctuation">{=
</span>
  <span class=3D"token property">"Message"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-68"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-68" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/log/level?=
arg=3D&lt;subsystem&gt;&amp;arg=3D&lt;level&gt;"</code></p> <hr> <h2 id=3D"=
api-v0-log-ls"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-l=
og-ls" class=3D"header-anchor">#</a> /api/v0/log/ls</h2> <p>List the loggin=
g subsystems.</p> <h3 id=3D"arguments-70"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#arguments-70" class=3D"header-anchor">#</a> Arguments</h=
3> <p>This endpoint takes no arguments.</p> <h3 id=3D"response-69"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#response-69" class=3D"header-a=
nchor">#</a> Response</h3> <p>On success, the call to this endpoint will re=
turn with 200 and the following body:</p> <div class=3D"language-json extra=
-class"><pre class=3D"language-json"><code><span class=3D"token punctuation=
">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-69"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-69" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/log/ls"</c=
ode></p> <hr> <h2 id=3D"api-v0-log-tail"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#api-v0-log-tail" class=3D"header-anchor">#</a> /api/v0/lo=
g/tail</h2> <p>Read the event log.</p> <h3 id=3D"arguments-71"><a href=3D"h=
ttps://docs.ipfs.io/reference/http/api/#arguments-71" class=3D"header-ancho=
r">#</a> Arguments</h3> <p>This endpoint takes no arguments.</p> <h3 id=3D"=
response-70"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-7=
0" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call to t=
his endpoint will return with 200 and the following body:</p> <div class=3D=
"language-json extra-class"><pre class=3D"language-json"><code>This endpoin=
t returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-70"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-70" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/log/tail"<=
/code></p> <hr> <h2 id=3D"api-v0-ls"><a href=3D"https://docs.ipfs.io/refere=
nce/http/api/#api-v0-ls" class=3D"header-anchor">#</a> /api/v0/ls</h2> <p>L=
ist directory contents for Unix filesystem objects.</p> <h3 id=3D"arguments=
-72"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-72" clas=
s=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]:=
 The path to the IPFS object(s) to list links from. Required: <strong>yes</=
strong>.</li> <li><code>headers</code> [bool]: Print table headers (Hash, S=
ize, Name). Required: no.</li> <li><code>resolve-type</code> [bool]: Resolv=
e linked objects to find out their types. Default: <code>true</code>. Requi=
red: no.</li> <li><code>size</code> [bool]: Resolve linked objects to find =
out their file size. Default: <code>true</code>. Required: no.</li> <li><co=
de>stream</code> [bool]: Enable experimental streaming of directory entries=
 as they are traversed. Required: no.</li></ul> <h3 id=3D"response-71"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#response-71" class=3D"heade=
r-anchor">#</a> Response</h3> <p>On success, the call to this endpoint will=
 return with 200 and the following body:</p> <div class=3D"language-json ex=
tra-class"><pre class=3D"language-json"><code><span class=3D"token punctuat=
ion">{</span>
  <span class=3D"token property">"Objects"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Links"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token punctuation">{</span>
          <span class=3D"token property">"Hash"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><spa=
n class=3D"token punctuation">,</span>
          <span class=3D"token property">"Name"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><spa=
n class=3D"token punctuation">,</span>
          <span class=3D"token property">"Size"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><spa=
n class=3D"token punctuation">,</span>
          <span class=3D"token property">"Target"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><s=
pan class=3D"token punctuation">,</span>
          <span class=3D"token property">"Type"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;int32&gt;"</span>
        <span class=3D"token punctuation">}</span>
      <span class=3D"token punctuation">]</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-71"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-71" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/ls?arg=3D&=
lt;ipfs-path&gt;&amp;headers=3D&lt;value&gt;&amp;resolve-type=3Dtrue&amp;si=
ze=3Dtrue&amp;stream=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-moun=
t"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-mount" class=
=3D"header-anchor">#</a> /api/v0/mount</h2> <p>Mounts IPFS to the filesyste=
m (read-only).</p> <h3 id=3D"arguments-73"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#arguments-73" class=3D"header-anchor">#</a> Arguments</=
h3> <ul><li><code>ipfs-path</code> [string]: The path where IPFS should be =
mounted. Required: no.</li> <li><code>ipns-path</code> [string]: The path w=
here IPNS should be mounted. Required: no.</li></ul> <h3 id=3D"response-72"=
><a href=3D"https://docs.ipfs.io/reference/http/api/#response-72" class=3D"=
header-anchor">#</a> Response</h3> <p>On success, the call to this endpoint=
 will return with 200 and the following body:</p> <div class=3D"language-js=
on extra-class"><pre class=3D"language-json"><code><span class=3D"token pun=
ctuation">{</span>
  <span class=3D"token property">"FuseAllowOther"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;bool&gt;"</span><spa=
n class=3D"token punctuation">,</span>
  <span class=3D"token property">"IPFS"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"IPNS"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-72"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-72" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/mount?ipfs=
-path=3D&lt;value&gt;&amp;ipns-path=3D&lt;value&gt;"</code></p> <hr> <h2 id=
=3D"api-v0-name-publish"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#api-v0-name-publish" class=3D"header-anchor">#</a> /api/v0/name/publish</=
h2> <p>Publish IPNS names.</p> <h3 id=3D"arguments-74"><a href=3D"https://d=
ocs.ipfs.io/reference/http/api/#arguments-74" class=3D"header-anchor">#</a>=
 Arguments</h3> <ul><li><code>arg</code> [string]: ipfs path of the object =
to be published. Required: <strong>yes</strong>.</li> <li><code>resolve</co=
de> [bool]: Check if the given path can be resolved before publishing. Defa=
ult: <code>true</code>. Required: no.</li> <li><code>lifetime</code> [strin=
g]: Time duration that the record will be valid for.<br>
This accepts durations such as "300s", "1.5h" or "2h45m". Valid time units =
are<br>
"ns", "us" (or "=C2=B5s"), "ms", "s", "m", "h". Default: <code>24h</code>. =
Required: no.</li> <li><code>allow-offline</code> [bool]: When offline, sav=
e the IPNS record to the the local datastore without broadcasting to the ne=
twork instead of simply failing. Required: no.</li> <li><code>ttl</code> [s=
tring]: Time duration this record should be cached for. Uses the same synta=
x as the lifetime option. (caution: experimental). Required: no.</li> <li><=
code>key</code> [string]: Name of the key to be used or a valid PeerID, as =
listed by 'ipfs key list -l'. Default: <code>self</code>. Required: no.</li=
> <li><code>quieter</code> [bool]: Write only final hash. Required: no.</li=
> <li><code>ipns-base</code> [string]: Encoding used for keys: Can either b=
e a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|ba=
se36|k|base32|b...}. Default: <code>base36</code>. Required: no.</li></ul> =
<h3 id=3D"response-73"><a href=3D"https://docs.ipfs.io/reference/http/api/#=
response-73" class=3D"header-anchor">#</a> Response</h3> <p>On success, the=
 call to this endpoint will return with 200 and the following body:</p> <di=
v class=3D"language-json extra-class"><pre class=3D"language-json"><code><s=
pan class=3D"token punctuation">{</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Value"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-73"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-73" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/name/publi=
sh?arg=3D&lt;ipfs-path&gt;&amp;resolve=3Dtrue&amp;lifetime=3D24h&amp;allow-=
offline=3D&lt;value&gt;&amp;ttl=3D&lt;value&gt;&amp;key=3Dself&amp;quieter=
=3D&lt;value&gt;&amp;ipns-base=3Dbase36"</code></p> <hr> <h2 id=3D"api-v0-n=
ame-pubsub-cancel"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-=
v0-name-pubsub-cancel" class=3D"header-anchor">#</a> /api/v0/name/pubsub/ca=
ncel</h2> <p>Cancel a name subscription.</p> <h3 id=3D"arguments-75"><a hre=
f=3D"https://docs.ipfs.io/reference/http/api/#arguments-75" class=3D"header=
-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Name to ca=
ncel the subscription for. Required: <strong>yes</strong>.</li></ul> <h3 id=
=3D"response-74"><a href=3D"https://docs.ipfs.io/reference/http/api/#respon=
se-74" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call =
to this endpoint will return with 200 and the following body:</p> <div clas=
s=3D"language-json extra-class"><pre class=3D"language-json"><code><span cl=
ass=3D"token punctuation">{</span>
  <span class=3D"token property">"Canceled"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;bool&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-74"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-74" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/name/pubsu=
b/cancel?arg=3D&lt;name&gt;"</code></p> <hr> <h2 id=3D"api-v0-name-pubsub-s=
tate"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-name-pubsu=
b-state" class=3D"header-anchor">#</a> /api/v0/name/pubsub/state</h2> <p>Qu=
ery the state of IPNS pubsub.</p> <h3 id=3D"arguments-76"><a href=3D"https:=
//docs.ipfs.io/reference/http/api/#arguments-76" class=3D"header-anchor">#<=
/a> Arguments</h3> <p>This endpoint takes no arguments.</p> <h3 id=3D"respo=
nse-75"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-75" cl=
ass=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this e=
ndpoint will return with 200 and the following body:</p> <div class=3D"lang=
uage-json extra-class"><pre class=3D"language-json"><code><span class=3D"to=
ken punctuation">{</span>
  <span class=3D"token property">"Enabled"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;bool&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-75"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-75" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/name/pubsu=
b/state"</code></p> <hr> <h2 id=3D"api-v0-name-pubsub-subs"><a href=3D"http=
s://docs.ipfs.io/reference/http/api/#api-v0-name-pubsub-subs" class=3D"head=
er-anchor">#</a> /api/v0/name/pubsub/subs</h2> <p>Show current name subscri=
ptions.</p> <h3 id=3D"arguments-77"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#arguments-77" class=3D"header-anchor">#</a> Arguments</h3> <ul=
><li><code>ipns-base</code> [string]: Encoding used for keys: Can either be=
 a multibase encoded CID or a base58btc encoded multihash. Takes {b58mh|bas=
e36|k|base32|b...}. Default: <code>base36</code>. Required: no.</li></ul> <=
h3 id=3D"response-76"><a href=3D"https://docs.ipfs.io/reference/http/api/#r=
esponse-76" class=3D"header-anchor">#</a> Response</h3> <p>On success, the =
call to this endpoint will return with 200 and the following body:</p> <div=
 class=3D"language-json extra-class"><pre class=3D"language-json"><code><sp=
an class=3D"token punctuation">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-76"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-76" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/name/pubsu=
b/subs?ipns-base=3Dbase36"</code></p> <hr> <h2 id=3D"api-v0-name-resolve"><=
a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-name-resolve" cla=
ss=3D"header-anchor">#</a> /api/v0/name/resolve</h2> <p>Resolve IPNS names.=
</p> <h3 id=3D"arguments-78"><a href=3D"https://docs.ipfs.io/reference/http=
/api/#arguments-78" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><c=
ode>arg</code> [string]: The IPNS name to resolve. Defaults to your node's =
peerID. Required: no.</li> <li><code>recursive</code> [bool]: Resolve until=
 the result is not an IPNS name. Default: <code>true</code>. Required: no.<=
/li> <li><code>nocache</code> [bool]: Do not use cached entries. Required: =
no.</li> <li><code>dht-record-count</code> [uint]: Number of records to req=
uest for DHT resolution. Required: no.</li> <li><code>dht-timeout</code> [s=
tring]: Max time to collect values during DHT resolution eg "30s". Pass 0 f=
or no timeout. Required: no.</li> <li><code>stream</code> [bool]: Stream en=
tries as they are found. Required: no.</li></ul> <h3 id=3D"response-77"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#response-77" class=3D"head=
er-anchor">#</a> Response</h3> <p>On success, the call to this endpoint wil=
l return with 200 and the following body:</p> <div class=3D"language-json e=
xtra-class"><pre class=3D"language-json"><code><span class=3D"token punctua=
tion">{</span>
  <span class=3D"token property">"Path"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-77"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-77" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/name/resol=
ve?arg=3D&lt;name&gt;&amp;recursive=3Dtrue&amp;nocache=3D&lt;value&gt;&amp;=
dht-record-count=3D&lt;value&gt;&amp;dht-timeout=3D&lt;value&gt;&amp;stream=
=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-object-data"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#api-v0-object-data" class=3D"heade=
r-anchor">#</a> /api/v0/object/data</h2> <p>Deprecated way to read the raw =
bytes of a dag-pb object: use 'dag get' instead.</p> <h3 id=3D"arguments-79=
"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-79" class=
=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: =
Key of the object to retrieve, in base58-encoded multihash format. Required=
: <strong>yes</strong>.</li></ul> <h3 id=3D"response-78"><a href=3D"https:/=
/docs.ipfs.io/reference/http/api/#response-78" class=3D"header-anchor">#</a=
> Response</h3> <p>On success, the call to this endpoint will return with 2=
00 and the following body:</p> <div class=3D"language-json extra-class"><pr=
e class=3D"language-json"><code>This endpoint returns a `text/plain` respon=
se body.
</code></pre></div><h3 id=3D"curl-example-78"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-78" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/object/dat=
a?arg=3D&lt;key&gt;"</code></p> <hr> <h2 id=3D"api-v0-object-diff"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#api-v0-object-diff" class=3D"h=
eader-anchor">#</a> /api/v0/object/diff</h2> <p>Display the diff between tw=
o IPFS objects.</p> <h3 id=3D"arguments-80"><a href=3D"https://docs.ipfs.io=
/reference/http/api/#arguments-80" class=3D"header-anchor">#</a> Arguments<=
/h3> <ul><li><code>arg</code> [string]: Object to diff against. Required: <=
strong>yes</strong>.</li> <li><code>arg</code> [string]: Object to diff. Re=
quired: <strong>yes</strong>.</li> <li><code>verbose</code> [bool]: Print e=
xtra information. Required: no.</li></ul> <h3 id=3D"response-79"><a href=3D=
"https://docs.ipfs.io/reference/http/api/#response-79" class=3D"header-anch=
or">#</a> Response</h3> <p>On success, the call to this endpoint will retur=
n with 200 and the following body:</p> <div class=3D"language-json extra-cl=
ass"><pre class=3D"language-json"><code><span class=3D"token punctuation">{=
</span>
  <span class=3D"token property">"Changes"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"After"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token property">"/"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
      <span class=3D"token punctuation">}</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"Before"</span><span class=3D"token op=
erator">:</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token property">"/"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
      <span class=3D"token punctuation">}</span><span class=3D"token punctu=
ation">,</span>
      <span class=3D"token property">"Path"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Type"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-79"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-79" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/object/dif=
f?arg=3D&lt;obj_a&gt;&amp;arg=3D&lt;obj_b&gt;&amp;verbose=3D&lt;value&gt;"<=
/code></p> <hr> <h2 id=3D"api-v0-object-get"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#api-v0-object-get" class=3D"header-anchor">#</a> /api=
/v0/object/get</h2> <p>Deprecated way to get and serialize the dag-pb node.=
 Use 'dag get' instead</p> <h3 id=3D"arguments-81"><a href=3D"https://docs.=
ipfs.io/reference/http/api/#arguments-81" class=3D"header-anchor">#</a> Arg=
uments</h3> <ul><li><code>arg</code> [string]: Key of the dag-pb object to =
retrieve, in base58-encoded multihash format. Required: <strong>yes</strong=
>.</li> <li><code>data-encoding</code> [string]: Encoding type of the data =
field, either "text" or "base64". Default: <code>text</code>. Required: no.=
</li></ul> <h3 id=3D"response-80"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#response-80" class=3D"header-anchor">#</a> Response</h3> <p>On s=
uccess, the call to this endpoint will return with 200 and the following bo=
dy:</p> <div class=3D"language-json extra-class"><pre class=3D"language-jso=
n"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Data"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Links"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-80"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-80" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/object/get=
?arg=3D&lt;key&gt;&amp;data-encoding=3Dtext"</code></p> <hr> <h2 id=3D"api-=
v0-object-links"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0=
-object-links" class=3D"header-anchor">#</a> /api/v0/object/links</h2> <p>D=
eprecated way to output links in the specified dag-pb object: use 'dag get'=
 instead.</p> <h3 id=3D"arguments-82"><a href=3D"https://docs.ipfs.io/refer=
ence/http/api/#arguments-82" class=3D"header-anchor">#</a> Arguments</h3> <=
ul><li><code>arg</code> [string]: Key of the dag-pb object to retrieve, in =
base58-encoded multihash format. Required: <strong>yes</strong>.</li> <li><=
code>headers</code> [bool]: Print table headers (Hash, Size, Name). Require=
d: no.</li></ul> <h3 id=3D"response-81"><a href=3D"https://docs.ipfs.io/ref=
erence/http/api/#response-81" class=3D"header-anchor">#</a> Response</h3> <=
p>On success, the call to this endpoint will return with 200 and the follow=
ing body:</p> <div class=3D"language-json extra-class"><pre class=3D"langua=
ge-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Links"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-81"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-81" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/object/lin=
ks?arg=3D&lt;key&gt;&amp;headers=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D=
"api-v0-object-new"><a href=3D"https://docs.ipfs.io/reference/http/api/#api=
-v0-object-new" class=3D"header-anchor">#</a> /api/v0/object/new</h2> <p>De=
precated way to create a new dag-pb object from a template.</p> <h3 id=3D"a=
rguments-83"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-=
83" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [=
string]: Template to use. Optional. Required: no.</li></ul> <h3 id=3D"respo=
nse-82"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-82" cl=
ass=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this e=
ndpoint will return with 200 and the following body:</p> <div class=3D"lang=
uage-json extra-class"><pre class=3D"language-json"><code><span class=3D"to=
ken punctuation">{</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Links"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-82"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-82" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/object/new=
?arg=3D&lt;template&gt;"</code></p> <hr> <h2 id=3D"api-v0-object-patch-add-=
link"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-object-pat=
ch-add-link" class=3D"header-anchor">#</a> /api/v0/object/patch/add-link</h=
2> <p>Deprecated way to add a link to a given dag-pb.</p> <h3 id=3D"argumen=
ts-84"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-84" cl=
ass=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string=
]: The hash of the node to modify. Required: <strong>yes</strong>.</li> <li=
><code>arg</code> [string]: Name of link to create. Required: <strong>yes</=
strong>.</li> <li><code>arg</code> [string]: IPFS object to add link to. Re=
quired: <strong>yes</strong>.</li> <li><code>create</code> [bool]: Create i=
ntermediary nodes. Required: no.</li></ul> <h3 id=3D"response-83"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#response-83" class=3D"header-a=
nchor">#</a> Response</h3> <p>On success, the call to this endpoint will re=
turn with 200 and the following body:</p> <div class=3D"language-json extra=
-class"><pre class=3D"language-json"><code><span class=3D"token punctuation=
">{</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Links"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-83"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-83" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/object/pat=
ch/add-link?arg=3D&lt;root&gt;&amp;arg=3D&lt;name&gt;&amp;arg=3D&lt;ref&gt;=
&amp;create=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-object-patch-=
append-data"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-obj=
ect-patch-append-data" class=3D"header-anchor">#</a> /api/v0/object/patch/a=
ppend-data</h2> <p>Deprecated way to append data to the data segment of a D=
AG node.</p> <h3 id=3D"arguments-85"><a href=3D"https://docs.ipfs.io/refere=
nce/http/api/#arguments-85" class=3D"header-anchor">#</a> Arguments</h3> <u=
l><li><code>arg</code> [string]: The hash of the node to modify. Required: =
<strong>yes</strong>.</li></ul> <h3 id=3D"request-body-9"><a href=3D"https:=
//docs.ipfs.io/reference/http/api/#request-body-9" class=3D"header-anchor">=
#</a> Request Body</h3> <p>Argument <code>data</code> is of file type. This=
 endpoint expects one or several files (depending on the command) in the bo=
dy of the request as 'multipart/form-data'.</p> <h3 id=3D"response-84"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#response-84" class=3D"heade=
r-anchor">#</a> Response</h3> <p>On success, the call to this endpoint will=
 return with 200 and the following body:</p> <div class=3D"language-json ex=
tra-class"><pre class=3D"language-json"><code><span class=3D"token punctuat=
ion">{</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Links"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-84"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-84" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/object/patch/append-data?arg=3D&lt;root&gt;"</code></p> <hr> <h2 id=
=3D"api-v0-object-patch-rm-link"><a href=3D"https://docs.ipfs.io/reference/=
http/api/#api-v0-object-patch-rm-link" class=3D"header-anchor">#</a> /api/v=
0/object/patch/rm-link</h2> <p>Deprecated way to remove a link from dag-pb =
object.</p> <h3 id=3D"arguments-86"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#arguments-86" class=3D"header-anchor">#</a> Arguments</h3> <ul=
><li><code>arg</code> [string]: The hash of the node to modify. Required: <=
strong>yes</strong>.</li> <li><code>arg</code> [string]: Name of the link t=
o remove. Required: <strong>yes</strong>.</li></ul> <h3 id=3D"response-85">=
<a href=3D"https://docs.ipfs.io/reference/http/api/#response-85" class=3D"h=
eader-anchor">#</a> Response</h3> <p>On success, the call to this endpoint =
will return with 200 and the following body:</p> <div class=3D"language-jso=
n extra-class"><pre class=3D"language-json"><code><span class=3D"token punc=
tuation">{</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Links"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-85"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-85" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/object/pat=
ch/rm-link?arg=3D&lt;root&gt;&amp;arg=3D&lt;name&gt;"</code></p> <hr> <h2 i=
d=3D"api-v0-object-patch-set-data"><a href=3D"https://docs.ipfs.io/referenc=
e/http/api/#api-v0-object-patch-set-data" class=3D"header-anchor">#</a> /ap=
i/v0/object/patch/set-data</h2> <p>Deprecated way to set the data field of =
dag-pb object.</p> <h3 id=3D"arguments-87"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#arguments-87" class=3D"header-anchor">#</a> Arguments</=
h3> <ul><li><code>arg</code> [string]: The hash of the node to modify. Requ=
ired: <strong>yes</strong>.</li></ul> <h3 id=3D"request-body-10"><a href=3D=
"https://docs.ipfs.io/reference/http/api/#request-body-10" class=3D"header-=
anchor">#</a> Request Body</h3> <p>Argument <code>data</code> is of file ty=
pe. This endpoint expects one or several files (depending on the command) i=
n the body of the request as 'multipart/form-data'.</p> <h3 id=3D"response-=
86"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-86" class=
=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this endp=
oint will return with 200 and the following body:</p> <div class=3D"languag=
e-json extra-class"><pre class=3D"language-json"><code><span class=3D"token=
 punctuation">{</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Links"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-86"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-86" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/object/patch/set-data?arg=3D&lt;root&gt;"</code></p> <hr> <h2 id=3D=
"api-v0-object-put"><a href=3D"https://docs.ipfs.io/reference/http/api/#api=
-v0-object-put" class=3D"header-anchor">#</a> /api/v0/object/put</h2> <p>De=
precated way to store input as a DAG object. Use 'dag put' instead.</p> <h3=
 id=3D"arguments-88"><a href=3D"https://docs.ipfs.io/reference/http/api/#ar=
guments-88" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>inpu=
tenc</code> [string]: Encoding type of input data. One of: {"protobuf", "js=
on"}. Default: <code>json</code>. Required: no.</li> <li><code>datafieldenc=
</code> [string]: Encoding type of the data field, either "text" or "base64=
". Default: <code>text</code>. Required: no.</li> <li><code>pin</code> [boo=
l]: Pin this object when adding. Required: no.</li> <li><code>quiet</code> =
[bool]: Write minimal output. Required: no.</li></ul> <h3 id=3D"request-bod=
y-11"><a href=3D"https://docs.ipfs.io/reference/http/api/#request-body-11" =
class=3D"header-anchor">#</a> Request Body</h3> <p>Argument <code>data</cod=
e> is of file type. This endpoint expects one or several files (depending o=
n the command) in the body of the request as 'multipart/form-data'.</p> <h3=
 id=3D"response-87"><a href=3D"https://docs.ipfs.io/reference/http/api/#res=
ponse-87" class=3D"header-anchor">#</a> Response</h3> <p>On success, the ca=
ll to this endpoint will return with 200 and the following body:</p> <div c=
lass=3D"language-json extra-class"><pre class=3D"language-json"><code><span=
 class=3D"token punctuation">{</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Links"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Hash"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Name"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Size"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-87"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-87" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:5001=
/api/v0/object/put?inputenc=3Djson&amp;datafieldenc=3Dtext&amp;pin=3D&lt;va=
lue&gt;&amp;quiet=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-object-=
stat"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-object-sta=
t" class=3D"header-anchor">#</a> /api/v0/object/stat</h2> <p>Deprecated way=
 to read stats for the dag-pb node. Use 'files stat' instead.</p> <h3 id=3D=
"arguments-89"><a href=3D"https://docs.ipfs.io/reference/http/api/#argument=
s-89" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code>=
 [string]: Key of the object to retrieve, in base58-encoded multihash forma=
t. Required: <strong>yes</strong>.</li> <li><code>human</code> [bool]: Prin=
t sizes in human readable format (e.g., 1K 234M 2G). Required: no.</li></ul=
> <h3 id=3D"response-88"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#response-88" class=3D"header-anchor">#</a> Response</h3> <p>On success, t=
he call to this endpoint will return with 200 and the following body:</p> <=
div class=3D"language-json extra-class"><pre class=3D"language-json"><code>=
<span class=3D"token punctuation">{</span>
  <span class=3D"token property">"BlockSize"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"CumulativeSize"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span=
 class=3D"token punctuation">,</span>
  <span class=3D"token property">"DataSize"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"LinksSize"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"NumLinks"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-88"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-88" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/object/sta=
t?arg=3D&lt;key&gt;&amp;human=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"ap=
i-v0-p2p-close"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-=
p2p-close" class=3D"header-anchor">#</a> /api/v0/p2p/close</h2> <p>Stop lis=
tening for new connections to forward.</p> <h3 id=3D"arguments-90"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#arguments-90" class=3D"header-=
anchor">#</a> Arguments</h3> <ul><li><code>all</code> [bool]: Close all lis=
teners. Required: no.</li> <li><code>protocol</code> [string]: Match protoc=
ol name. Required: no.</li> <li><code>listen-address</code> [string]: Match=
 listen address. Required: no.</li> <li><code>target-address</code> [string=
]: Match target address. Required: no.</li></ul> <h3 id=3D"response-89"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#response-89" class=3D"head=
er-anchor">#</a> Response</h3> <p>On success, the call to this endpoint wil=
l return with 200 and the following body:</p> <div class=3D"language-json e=
xtra-class"><pre class=3D"language-json"><code><span class=3D"token string"=
>"&lt;int&gt;"</span>

</code></pre></div><h3 id=3D"curl-example-89"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-89" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/p2p/close?=
all=3D&lt;value&gt;&amp;protocol=3D&lt;value&gt;&amp;listen-address=3D&lt;v=
alue&gt;&amp;target-address=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-=
v0-p2p-forward"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-=
p2p-forward" class=3D"header-anchor">#</a> /api/v0/p2p/forward</h2> <p>Forw=
ard connections to libp2p service.</p> <h3 id=3D"arguments-91"><a href=3D"h=
ttps://docs.ipfs.io/reference/http/api/#arguments-91" class=3D"header-ancho=
r">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Protocol name. R=
equired: <strong>yes</strong>.</li> <li><code>arg</code> [string]: Listenin=
g endpoint. Required: <strong>yes</strong>.</li> <li><code>arg</code> [stri=
ng]: Target endpoint. Required: <strong>yes</strong>.</li> <li><code>allow-=
custom-protocol</code> [bool]: Don't require /x/ prefix. Required: no.</li>=
</ul> <h3 id=3D"response-90"><a href=3D"https://docs.ipfs.io/reference/http=
/api/#response-90" class=3D"header-anchor">#</a> Response</h3> <p>On succes=
s, the call to this endpoint will return with 200 and the following body:</=
p> <div class=3D"language-json extra-class"><pre class=3D"language-json"><c=
ode>This endpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-90"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-90" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/p2p/forwar=
d?arg=3D&lt;protocol&gt;&amp;arg=3D&lt;listen-address&gt;&amp;arg=3D&lt;tar=
get-address&gt;&amp;allow-custom-protocol=3D&lt;value&gt;"</code></p> <hr> =
<h2 id=3D"api-v0-p2p-listen"><a href=3D"https://docs.ipfs.io/reference/http=
/api/#api-v0-p2p-listen" class=3D"header-anchor">#</a> /api/v0/p2p/listen</=
h2> <p>Create libp2p service.</p> <h3 id=3D"arguments-92"><a href=3D"https:=
//docs.ipfs.io/reference/http/api/#arguments-92" class=3D"header-anchor">#<=
/a> Arguments</h3> <ul><li><code>arg</code> [string]: Protocol name. Requir=
ed: <strong>yes</strong>.</li> <li><code>arg</code> [string]: Target endpoi=
nt. Required: <strong>yes</strong>.</li> <li><code>allow-custom-protocol</c=
ode> [bool]: Don't require /x/ prefix. Required: no.</li> <li><code>report-=
peer-id</code> [bool]: Send remote base58 peerid to target when a new conne=
ction is established. Required: no.</li></ul> <h3 id=3D"response-91"><a hre=
f=3D"https://docs.ipfs.io/reference/http/api/#response-91" class=3D"header-=
anchor">#</a> Response</h3> <p>On success, the call to this endpoint will r=
eturn with 200 and the following body:</p> <div class=3D"language-json extr=
a-class"><pre class=3D"language-json"><code>This endpoint returns a `text/p=
lain` response body.
</code></pre></div><h3 id=3D"curl-example-91"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-91" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/p2p/listen=
?arg=3D&lt;protocol&gt;&amp;arg=3D&lt;target-address&gt;&amp;allow-custom-p=
rotocol=3D&lt;value&gt;&amp;report-peer-id=3D&lt;value&gt;"</code></p> <hr>=
 <h2 id=3D"api-v0-p2p-ls"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#api-v0-p2p-ls" class=3D"header-anchor">#</a> /api/v0/p2p/ls</h2> <p>List=
 active p2p listeners.</p> <h3 id=3D"arguments-93"><a href=3D"https://docs.=
ipfs.io/reference/http/api/#arguments-93" class=3D"header-anchor">#</a> Arg=
uments</h3> <ul><li><code>headers</code> [bool]: Print table headers (Proto=
col, Listen, Target). Required: no.</li></ul> <h3 id=3D"response-92"><a hre=
f=3D"https://docs.ipfs.io/reference/http/api/#response-92" class=3D"header-=
anchor">#</a> Response</h3> <p>On success, the call to this endpoint will r=
eturn with 200 and the following body:</p> <div class=3D"language-json extr=
a-class"><pre class=3D"language-json"><code><span class=3D"token punctuatio=
n">{</span>
  <span class=3D"token property">"Listeners"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"ListenAddress"</span><span class=3D"t=
oken operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span=
><span class=3D"token punctuation">,</span>
      <span class=3D"token property">"Protocol"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><spa=
n class=3D"token punctuation">,</span>
      <span class=3D"token property">"TargetAddress"</span><span class=3D"t=
oken operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span=
>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-92"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-92" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/p2p/ls?hea=
ders=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-p2p-stream-close"><a=
 href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-p2p-stream-close" =
class=3D"header-anchor">#</a> /api/v0/p2p/stream/close</h2> <p>Close active=
 p2p stream.</p> <h3 id=3D"arguments-94"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#arguments-94" class=3D"header-anchor">#</a> Arguments</h3=
> <ul><li><code>arg</code> [string]: Stream identifier Required: no.</li> <=
li><code>all</code> [bool]: Close all streams. Required: no.</li></ul> <h3 =
id=3D"response-93"><a href=3D"https://docs.ipfs.io/reference/http/api/#resp=
onse-93" class=3D"header-anchor">#</a> Response</h3> <p>On success, the cal=
l to this endpoint will return with 200 and the following body:</p> <div cl=
ass=3D"language-json extra-class"><pre class=3D"language-json"><code>This e=
ndpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-93"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-93" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/p2p/stream=
/close?arg=3D&lt;id&gt;&amp;all=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"=
api-v0-p2p-stream-ls"><a href=3D"https://docs.ipfs.io/reference/http/api/#a=
pi-v0-p2p-stream-ls" class=3D"header-anchor">#</a> /api/v0/p2p/stream/ls</h=
2> <p>List active p2p streams.</p> <h3 id=3D"arguments-95"><a href=3D"https=
://docs.ipfs.io/reference/http/api/#arguments-95" class=3D"header-anchor">#=
</a> Arguments</h3> <ul><li><code>headers</code> [bool]: Print table header=
s (ID, Protocol, Local, Remote). Required: no.</li></ul> <h3 id=3D"response=
-94"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-94" class=
=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this endp=
oint will return with 200 and the following body:</p> <div class=3D"languag=
e-json extra-class"><pre class=3D"language-json"><code><span class=3D"token=
 punctuation">{</span>
  <span class=3D"token property">"Streams"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"HandlerID"</span><span class=3D"token=
 operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><sp=
an class=3D"token punctuation">,</span>
      <span class=3D"token property">"OriginAddress"</span><span class=3D"t=
oken operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span=
><span class=3D"token punctuation">,</span>
      <span class=3D"token property">"Protocol"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><spa=
n class=3D"token punctuation">,</span>
      <span class=3D"token property">"TargetAddress"</span><span class=3D"t=
oken operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span=
>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-94"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-94" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/p2p/stream=
/ls?headers=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-pin-add"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-add" class=3D"he=
ader-anchor">#</a> /api/v0/pin/add</h2> <p>Pin objects to local storage.</p=
> <h3 id=3D"arguments-96"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#arguments-96" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code=
>arg</code> [string]: Path to object(s) to be pinned. Required: <strong>yes=
</strong>.</li> <li><code>recursive</code> [bool]: Recursively pin the obje=
ct linked to by the specified object(s). Default: <code>true</code>. Requir=
ed: no.</li> <li><code>progress</code> [bool]: Show progress. Required: no.=
</li></ul> <h3 id=3D"response-95"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#response-95" class=3D"header-anchor">#</a> Response</h3> <p>On s=
uccess, the call to this endpoint will return with 200 and the following bo=
dy:</p> <div class=3D"language-json extra-class"><pre class=3D"language-jso=
n"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Pins"</span><span class=3D"token operator=
">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Progress"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-95"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-95" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/add?ar=
g=3D&lt;ipfs-path&gt;&amp;recursive=3Dtrue&amp;progress=3D&lt;value&gt;"</c=
ode></p> <hr> <h2 id=3D"api-v0-pin-ls"><a href=3D"https://docs.ipfs.io/refe=
rence/http/api/#api-v0-pin-ls" class=3D"header-anchor">#</a> /api/v0/pin/ls=
</h2> <p>List objects pinned to local storage.</p> <h3 id=3D"arguments-97">=
<a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-97" class=3D"=
header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Path=
 to object(s) to be listed. Required: no.</li> <li><code>type</code> [strin=
g]: The type of pinned keys to list. Can be "direct", "indirect", "recursiv=
e", or "all". Default: <code>all</code>. Required: no.</li> <li><code>quiet=
</code> [bool]: Write just hashes of objects. Required: no.</li> <li><code>=
stream</code> [bool]: Enable streaming of pins as they are discovered. Requ=
ired: no.</li></ul> <h3 id=3D"response-96"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#response-96" class=3D"header-anchor">#</a> Response</h3=
> <p>On success, the call to this endpoint will return with 200 and the fol=
lowing body:</p> <div class=3D"language-json extra-class"><pre class=3D"lan=
guage-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"PinLsList"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"Keys"</span><span class=3D"token operat=
or">:</span> <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"&lt;string&gt;"</span><span class=3D"=
token operator">:</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token property">"Type"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
      <span class=3D"token punctuation">}</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"PinLsObject"</span><span class=3D"token o=
perator">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"Cid"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
    <span class=3D"token property">"Type"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-96"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-96" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/ls?arg=
=3D&lt;ipfs-path&gt;&amp;type=3Dall&amp;quiet=3D&lt;value&gt;&amp;stream=3D=
&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-pin-remote-add"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#api-v0-pin-remote-add" class=3D"he=
ader-anchor">#</a> /api/v0/pin/remote/add</h2> <p>Pin object to remote pinn=
ing service.</p> <h3 id=3D"arguments-98"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#arguments-98" class=3D"header-anchor">#</a> Arguments</h3=
> <ul><li><code>arg</code> [string]: Path to object(s) to be pinned. Requir=
ed: <strong>yes</strong>.</li> <li><code>service</code> [string]: Name of t=
he remote pinning service to use (mandatory). Required: no.</li> <li><code>=
name</code> [string]: An optional name for the pin. Required: no.</li> <li>=
<code>background</code> [bool]: Add to the queue on the remote service and =
return immediately (does not wait for pinned status). Default: <code>false<=
/code>. Required: no.</li></ul> <h3 id=3D"response-97"><a href=3D"https://d=
ocs.ipfs.io/reference/http/api/#response-97" class=3D"header-anchor">#</a> =
Response</h3> <p>On success, the call to this endpoint will return with 200=
 and the following body:</p> <div class=3D"language-json extra-class"><pre =
class=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Cid"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Status"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-97"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-97" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/remote=
/add?arg=3D&lt;ipfs-path&gt;&amp;service=3D&lt;value&gt;&amp;name=3D&lt;val=
ue&gt;&amp;background=3Dfalse"</code></p> <hr> <h2 id=3D"api-v0-pin-remote-=
ls"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-remote-l=
s" class=3D"header-anchor">#</a> /api/v0/pin/remote/ls</h2> <p>List objects=
 pinned to remote pinning service.</p> <h3 id=3D"arguments-99"><a href=3D"h=
ttps://docs.ipfs.io/reference/http/api/#arguments-99" class=3D"header-ancho=
r">#</a> Arguments</h3> <ul><li><code>service</code> [string]: Name of the =
remote pinning service to use (mandatory). Required: no.</li> <li><code>nam=
e</code> [string]: Return pins with names that contain the value provided (=
case-sensitive, exact match). Required: no.</li> <li><code>cid</code> [arra=
y]: Return pins for the specified CIDs (comma-separated). Required: no.</li=
> <li><code>status</code> [array]: Return pins with the specified statuses =
(queued,pinning,pinned,failed). Default: <code>[pinned]</code>. Required: n=
o.</li></ul> <h3 id=3D"response-98"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#response-98" class=3D"header-anchor">#</a> Response</h3> <p>On=
 success, the call to this endpoint will return with 200 and the following =
body:</p> <div class=3D"language-json extra-class"><pre class=3D"language-j=
son"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Cid"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Status"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-98"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-98" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/remote=
/ls?service=3D&lt;value&gt;&amp;name=3D&lt;value&gt;&amp;cid=3D&lt;value&gt=
;&amp;status=3D[pinned]"</code></p> <hr> <h2 id=3D"api-v0-pin-remote-rm"><a=
 href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-remote-rm" cla=
ss=3D"header-anchor">#</a> /api/v0/pin/remote/rm</h2> <p>Remove pins from r=
emote pinning service.</p> <h3 id=3D"arguments-100"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#arguments-100" class=3D"header-anchor">#</a> A=
rguments</h3> <ul><li><code>service</code> [string]: Name of the remote pin=
ning service to use (mandatory). Required: no.</li> <li><code>name</code> [=
string]: Remove pins with names that contain provided value (case-sensitive=
, exact match). Required: no.</li> <li><code>cid</code> [array]: Remove pin=
s for the specified CIDs. Required: no.</li> <li><code>status</code> [array=
]: Remove pins with the specified statuses (queued,pinning,pinned,failed). =
Default: <code>[pinned]</code>. Required: no.</li> <li><code>force</code> [=
bool]: Allow removal of multiple pins matching the query without additional=
 confirmation. Default: <code>false</code>. Required: no.</li></ul> <h3 id=
=3D"response-99"><a href=3D"https://docs.ipfs.io/reference/http/api/#respon=
se-99" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call =
to this endpoint will return with 200 and the following body:</p> <div clas=
s=3D"language-json extra-class"><pre class=3D"language-json"><code>This end=
point returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-99"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#curl-example-99" class=3D"header-anchor">#</a> cURL =
Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/remote=
/rm?service=3D&lt;value&gt;&amp;name=3D&lt;value&gt;&amp;cid=3D&lt;value&gt=
;&amp;status=3D[pinned]&amp;force=3Dfalse"</code></p> <hr> <h2 id=3D"api-v0=
-pin-remote-service-add"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#api-v0-pin-remote-service-add" class=3D"header-anchor">#</a> /api/v0/pin/=
remote/service/add</h2> <p>Add remote pinning service.</p> <h3 id=3D"argume=
nts-101"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-101"=
 class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [str=
ing]: Service name. Required: <strong>yes</strong>.</li> <li><code>arg</cod=
e> [string]: Service endpoint. Required: <strong>yes</strong>.</li> <li><co=
de>arg</code> [string]: Service key. Required: <strong>yes</strong>.</li></=
ul> <h3 id=3D"response-100"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#response-100" class=3D"header-anchor">#</a> Response</h3> <p>On succes=
s, the call to this endpoint will return with 200 and the following body:</=
p> <div class=3D"language-json extra-class"><pre class=3D"language-json"><c=
ode>This endpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-100"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-100" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/remo=
te/service/add?arg=3D&lt;service&gt;&amp;arg=3D&lt;endpoint&gt;&amp;arg=3D&=
lt;key&gt;"</code></p> <hr> <h2 id=3D"api-v0-pin-remote-service-ls"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-remote-service-ls" =
class=3D"header-anchor">#</a> /api/v0/pin/remote/service/ls</h2> <p>List re=
mote pinning services.</p> <h3 id=3D"arguments-102"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#arguments-102" class=3D"header-anchor">#</a> A=
rguments</h3> <ul><li><code>stat</code> [bool]: Try to fetch and display cu=
rrent pin count on remote service (queued/pinning/pinned/failed). Default: =
<code>false</code>. Required: no.</li></ul> <h3 id=3D"response-101"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#response-101" class=3D"header-=
anchor">#</a> Response</h3> <p>On success, the call to this endpoint will r=
eturn with 200 and the following body:</p> <div class=3D"language-json extr=
a-class"><pre class=3D"language-json"><code><span class=3D"token punctuatio=
n">{</span>
  <span class=3D"token property">"RemoteServices"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"ApiEndpoint"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><=
span class=3D"token punctuation">,</span>
      <span class=3D"token property">"Service"</span><span class=3D"token o=
perator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span=
 class=3D"token punctuation">,</span>
      <span class=3D"token property">"Stat"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token property">"PinCount"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token punctuation">{</span>
          <span class=3D"token property">"Failed"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span=
 class=3D"token punctuation">,</span>
          <span class=3D"token property">"Pinned"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span=
 class=3D"token punctuation">,</span>
          <span class=3D"token property">"Pinning"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><spa=
n class=3D"token punctuation">,</span>
          <span class=3D"token property">"Queued"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
        <span class=3D"token punctuation">}</span><span class=3D"token punc=
tuation">,</span>
        <span class=3D"token property">"Status"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
      <span class=3D"token punctuation">}</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-101"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-101" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/remo=
te/service/ls?stat=3Dfalse"</code></p> <hr> <h2 id=3D"api-v0-pin-remote-ser=
vice-rm"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-rem=
ote-service-rm" class=3D"header-anchor">#</a> /api/v0/pin/remote/service/rm=
</h2> <p>Remove remote pinning service.</p> <h3 id=3D"arguments-103"><a hre=
f=3D"https://docs.ipfs.io/reference/http/api/#arguments-103" class=3D"heade=
r-anchor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Name of r=
emote pinning service to remove. Required: <strong>yes</strong>.</li></ul> =
<h3 id=3D"response-102"><a href=3D"https://docs.ipfs.io/reference/http/api/=
#response-102" class=3D"header-anchor">#</a> Response</h3> <p>On success, t=
he call to this endpoint will return with 200 and the following body:</p> <=
div class=3D"language-json extra-class"><pre class=3D"language-json"><code>=
This endpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-102"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-102" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/remo=
te/service/rm?arg=3D&lt;service&gt;"</code></p> <hr> <h2 id=3D"api-v0-pin-r=
m"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pin-rm" class=
=3D"header-anchor">#</a> /api/v0/pin/rm</h2> <p>Remove pinned objects from =
local storage.</p> <h3 id=3D"arguments-104"><a href=3D"https://docs.ipfs.io=
/reference/http/api/#arguments-104" class=3D"header-anchor">#</a> Arguments=
</h3> <ul><li><code>arg</code> [string]: Path to object(s) to be unpinned. =
Required: <strong>yes</strong>.</li> <li><code>recursive</code> [bool]: Rec=
ursively unpin the object linked to by the specified object(s). Default: <c=
ode>true</code>. Required: no.</li></ul> <h3 id=3D"response-103"><a href=3D=
"https://docs.ipfs.io/reference/http/api/#response-103" class=3D"header-anc=
hor">#</a> Response</h3> <p>On success, the call to this endpoint will retu=
rn with 200 and the following body:</p> <div class=3D"language-json extra-c=
lass"><pre class=3D"language-json"><code><span class=3D"token punctuation">=
{</span>
  <span class=3D"token property">"Pins"</span><span class=3D"token operator=
">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-103"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-103" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/rm?a=
rg=3D&lt;ipfs-path&gt;&amp;recursive=3Dtrue"</code></p> <hr> <h2 id=3D"api-=
v0-pin-update"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-p=
in-update" class=3D"header-anchor">#</a> /api/v0/pin/update</h2> <p>Update =
a recursive pin.</p> <h3 id=3D"arguments-105"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#arguments-105" class=3D"header-anchor">#</a> Argumen=
ts</h3> <ul><li><code>arg</code> [string]: Path to old object. Required: <s=
trong>yes</strong>.</li> <li><code>arg</code> [string]: Path to a new objec=
t to be pinned. Required: <strong>yes</strong>.</li> <li><code>unpin</code>=
 [bool]: Remove the old pin. Default: <code>true</code>. Required: no.</li>=
</ul> <h3 id=3D"response-104"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#response-104" class=3D"header-anchor">#</a> Response</h3> <p>On succ=
ess, the call to this endpoint will return with 200 and the following body:=
</p> <div class=3D"language-json extra-class"><pre class=3D"language-json">=
<code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Pins"</span><span class=3D"token operator=
">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-104"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-104" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/upda=
te?arg=3D&lt;from-path&gt;&amp;arg=3D&lt;to-path&gt;&amp;unpin=3Dtrue"</cod=
e></p> <hr> <h2 id=3D"api-v0-pin-verify"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#api-v0-pin-verify" class=3D"header-anchor">#</a> /api/v0/=
pin/verify</h2> <p>Verify that recursive pins are complete.</p> <h3 id=3D"a=
rguments-106"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments=
-106" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>verbose</c=
ode> [bool]: Also write the hashes of non-broken pins. Required: no.</li> <=
li><code>quiet</code> [bool]: Write just hashes of broken pins. Required: n=
o.</li></ul> <h3 id=3D"response-105"><a href=3D"https://docs.ipfs.io/refere=
nce/http/api/#response-105" class=3D"header-anchor">#</a> Response</h3> <p>=
On success, the call to this endpoint will return with 200 and the followin=
g body:</p> <div class=3D"language-json extra-class"><pre class=3D"language=
-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Cid"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"PinStatus"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"BadNodes"</span><span class=3D"token op=
erator">:</span> <span class=3D"token punctuation">[</span>
      <span class=3D"token punctuation">{</span>
        <span class=3D"token property">"Cid"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span c=
lass=3D"token punctuation">,</span>
        <span class=3D"token property">"Err"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
      <span class=3D"token punctuation">}</span>
    <span class=3D"token punctuation">]</span><span class=3D"token punctuat=
ion">,</span>
    <span class=3D"token property">"Ok"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;bool&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-105"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-105" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pin/veri=
fy?verbose=3D&lt;value&gt;&amp;quiet=3D&lt;value&gt;"</code></p> <hr> <h2 i=
d=3D"api-v0-ping"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v=
0-ping" class=3D"header-anchor">#</a> /api/v0/ping</h2> <p>Send echo reques=
t packets to IPFS hosts.</p> <h3 id=3D"arguments-107"><a href=3D"https://do=
cs.ipfs.io/reference/http/api/#arguments-107" class=3D"header-anchor">#</a>=
 Arguments</h3> <ul><li><code>arg</code> [string]: ID of peer to be pinged.=
 Required: <strong>yes</strong>.</li> <li><code>count</code> [int]: Number =
of ping messages to send. Default: <code>10</code>. Required: no.</li></ul>=
 <h3 id=3D"response-106"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#response-106" class=3D"header-anchor">#</a> Response</h3> <p>On success, =
the call to this endpoint will return with 200 and the following body:</p> =
<div class=3D"language-json extra-class"><pre class=3D"language-json"><code=
><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Success"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;bool&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Text"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Time"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;duration-ns&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-106"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-106" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/ping?arg=
=3D&lt;peer ID&gt;&amp;count=3D10"</code></p> <hr> <h2 id=3D"api-v0-pubsub-=
ls"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pubsub-ls" c=
lass=3D"header-anchor">#</a> /api/v0/pubsub/ls</h2> <p>List subscribed topi=
cs by name.</p> <h3 id=3D"arguments-108"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#arguments-108" class=3D"header-anchor">#</a> Arguments</h=
3> <p>This endpoint takes no arguments.</p> <h3 id=3D"response-107"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#response-107" class=3D"header-=
anchor">#</a> Response</h3> <p>On success, the call to this endpoint will r=
eturn with 200 and the following body:</p> <div class=3D"language-json extr=
a-class"><pre class=3D"language-json"><code><span class=3D"token punctuatio=
n">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-107"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-107" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pubsub/l=
s"</code></p> <hr> <h2 id=3D"api-v0-pubsub-peers"><a href=3D"https://docs.i=
pfs.io/reference/http/api/#api-v0-pubsub-peers" class=3D"header-anchor">#</=
a> /api/v0/pubsub/peers</h2> <p>List peers we are currently pubsubbing with=
.</p> <h3 id=3D"arguments-109"><a href=3D"https://docs.ipfs.io/reference/ht=
tp/api/#arguments-109" class=3D"header-anchor">#</a> Arguments</h3> <ul><li=
><code>arg</code> [string]: topic to list connected peers of Required: no.<=
/li></ul> <h3 id=3D"response-108"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#response-108" class=3D"header-anchor">#</a> Response</h3> <p>On =
success, the call to this endpoint will return with 200 and the following b=
ody:</p> <div class=3D"language-json extra-class"><pre class=3D"language-js=
on"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-108"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-108" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pubsub/p=
eers?arg=3D&lt;topic&gt;"</code></p> <hr> <h2 id=3D"api-v0-pubsub-pub"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#api-v0-pubsub-pub" class=3D=
"header-anchor">#</a> /api/v0/pubsub/pub</h2> <p>Publish a message to a giv=
en pubsub topic.</p> <h3 id=3D"arguments-110"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#arguments-110" class=3D"header-anchor">#</a> Argumen=
ts</h3> <ul><li><code>arg</code> [string]: Topic to publish to. Required: <=
strong>yes</strong>.</li> <li><code>arg</code> [string]: Payload of message=
 to publish. Required: <strong>yes</strong>.</li></ul> <h3 id=3D"response-1=
09"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-109" class=
=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this endp=
oint will return with 200 and the following body:</p> <div class=3D"languag=
e-json extra-class"><pre class=3D"language-json"><code>This endpoint return=
s a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-109"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-109" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pubsub/p=
ub?arg=3D&lt;topic&gt;&amp;arg=3D&lt;data&gt;"</code></p> <hr> <h2 id=3D"ap=
i-v0-pubsub-sub"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0=
-pubsub-sub" class=3D"header-anchor">#</a> /api/v0/pubsub/sub</h2> <p>Subsc=
ribe to messages on a given topic.</p> <h3 id=3D"arguments-111"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#arguments-111" class=3D"header-anc=
hor">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: String name of=
 topic to subscribe to. Required: <strong>yes</strong>.</li> <li><code>disc=
over</code> [bool]: Deprecated option to instruct pubsub to discovery peers=
 for the topic. Discovery is now built into pubsub. Required: no.</li></ul>=
 <h3 id=3D"response-110"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#response-110" class=3D"header-anchor">#</a> Response</h3> <p>On success, =
the call to this endpoint will return with 200 and the following body:</p> =
<div class=3D"language-json extra-class"><pre class=3D"language-json"><code=
><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"data"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;base64-string&gt;"</span><span=
 class=3D"token punctuation">,</span>
  <span class=3D"token property">"from"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;base64-string&gt;"</span><span=
 class=3D"token punctuation">,</span>
  <span class=3D"token property">"seqno"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;base64-string&gt;"</span><spa=
n class=3D"token punctuation">,</span>
  <span class=3D"token property">"topicIDs"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-110"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-110" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/pubsub/s=
ub?arg=3D&lt;topic&gt;&amp;discover=3D&lt;value&gt;"</code></p> <hr> <h2 id=
=3D"api-v0-refs"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0=
-refs" class=3D"header-anchor">#</a> /api/v0/refs</h2> <p>List links (refer=
ences) from an object.</p> <h3 id=3D"arguments-112"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#arguments-112" class=3D"header-anchor">#</a> A=
rguments</h3> <ul><li><code>arg</code> [string]: Path to the object(s) to l=
ist refs from. Required: <strong>yes</strong>.</li> <li><code>format</code>=
 [string]: Emit edges with given format. Available tokens: &lt;src&gt; &lt;=
dst&gt; &lt;linkname&gt;. Default: &lt;dst&gt;. Default: <code>&lt;dst&gt;<=
/code>. Required: no.</li> <li><code>edges</code> [bool]: Emit edge format:=
 <code>&amp;lt;from&amp;gt; -&amp;gt; &amp;lt;to&amp;gt;</code>. Required: =
no.</li> <li><code>unique</code> [bool]: Omit duplicate refs from output. R=
equired: no.</li> <li><code>recursive</code> [bool]: Recursively list links=
 of child nodes. Required: no.</li> <li><code>max-depth</code> [int]: Only =
for recursive refs, limits fetch and listing to the given depth. Default: <=
code>-1</code>. Required: no.</li></ul> <h3 id=3D"response-111"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#response-111" class=3D"header-anch=
or">#</a> Response</h3> <p>On success, the call to this endpoint will retur=
n with 200 and the following body:</p> <div class=3D"language-json extra-cl=
ass"><pre class=3D"language-json"><code><span class=3D"token punctuation">{=
</span>
  <span class=3D"token property">"Err"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Ref"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-111"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-111" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/refs?arg=
=3D&lt;ipfs-path&gt;&amp;format=3D&lt;dst&gt;&amp;edges=3D&lt;value&gt;&amp=
;unique=3D&lt;value&gt;&amp;recursive=3D&lt;value&gt;&amp;max-depth=3D-1"</=
code></p> <hr> <h2 id=3D"api-v0-refs-local"><a href=3D"https://docs.ipfs.io=
/reference/http/api/#api-v0-refs-local" class=3D"header-anchor">#</a> /api/=
v0/refs/local</h2> <p>List all local references.</p> <h3 id=3D"arguments-11=
3"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-113" class=
=3D"header-anchor">#</a> Arguments</h3> <p>This endpoint takes no arguments=
.</p> <h3 id=3D"response-112"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#response-112" class=3D"header-anchor">#</a> Response</h3> <p>On succ=
ess, the call to this endpoint will return with 200 and the following body:=
</p> <div class=3D"language-json extra-class"><pre class=3D"language-json">=
<code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Err"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Ref"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-112"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-112" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/refs/loc=
al"</code></p> <hr> <h2 id=3D"api-v0-repo-fsck"><a href=3D"https://docs.ipf=
s.io/reference/http/api/#api-v0-repo-fsck" class=3D"header-anchor">#</a> /a=
pi/v0/repo/fsck</h2> <p>Remove repo lockfiles.</p> <h3 id=3D"arguments-114"=
><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-114" class=
=3D"header-anchor">#</a> Arguments</h3> <p>This endpoint takes no arguments=
.</p> <h3 id=3D"response-113"><a href=3D"https://docs.ipfs.io/reference/htt=
p/api/#response-113" class=3D"header-anchor">#</a> Response</h3> <p>On succ=
ess, the call to this endpoint will return with 200 and the following body:=
</p> <div class=3D"language-json extra-class"><pre class=3D"language-json">=
<code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Message"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-113"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-113" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/repo/fsc=
k"</code></p> <hr> <h2 id=3D"api-v0-repo-gc"><a href=3D"https://docs.ipfs.i=
o/reference/http/api/#api-v0-repo-gc" class=3D"header-anchor">#</a> /api/v0=
/repo/gc</h2> <p>Perform a garbage collection sweep on the repo.</p> <h3 id=
=3D"arguments-115"><a href=3D"https://docs.ipfs.io/reference/http/api/#argu=
ments-115" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>strea=
m-errors</code> [bool]: Stream errors. Required: no.</li> <li><code>quiet</=
code> [bool]: Write minimal output. Required: no.</li></ul> <h3 id=3D"respo=
nse-114"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-114" =
class=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this=
 endpoint will return with 200 and the following body:</p> <div class=3D"la=
nguage-json extra-class"><pre class=3D"language-json"><code><span class=3D"=
token punctuation">{</span>
  <span class=3D"token property">"Error"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Key"</span><span class=3D"token operator"=
>:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"/"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-114"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-114" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/repo/gc?=
stream-errors=3D&lt;value&gt;&amp;quiet=3D&lt;value&gt;"</code></p> <hr> <h=
2 id=3D"api-v0-repo-stat"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#api-v0-repo-stat" class=3D"header-anchor">#</a> /api/v0/repo/stat</h2> <=
p>Get stats for the currently used repo.</p> <h3 id=3D"arguments-116"><a hr=
ef=3D"https://docs.ipfs.io/reference/http/api/#arguments-116" class=3D"head=
er-anchor">#</a> Arguments</h3> <ul><li><code>size-only</code> [bool]: Only=
 report RepoSize and StorageMax. Required: no.</li> <li><code>human</code> =
[bool]: Print sizes in human readable format (e.g., 1K 234M 2G). Required: =
no.</li></ul> <h3 id=3D"response-115"><a href=3D"https://docs.ipfs.io/refer=
ence/http/api/#response-115" class=3D"header-anchor">#</a> Response</h3> <p=
>On success, the call to this endpoint will return with 200 and the followi=
ng body:</p> <div class=3D"language-json extra-class"><pre class=3D"languag=
e-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"NumObjects"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span =
class=3D"token punctuation">,</span>
  <span class=3D"token property">"RepoPath"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"SizeStat"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"RepoSize"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span =
class=3D"token punctuation">,</span>
    <span class=3D"token property">"StorageMax"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Version"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-115"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-115" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/repo/sta=
t?size-only=3D&lt;value&gt;&amp;human=3D&lt;value&gt;"</code></p> <hr> <h2 =
id=3D"api-v0-repo-verify"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#api-v0-repo-verify" class=3D"header-anchor">#</a> /api/v0/repo/verify</h=
2> <p>Verify all blocks in repo are not corrupted.</p> <h3 id=3D"arguments-=
117"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-117" cla=
ss=3D"header-anchor">#</a> Arguments</h3> <p>This endpoint takes no argumen=
ts.</p> <h3 id=3D"response-116"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#response-116" class=3D"header-anchor">#</a> Response</h3> <p>On su=
ccess, the call to this endpoint will return with 200 and the following bod=
y:</p> <div class=3D"language-json extra-class"><pre class=3D"language-json=
"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Msg"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Progress"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-116"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-116" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/repo/ver=
ify"</code></p> <hr> <h2 id=3D"api-v0-repo-version"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#api-v0-repo-version" class=3D"header-anchor">#=
</a> /api/v0/repo/version</h2> <p>Show the repo version.</p> <h3 id=3D"argu=
ments-118"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-11=
8" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>quiet</code> =
[bool]: Write minimal output. Required: no.</li></ul> <h3 id=3D"response-11=
7"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-117" class=
=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this endp=
oint will return with 200 and the following body:</p> <div class=3D"languag=
e-json extra-class"><pre class=3D"language-json"><code><span class=3D"token=
 punctuation">{</span>
  <span class=3D"token property">"Version"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-117"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-117" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/repo/ver=
sion?quiet=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-resolve"><a hr=
ef=3D"https://docs.ipfs.io/reference/http/api/#api-v0-resolve" class=3D"hea=
der-anchor">#</a> /api/v0/resolve</h2> <p>Resolve the value of names to IPF=
S.</p> <h3 id=3D"arguments-119"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#arguments-119" class=3D"header-anchor">#</a> Arguments</h3> <ul><l=
i><code>arg</code> [string]: The name to resolve. Required: <strong>yes</st=
rong>.</li> <li><code>recursive</code> [bool]: Resolve until the result is =
an IPFS name. Default: <code>true</code>. Required: no.</li> <li><code>dht-=
record-count</code> [int]: Number of records to request for DHT resolution.=
 Required: no.</li> <li><code>dht-timeout</code> [string]: Max time to coll=
ect values during DHT resolution eg "30s". Pass 0 for no timeout. Required:=
 no.</li></ul> <h3 id=3D"response-118"><a href=3D"https://docs.ipfs.io/refe=
rence/http/api/#response-118" class=3D"header-anchor">#</a> Response</h3> <=
p>On success, the call to this endpoint will return with 200 and the follow=
ing body:</p> <div class=3D"language-json extra-class"><pre class=3D"langua=
ge-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Path"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-118"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-118" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/resolve?=
arg=3D&lt;name&gt;&amp;recursive=3Dtrue&amp;dht-record-count=3D&lt;value&gt=
;&amp;dht-timeout=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-shutdow=
n"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-shutdown" cla=
ss=3D"header-anchor">#</a> /api/v0/shutdown</h2> <p>Shut down the IPFS daem=
on.</p> <h3 id=3D"arguments-120"><a href=3D"https://docs.ipfs.io/reference/=
http/api/#arguments-120" class=3D"header-anchor">#</a> Arguments</h3> <p>Th=
is endpoint takes no arguments.</p> <h3 id=3D"response-119"><a href=3D"http=
s://docs.ipfs.io/reference/http/api/#response-119" class=3D"header-anchor">=
#</a> Response</h3> <p>On success, the call to this endpoint will return wi=
th 200 and the following body:</p> <div class=3D"language-json extra-class"=
><pre class=3D"language-json"><code>This endpoint returns a `text/plain` re=
sponse body.
</code></pre></div><h3 id=3D"curl-example-119"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-119" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/shutdown=
"</code></p> <hr> <h2 id=3D"api-v0-stats-bitswap"><a href=3D"https://docs.i=
pfs.io/reference/http/api/#api-v0-stats-bitswap" class=3D"header-anchor">#<=
/a> /api/v0/stats/bitswap</h2> <p>Show some diagnostic information on the b=
itswap agent.</p> <h3 id=3D"arguments-121"><a href=3D"https://docs.ipfs.io/=
reference/http/api/#arguments-121" class=3D"header-anchor">#</a> Arguments<=
/h3> <ul><li><code>verbose</code> [bool]: Print extra information. Required=
: no.</li> <li><code>human</code> [bool]: Print sizes in human readable for=
mat (e.g., 1K 234M 2G). Required: no.</li></ul> <h3 id=3D"response-120"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#response-120" class=3D"hea=
der-anchor">#</a> Response</h3> <p>On success, the call to this endpoint wi=
ll return with 200 and the following body:</p> <div class=3D"language-json =
extra-class"><pre class=3D"language-json"><code><span class=3D"token punctu=
ation">{</span>
  <span class=3D"token property">"BlocksReceived"</span><span class=3D"toke=
n operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><s=
pan class=3D"token punctuation">,</span>
  <span class=3D"token property">"BlocksSent"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span =
class=3D"token punctuation">,</span>
  <span class=3D"token property">"DataReceived"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><spa=
n class=3D"token punctuation">,</span>
  <span class=3D"token property">"DataSent"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"DupBlksReceived"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><=
span class=3D"token punctuation">,</span>
  <span class=3D"token property">"DupDataReceived"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><=
span class=3D"token punctuation">,</span>
  <span class=3D"token property">"MessagesReceived"</span><span class=3D"to=
ken operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>=
<span class=3D"token punctuation">,</span>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"ProvideBufLen"</span><span class=3D"token=
 operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span =
class=3D"token punctuation">,</span>
  <span class=3D"token property">"Wantlist"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"/"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;cid-string&gt;"</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-120"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-120" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/stats/bi=
tswap?verbose=3D&lt;value&gt;&amp;human=3D&lt;value&gt;"</code></p> <hr> <h=
2 id=3D"api-v0-stats-bw"><a href=3D"https://docs.ipfs.io/reference/http/api=
/#api-v0-stats-bw" class=3D"header-anchor">#</a> /api/v0/stats/bw</h2> <p>P=
rint IPFS bandwidth information.</p> <h3 id=3D"arguments-122"><a href=3D"ht=
tps://docs.ipfs.io/reference/http/api/#arguments-122" class=3D"header-ancho=
r">#</a> Arguments</h3> <ul><li><p><code>peer</code> [string]: Specify a pe=
er to print bandwidth for. Required: no.</p></li> <li><p><code>proto</code>=
 [string]: Specify a protocol to print bandwidth for. Required: no.</p></li=
> <li><p><code>poll</code> [bool]: Print bandwidth at an interval. Required=
: no.</p></li> <li><p><code>interval</code> [string]: Time interval to wait=
 between updating output, if 'poll' is true.</p> <p>This accepts durations =
such as "300s", "1.5h" or "2h45m". Valid time units are:<br>
"ns", "us" (or "=C2=B5s"), "ms", "s", "m", "h". Default: <code>1s</code>. R=
equired: no.</p></li></ul> <h3 id=3D"response-121"><a href=3D"https://docs.=
ipfs.io/reference/http/api/#response-121" class=3D"header-anchor">#</a> Res=
ponse</h3> <p>On success, the call to this endpoint will return with 200 an=
d the following body:</p> <div class=3D"language-json extra-class"><pre cla=
ss=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"RateIn"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;float64&gt;"</span><span cla=
ss=3D"token punctuation">,</span>
  <span class=3D"token property">"RateOut"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;float64&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"TotalIn"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;int64&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"TotalOut"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;int64&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-121"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-121" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/stats/bw=
?peer=3D&lt;value&gt;&amp;proto=3D&lt;value&gt;&amp;poll=3D&lt;value&gt;&am=
p;interval=3D1s"</code></p> <hr> <h2 id=3D"api-v0-stats-dht"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#api-v0-stats-dht" class=3D"header-anc=
hor">#</a> /api/v0/stats/dht</h2> <p>Returns statistics about the node's DH=
T(s).</p> <h3 id=3D"arguments-123"><a href=3D"https://docs.ipfs.io/referenc=
e/http/api/#arguments-123" class=3D"header-anchor">#</a> Arguments</h3> <ul=
><li><code>arg</code> [string]: The DHT whose table should be listed (wanse=
rver, lanserver, wan, lan). wan and lan refer to client routing tables. Whe=
n using the experimental DHT client only WAN is supported. Defaults to wan =
and lan. Required: no.</li></ul> <h3 id=3D"response-122"><a href=3D"https:/=
/docs.ipfs.io/reference/http/api/#response-122" class=3D"header-anchor">#</=
a> Response</h3> <p>On success, the call to this endpoint will return with =
200 and the following body:</p> <div class=3D"language-json extra-class"><p=
re class=3D"language-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Buckets"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"LastRefresh"</span><span class=3D"tok=
en operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><=
span class=3D"token punctuation">,</span>
      <span class=3D"token property">"Peers"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token punctuation">{</span>
          <span class=3D"token property">"AgentVersion"</span><span class=
=3D"token operator">:</span> <span class=3D"token string">"&lt;string&gt;"<=
/span><span class=3D"token punctuation">,</span>
          <span class=3D"token property">"Connected"</span><span class=3D"t=
oken operator">:</span> <span class=3D"token string">"&lt;bool&gt;"</span><=
span class=3D"token punctuation">,</span>
          <span class=3D"token property">"ID"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span =
class=3D"token punctuation">,</span>
          <span class=3D"token property">"LastQueriedAt"</span><span class=
=3D"token operator">:</span> <span class=3D"token string">"&lt;string&gt;"<=
/span><span class=3D"token punctuation">,</span>
          <span class=3D"token property">"LastUsefulAt"</span><span class=
=3D"token operator">:</span> <span class=3D"token string">"&lt;string&gt;"<=
/span>
        <span class=3D"token punctuation">}</span>
      <span class=3D"token punctuation">]</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-122"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-122" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/stats/dh=
t?arg=3D&lt;dht&gt;"</code></p> <hr> <h2 id=3D"api-v0-stats-provide"><a hre=
f=3D"https://docs.ipfs.io/reference/http/api/#api-v0-stats-provide" class=
=3D"header-anchor">#</a> /api/v0/stats/provide</h2> <p>Returns statistics a=
bout the node's (re)provider system.</p> <h3 id=3D"arguments-124"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#arguments-124" class=3D"header=
-anchor">#</a> Arguments</h3> <p>This endpoint takes no arguments.</p> <h3 =
id=3D"response-123"><a href=3D"https://docs.ipfs.io/reference/http/api/#res=
ponse-123" class=3D"header-anchor">#</a> Response</h3> <p>On success, the c=
all to this endpoint will return with 200 and the following body:</p> <div =
class=3D"language-json extra-class"><pre class=3D"language-json"><code><spa=
n class=3D"token punctuation">{</span>
  <span class=3D"token property">"AvgProvideDuration"</span><span class=3D"=
token operator">:</span> <span class=3D"token string">"&lt;duration-ns&gt;"=
</span><span class=3D"token punctuation">,</span>
  <span class=3D"token property">"LastReprovideBatchSize"</span><span class=
=3D"token operator">:</span> <span class=3D"token string">"&lt;int&gt;"</sp=
an><span class=3D"token punctuation">,</span>
  <span class=3D"token property">"LastReprovideDuration"</span><span class=
=3D"token operator">:</span> <span class=3D"token string">"&lt;duration-ns&=
gt;"</span><span class=3D"token punctuation">,</span>
  <span class=3D"token property">"TotalProvides"</span><span class=3D"token=
 operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-123"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-123" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/stats/pr=
ovide"</code></p> <hr> <h2 id=3D"api-v0-stats-repo"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#api-v0-stats-repo" class=3D"header-anchor">#</=
a> /api/v0/stats/repo</h2> <p>Get stats for the currently used repo.</p> <h=
3 id=3D"arguments-125"><a href=3D"https://docs.ipfs.io/reference/http/api/#=
arguments-125" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>s=
ize-only</code> [bool]: Only report RepoSize and StorageMax. Required: no.<=
/li> <li><code>human</code> [bool]: Print sizes in human readable format (e=
.g., 1K 234M 2G). Required: no.</li></ul> <h3 id=3D"response-124"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#response-124" class=3D"header-=
anchor">#</a> Response</h3> <p>On success, the call to this endpoint will r=
eturn with 200 and the following body:</p> <div class=3D"language-json extr=
a-class"><pre class=3D"language-json"><code><span class=3D"token punctuatio=
n">{</span>
  <span class=3D"token property">"NumObjects"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span =
class=3D"token punctuation">,</span>
  <span class=3D"token property">"RepoPath"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
  <span class=3D"token property">"SizeStat"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"RepoSize"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span><span =
class=3D"token punctuation">,</span>
    <span class=3D"token property">"StorageMax"</span><span class=3D"token =
operator">:</span> <span class=3D"token string">"&lt;uint64&gt;"</span>
  <span class=3D"token punctuation">}</span><span class=3D"token punctuatio=
n">,</span>
  <span class=3D"token property">"Version"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-124"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-124" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/stats/re=
po?size-only=3D&lt;value&gt;&amp;human=3D&lt;value&gt;"</code></p> <hr> <h2=
 id=3D"api-v0-swarm-addrs"><a href=3D"https://docs.ipfs.io/reference/http/a=
pi/#api-v0-swarm-addrs" class=3D"header-anchor">#</a> /api/v0/swarm/addrs</=
h2> <p>List known addresses. Useful for debugging.</p> <h3 id=3D"arguments-=
126"><a href=3D"https://docs.ipfs.io/reference/http/api/#arguments-126" cla=
ss=3D"header-anchor">#</a> Arguments</h3> <p>This endpoint takes no argumen=
ts.</p> <h3 id=3D"response-125"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#response-125" class=3D"header-anchor">#</a> Response</h3> <p>On su=
ccess, the call to this endpoint will return with 200 and the following bod=
y:</p> <div class=3D"language-json extra-class"><pre class=3D"language-json=
"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Addrs"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token property">"&lt;string&gt;"</span><span class=3D"to=
ken operator">:</span> <span class=3D"token punctuation">[</span>
      <span class=3D"token string">"&lt;string&gt;"</span>
    <span class=3D"token punctuation">]</span>
  <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-125"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-125" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/ad=
drs"</code></p> <hr> <h2 id=3D"api-v0-swarm-addrs-listen"><a href=3D"https:=
//docs.ipfs.io/reference/http/api/#api-v0-swarm-addrs-listen" class=3D"head=
er-anchor">#</a> /api/v0/swarm/addrs/listen</h2> <p>List interface listenin=
g addresses.</p> <h3 id=3D"arguments-127"><a href=3D"https://docs.ipfs.io/r=
eference/http/api/#arguments-127" class=3D"header-anchor">#</a> Arguments</=
h3> <p>This endpoint takes no arguments.</p> <h3 id=3D"response-126"><a hre=
f=3D"https://docs.ipfs.io/reference/http/api/#response-126" class=3D"header=
-anchor">#</a> Response</h3> <p>On success, the call to this endpoint will =
return with 200 and the following body:</p> <div class=3D"language-json ext=
ra-class"><pre class=3D"language-json"><code><span class=3D"token punctuati=
on">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-126"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-126" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/ad=
drs/listen"</code></p> <hr> <h2 id=3D"api-v0-swarm-addrs-local"><a href=3D"=
https://docs.ipfs.io/reference/http/api/#api-v0-swarm-addrs-local" class=3D=
"header-anchor">#</a> /api/v0/swarm/addrs/local</h2> <p>List local addresse=
s.</p> <h3 id=3D"arguments-128"><a href=3D"https://docs.ipfs.io/reference/h=
ttp/api/#arguments-128" class=3D"header-anchor">#</a> Arguments</h3> <ul><l=
i><code>id</code> [bool]: Show peer ID in addresses. Required: no.</li></ul=
> <h3 id=3D"response-127"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#response-127" class=3D"header-anchor">#</a> Response</h3> <p>On success,=
 the call to this endpoint will return with 200 and the following body:</p>=
 <div class=3D"language-json extra-class"><pre class=3D"language-json"><cod=
e><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-127"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-127" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/ad=
drs/local?id=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-swarm-connec=
t"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-swarm-connect=
" class=3D"header-anchor">#</a> /api/v0/swarm/connect</h2> <p>Open connecti=
on to a given address.</p> <h3 id=3D"arguments-129"><a href=3D"https://docs=
.ipfs.io/reference/http/api/#arguments-129" class=3D"header-anchor">#</a> A=
rguments</h3> <ul><li><code>arg</code> [string]: Address of peer to connect=
 to. Required: <strong>yes</strong>.</li></ul> <h3 id=3D"response-128"><a h=
ref=3D"https://docs.ipfs.io/reference/http/api/#response-128" class=3D"head=
er-anchor">#</a> Response</h3> <p>On success, the call to this endpoint wil=
l return with 200 and the following body:</p> <div class=3D"language-json e=
xtra-class"><pre class=3D"language-json"><code><span class=3D"token punctua=
tion">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-128"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-128" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/co=
nnect?arg=3D&lt;address&gt;"</code></p> <hr> <h2 id=3D"api-v0-swarm-disconn=
ect"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-swarm-disco=
nnect" class=3D"header-anchor">#</a> /api/v0/swarm/disconnect</h2> <p>Close=
 connection to a given address.</p> <h3 id=3D"arguments-130"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#arguments-130" class=3D"header-anchor=
">#</a> Arguments</h3> <ul><li><code>arg</code> [string]: Address of peer t=
o disconnect from. Required: <strong>yes</strong>.</li></ul> <h3 id=3D"resp=
onse-129"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-129"=
 class=3D"header-anchor">#</a> Response</h3> <p>On success, the call to thi=
s endpoint will return with 200 and the following body:</p> <div class=3D"l=
anguage-json extra-class"><pre class=3D"language-json"><code><span class=3D=
"token punctuation">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-129"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-129" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/di=
sconnect?arg=3D&lt;address&gt;"</code></p> <hr> <h2 id=3D"api-v0-swarm-filt=
ers"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-swarm-filte=
rs" class=3D"header-anchor">#</a> /api/v0/swarm/filters</h2> <p>Manipulate =
address filters.</p> <h3 id=3D"arguments-131"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#arguments-131" class=3D"header-anchor">#</a> Argumen=
ts</h3> <p>This endpoint takes no arguments.</p> <h3 id=3D"response-130"><a=
 href=3D"https://docs.ipfs.io/reference/http/api/#response-130" class=3D"he=
ader-anchor">#</a> Response</h3> <p>On success, the call to this endpoint w=
ill return with 200 and the following body:</p> <div class=3D"language-json=
 extra-class"><pre class=3D"language-json"><code><span class=3D"token punct=
uation">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-130"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-130" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/fi=
lters"</code></p> <hr> <h2 id=3D"api-v0-swarm-filters-add"><a href=3D"https=
://docs.ipfs.io/reference/http/api/#api-v0-swarm-filters-add" class=3D"head=
er-anchor">#</a> /api/v0/swarm/filters/add</h2> <p>Add an address filter.</=
p> <h3 id=3D"arguments-132"><a href=3D"https://docs.ipfs.io/reference/http/=
api/#arguments-132" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><c=
ode>arg</code> [string]: Multiaddr to filter. Required: <strong>yes</strong=
>.</li></ul> <h3 id=3D"response-131"><a href=3D"https://docs.ipfs.io/refere=
nce/http/api/#response-131" class=3D"header-anchor">#</a> Response</h3> <p>=
On success, the call to this endpoint will return with 200 and the followin=
g body:</p> <div class=3D"language-json extra-class"><pre class=3D"language=
-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-131"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-131" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/fi=
lters/add?arg=3D&lt;address&gt;"</code></p> <hr> <h2 id=3D"api-v0-swarm-fil=
ters-rm"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-swarm-f=
ilters-rm" class=3D"header-anchor">#</a> /api/v0/swarm/filters/rm</h2> <p>R=
emove an address filter.</p> <h3 id=3D"arguments-133"><a href=3D"https://do=
cs.ipfs.io/reference/http/api/#arguments-133" class=3D"header-anchor">#</a>=
 Arguments</h3> <ul><li><code>arg</code> [string]: Multiaddr filter to remo=
ve. Required: <strong>yes</strong>.</li></ul> <h3 id=3D"response-132"><a hr=
ef=3D"https://docs.ipfs.io/reference/http/api/#response-132" class=3D"heade=
r-anchor">#</a> Response</h3> <p>On success, the call to this endpoint will=
 return with 200 and the following body:</p> <div class=3D"language-json ex=
tra-class"><pre class=3D"language-json"><code><span class=3D"token punctuat=
ion">{</span>
  <span class=3D"token property">"Strings"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token string">"&lt;string&gt;"</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-132"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-132" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/fi=
lters/rm?arg=3D&lt;address&gt;"</code></p> <hr> <h2 id=3D"api-v0-swarm-peer=
s"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-swarm-peers" =
class=3D"header-anchor">#</a> /api/v0/swarm/peers</h2> <p>List peers with o=
pen connections.</p> <h3 id=3D"arguments-134"><a href=3D"https://docs.ipfs.=
io/reference/http/api/#arguments-134" class=3D"header-anchor">#</a> Argumen=
ts</h3> <ul><li><code>verbose</code> [bool]: display all extra information.=
 Required: no.</li> <li><code>streams</code> [bool]: Also list information =
about open streams for each peer. Required: no.</li> <li><code>latency</cod=
e> [bool]: Also list information about latency to each peer. Required: no.<=
/li> <li><code>direction</code> [bool]: Also list information about the dir=
ection of connection. Required: no.</li></ul> <h3 id=3D"response-133"><a hr=
ef=3D"https://docs.ipfs.io/reference/http/api/#response-133" class=3D"heade=
r-anchor">#</a> Response</h3> <p>On success, the call to this endpoint will=
 return with 200 and the following body:</p> <div class=3D"language-json ex=
tra-class"><pre class=3D"language-json"><code><span class=3D"token punctuat=
ion">{</span>
  <span class=3D"token property">"Peers"</span><span class=3D"token operato=
r">:</span> <span class=3D"token punctuation">[</span>
    <span class=3D"token punctuation">{</span>
      <span class=3D"token property">"Addr"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Direction"</span><span class=3D"token=
 operator">:</span> <span class=3D"token string">"&lt;int&gt;"</span><span =
class=3D"token punctuation">,</span>
      <span class=3D"token property">"Latency"</span><span class=3D"token o=
perator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span=
 class=3D"token punctuation">,</span>
      <span class=3D"token property">"Muxer"</span><span class=3D"token ope=
rator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span c=
lass=3D"token punctuation">,</span>
      <span class=3D"token property">"Peer"</span><span class=3D"token oper=
ator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span cl=
ass=3D"token punctuation">,</span>
      <span class=3D"token property">"Streams"</span><span class=3D"token o=
perator">:</span> <span class=3D"token punctuation">[</span>
        <span class=3D"token punctuation">{</span>
          <span class=3D"token property">"Protocol"</span><span class=3D"to=
ken operator">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
        <span class=3D"token punctuation">}</span>
      <span class=3D"token punctuation">]</span>
    <span class=3D"token punctuation">}</span>
  <span class=3D"token punctuation">]</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-133"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-133" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/swarm/pe=
ers?verbose=3D&lt;value&gt;&amp;streams=3D&lt;value&gt;&amp;latency=3D&lt;v=
alue&gt;&amp;direction=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-ta=
r-add"><a href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-tar-add" =
class=3D"header-anchor">#</a> /api/v0/tar/add</h2> <p>Import a tar file int=
o IPFS.</p> <h3 id=3D"arguments-135"><a href=3D"https://docs.ipfs.io/refere=
nce/http/api/#arguments-135" class=3D"header-anchor">#</a> Arguments</h3> <=
h3 id=3D"request-body-12"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#request-body-12" class=3D"header-anchor">#</a> Request Body</h3> <p>Argu=
ment <code>file</code> is of file type. This endpoint expects one or severa=
l files (depending on the command) in the body of the request as 'multipart=
/form-data'.</p> <h3 id=3D"response-134"><a href=3D"https://docs.ipfs.io/re=
ference/http/api/#response-134" class=3D"header-anchor">#</a> Response</h3>=
 <p>On success, the call to this endpoint will return with 200 and the foll=
owing body:</p> <div class=3D"language-json extra-class"><pre class=3D"lang=
uage-json"><code><span class=3D"token punctuation">{</span>
  <span class=3D"token property">"Bytes"</span><span class=3D"token operato=
r">:</span> <span class=3D"token string">"&lt;int64&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Hash"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Name"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-134"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-134" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST -F file=3D@myfile "http://127.0.0.1:50=
01/api/v0/tar/add"</code></p> <hr> <h2 id=3D"api-v0-tar-cat"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#api-v0-tar-cat" class=3D"header-ancho=
r">#</a> /api/v0/tar/cat</h2> <p>Export a tar file from IPFS.</p> <h3 id=3D=
"arguments-136"><a href=3D"https://docs.ipfs.io/reference/http/api/#argumen=
ts-136" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><code>arg</cod=
e> [string]: ipfs path of archive to export. Required: <strong>yes</strong>=
.</li></ul> <h3 id=3D"response-135"><a href=3D"https://docs.ipfs.io/referen=
ce/http/api/#response-135" class=3D"header-anchor">#</a> Response</h3> <p>O=
n success, the call to this endpoint will return with 200 and the following=
 body:</p> <div class=3D"language-json extra-class"><pre class=3D"language-=
json"><code>This endpoint returns a `text/plain` response body.
</code></pre></div><h3 id=3D"curl-example-135"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-135" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/tar/cat?=
arg=3D&lt;path&gt;"</code></p> <hr> <h2 id=3D"api-v0-update"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#api-v0-update" class=3D"header-anchor=
">#</a> /api/v0/update</h2> <h3 id=3D"arguments-137"><a href=3D"https://doc=
s.ipfs.io/reference/http/api/#arguments-137" class=3D"header-anchor">#</a> =
Arguments</h3> <ul><li><code>arg</code> [string]: Arguments for subcommand.=
 Required: no.</li></ul> <h3 id=3D"response-136"><a href=3D"https://docs.ip=
fs.io/reference/http/api/#response-136" class=3D"header-anchor">#</a> Respo=
nse</h3> <p>On success, the call to this endpoint will return with 200 and =
the following body:</p> <div class=3D"language-json extra-class"><pre class=
=3D"language-json"><code>This endpoint returns a `text/plain` response body=
.
</code></pre></div><h3 id=3D"curl-example-136"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-136" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/update?a=
rg=3D&lt;args&gt;"</code></p> <hr> <h2 id=3D"api-v0-urlstore-add"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#api-v0-urlstore-add" class=3D"=
header-anchor">#</a> /api/v0/urlstore/add</h2> <p>Add URL via urlstore.</p>=
 <h3 id=3D"arguments-138"><a href=3D"https://docs.ipfs.io/reference/http/ap=
i/#arguments-138" class=3D"header-anchor">#</a> Arguments</h3> <ul><li><cod=
e>arg</code> [string]: URL to add to IPFS Required: <strong>yes</strong>.</=
li> <li><code>trickle</code> [bool]: Use trickle-dag format for dag generat=
ion. Required: no.</li> <li><code>pin</code> [bool]: Pin this object when a=
dding. Default: <code>true</code>. Required: no.</li></ul> <h3 id=3D"respon=
se-137"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-137" c=
lass=3D"header-anchor">#</a> Response</h3> <p>On success, the call to this =
endpoint will return with 200 and the following body:</p> <div class=3D"lan=
guage-json extra-class"><pre class=3D"language-json"><code><span class=3D"t=
oken punctuation">{</span>
  <span class=3D"token property">"Key"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Size"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;int&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-137"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-137" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/urlstore=
/add?arg=3D&lt;url&gt;&amp;trickle=3D&lt;value&gt;&amp;pin=3Dtrue"</code></=
p> <hr> <h2 id=3D"api-v0-version"><a href=3D"https://docs.ipfs.io/reference=
/http/api/#api-v0-version" class=3D"header-anchor">#</a> /api/v0/version</h=
2> <p>Show IPFS version information.</p> <h3 id=3D"arguments-139"><a href=
=3D"https://docs.ipfs.io/reference/http/api/#arguments-139" class=3D"header=
-anchor">#</a> Arguments</h3> <ul><li><code>number</code> [bool]: Only show=
 the version number. Required: no.</li> <li><code>commit</code> [bool]: Sho=
w the commit hash. Required: no.</li> <li><code>repo</code> [bool]: Show re=
po version. Required: no.</li> <li><code>all</code> [bool]: Show all versio=
n information. Required: no.</li></ul> <h3 id=3D"response-138"><a href=3D"h=
ttps://docs.ipfs.io/reference/http/api/#response-138" class=3D"header-ancho=
r">#</a> Response</h3> <p>On success, the call to this endpoint will return=
 with 200 and the following body:</p> <div class=3D"language-json extra-cla=
ss"><pre class=3D"language-json"><code><span class=3D"token punctuation">{<=
/span>
  <span class=3D"token property">"Commit"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"Golang"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"Repo"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"System"</span><span class=3D"token operat=
or">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span clas=
s=3D"token punctuation">,</span>
  <span class=3D"token property">"Version"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-138"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-138" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/version?=
number=3D&lt;value&gt;&amp;commit=3D&lt;value&gt;&amp;repo=3D&lt;value&gt;&=
amp;all=3D&lt;value&gt;"</code></p> <hr> <h2 id=3D"api-v0-version-deps"><a =
href=3D"https://docs.ipfs.io/reference/http/api/#api-v0-version-deps" class=
=3D"header-anchor">#</a> /api/v0/version/deps</h2> <p>Shows information abo=
ut dependencies used for build.</p> <h3 id=3D"arguments-140"><a href=3D"htt=
ps://docs.ipfs.io/reference/http/api/#arguments-140" class=3D"header-anchor=
">#</a> Arguments</h3> <p>This endpoint takes no arguments.</p> <h3 id=3D"r=
esponse-139"><a href=3D"https://docs.ipfs.io/reference/http/api/#response-1=
39" class=3D"header-anchor">#</a> Response</h3> <p>On success, the call to =
this endpoint will return with 200 and the following body:</p> <div class=
=3D"language-json extra-class"><pre class=3D"language-json"><code><span cla=
ss=3D"token punctuation">{</span>
  <span class=3D"token property">"Path"</span><span class=3D"token operator=
">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"ReplacedBy"</span><span class=3D"token op=
erator">:</span> <span class=3D"token string">"&lt;string&gt;"</span><span =
class=3D"token punctuation">,</span>
  <span class=3D"token property">"Sum"</span><span class=3D"token operator"=
>:</span> <span class=3D"token string">"&lt;string&gt;"</span><span class=
=3D"token punctuation">,</span>
  <span class=3D"token property">"Version"</span><span class=3D"token opera=
tor">:</span> <span class=3D"token string">"&lt;string&gt;"</span>
<span class=3D"token punctuation">}</span>

</code></pre></div><h3 id=3D"curl-example-139"><a href=3D"https://docs.ipfs=
.io/reference/http/api/#curl-example-139" class=3D"header-anchor">#</a> cUR=
L Example</h3> <p><code>curl -X POST "http://127.0.0.1:5001/api/v0/version/=
deps"</code></p> <hr></div> <div data-v-4f5abb4a=3D"" class=3D"content-foot=
er"><div data-v-063e6196=3D"" data-v-4f5abb4a=3D"" class=3D"feedback conten=
t-feedback"><h3 data-v-063e6196=3D"">Was this information helpful?</h3> <di=
v data-v-063e6196=3D"" class=3D"feedback-actions"><button data-v-063e6196=
=3D"" title=3D"Yes" class=3D"btn btn-primary">
      Yes
    </button> <button data-v-063e6196=3D"" title=3D"No" class=3D"btn btn-pr=
imary">
      No
    </button></div> <!----> <div data-v-063e6196=3D"" class=3D"feedback-edi=
t-or-issue"><div data-v-063e6196=3D"" class=3D"local-page-edit"><div class=
=3D"local-edit-link"><a href=3D"https://github.com/ipfs/ipfs-docs/edit/main=
/docs/reference/http/api.md" target=3D"_blank" rel=3D"noopener noreferrer">=
Edit this page</a> <span>
      on GitHub or
      <a href=3D"https://github.com/ipfs/ipfs-docs/issues/new?assignees=3D&=
amp;labels=3Dneed%2Ftriage&amp;template=3Dopen_an_issue.md&amp;title=3DHTTP=
%20API" target=3D"_blank" rel=3D"noopener noreferrer">open an issue</a></sp=
an></div></div></div></div> <div data-v-00666086=3D"" data-v-4f5abb4a=3D"" =
class=3D"legacy-callout"><p data-v-00666086=3D""><b data-v-00666086=3D"">He=
lp us improve this site!</b></p> <section data-v-00666086=3D""><div data-v-=
00666086=3D"" class=3D"block"><ul data-v-00666086=3D""><li data-v-00666086=
=3D""><a data-v-00666086=3D"" href=3D"https://github.com/ipfs/ipfs-docs/iss=
ues/new?assignees=3D&amp;labels=3DOKR+3%3A+Content+Improvement%2C+docs-ipfs=
&amp;template=3Dcontent-request.md&amp;title=3D%5BCONTENT+REQUEST%5D+%28add=
+your+title+here%21%29" target=3D"_blank" rel=3D"noopener noreferrer">Sugge=
st new content</a></li> <li data-v-00666086=3D""><a data-v-00666086=3D"" hr=
ef=3D"https://ipfs.canny.io/docs-features" target=3D"_blank" rel=3D"noopene=
r noreferrer">Request features</a></li></ul></div> <div data-v-00666086=3D"=
" class=3D"block"><ul data-v-00666086=3D""><li data-v-00666086=3D""><a data=
-v-00666086=3D"" href=3D"https://github.com/ipfs/ipfs-docs/issues/new?assig=
nees=3D&amp;labels=3DOKR+3%3A+Content+Improvement%2C+docs-ipfs&amp;template=
=3Ddocumentation-issue.md&amp;title=3D%5BDOCS+ISSUE%5D+%28add+your+title+he=
re%21%29" target=3D"_blank" rel=3D"noopener noreferrer">Give general feedba=
ck</a></li></ul></div></section></div> <footer data-v-4f5abb4a=3D"" class=
=3D"page-edit"><!----> <div class=3D"last-updated"><span class=3D"prefix">L=
ast Updated:</span> <span class=3D"time">8/18/2021, 4:35:55 PM</span></div>=
</footer> <!----></div> <div data-v-4f5abb4a=3D""></div> <div data-v-4f5abb=
4a=3D""></div> </main></div><div class=3D"global-ui"><!----><div></div></di=
v></div>
   =20
 =20

</body></html>
------MultipartBoundary--6V0Wl9F4SfHcxYcJ2HcpRKDAh61pWLJewhIgsWtcqa----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.ipfs.io/assets/css/0.styles.7261f257.css

@charset "utf-8";

code[class*=3D"language-"], pre[class*=3D"language-"] { color: rgb(204, 204=
, 204); background: none; font-family: Consolas, Monaco, "Andale Mono", "Ub=
untu Mono", monospace; font-size: 1em; text-align: left; white-space: pre; =
word-spacing: normal; word-break: normal; overflow-wrap: normal; line-heigh=
t: 1.5; tab-size: 4; hyphens: none; }

pre[class*=3D"language-"] { padding: 1em; margin: 0.5em 0px; overflow: auto=
; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(45, 45, 45); }

:not(pre) > code[class*=3D"language-"] { padding: 0.1em; border-radius: 0.3=
em; white-space: normal; }

.token.block-comment, .token.cdata, .token.comment, .token.doctype, .token.=
prolog { color: rgb(153, 153, 153); }

.token.punctuation { color: rgb(204, 204, 204); }

.token.attr-name, .token.deleted, .token.namespace, .token.tag { color: rgb=
(226, 119, 122); }

.token.function-name { color: rgb(97, 150, 204); }

.token.boolean, .token.function, .token.number { color: rgb(240, 141, 73); =
}

.token.class-name, .token.constant, .token.property, .token.symbol { color:=
 rgb(248, 197, 85); }

.token.atrule, .token.builtin, .token.important, .token.keyword, .token.sel=
ector { color: rgb(204, 153, 205); }

.token.attr-value, .token.char, .token.regex, .token.string, .token.variabl=
e { color: rgb(126, 198, 153); }

.token.entity, .token.operator, .token.url { color: rgb(103, 205, 204); }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

.token.inserted { color: green; }

.theme-default-content code { color: rgba(51, 51, 51, 0.8); padding: 0.25re=
m 0.5rem; margin: 0px; font-size: 0.85em; background-color: rgba(27, 31, 35=
, 0.05); border-radius: 3px; }

.theme-default-content code .token.deleted { color: rgb(236, 89, 117); }

.theme-default-content code .token.inserted { color: rgb(62, 144, 150); }

.theme-default-content pre, .theme-default-content pre[class*=3D"language-"=
] { line-height: 1.4; padding: 1.25rem 1.5rem; margin: 0.85rem 0px; backgro=
und-color: rgb(14, 34, 51); border-radius: 6px; overflow: auto; }

.theme-default-content pre[class*=3D"language-"] code, .theme-default-conte=
nt pre code { color: rgb(255, 255, 255); padding: 0px; background-color: tr=
ansparent; border-radius: 0px; }

div[class*=3D"language-"] { position: relative; background-color: rgb(14, 3=
4, 51); border-radius: 6px; }

div[class*=3D"language-"] .highlight-lines { user-select: none; padding-top=
: 1.3rem; position: absolute; top: 0px; left: 0px; width: 100%; line-height=
: 1.4; }

div[class*=3D"language-"] .highlight-lines .highlighted { background-color:=
 rgba(0, 0, 0, 0.66); }

div[class*=3D"language-"] pre, div[class*=3D"language-"] pre[class*=3D"lang=
uage-"] { background: transparent; position: relative; z-index: 1; }

div[class*=3D"language-"]::before { position: absolute; z-index: 3; top: 0.=
8em; right: 1em; font-size: 0.75rem; color: rgba(255, 255, 255, 0.4); }

div[class*=3D"language-"]:not(.line-numbers-mode) .line-numbers-wrapper { d=
isplay: none; }

div[class*=3D"language-"].line-numbers-mode .highlight-lines .highlighted {=
 position: relative; }

div[class*=3D"language-"].line-numbers-mode .highlight-lines .highlighted::=
before { content: " "; position: absolute; z-index: 3; left: 0px; top: 0px;=
 display: block; width: 3.5rem; height: 100%; background-color: rgba(0, 0, =
0, 0.66); }

div[class*=3D"language-"].line-numbers-mode pre { padding-left: 4.5rem; ver=
tical-align: middle; }

div[class*=3D"language-"].line-numbers-mode .line-numbers-wrapper { positio=
n: absolute; top: 0px; width: 3.5rem; text-align: center; color: rgba(255, =
255, 255, 0.3); padding: 1.25rem 0px; line-height: 1.4; }

div[class*=3D"language-"].line-numbers-mode .line-numbers-wrapper br { user=
-select: none; }

div[class*=3D"language-"].line-numbers-mode .line-numbers-wrapper .line-num=
ber { position: relative; z-index: 4; user-select: none; font-size: 0.85em;=
 }

div[class*=3D"language-"].line-numbers-mode::after { content: ""; position:=
 absolute; z-index: 2; top: 0px; left: 0px; width: 3.5rem; height: 100%; bo=
rder-radius: 6px 0px 0px 6px; border-right: 1px solid rgba(0, 0, 0, 0.66); =
background-color: rgb(14, 34, 51); }

div[class~=3D"language-js"]::before { content: "js"; }

div[class~=3D"language-ts"]::before { content: "ts"; }

div[class~=3D"language-html"]::before { content: "html"; }

div[class~=3D"language-md"]::before { content: "md"; }

div[class~=3D"language-vue"]::before { content: "vue"; }

div[class~=3D"language-css"]::before { content: "css"; }

div[class~=3D"language-sass"]::before { content: "sass"; }

div[class~=3D"language-scss"]::before { content: "scss"; }

div[class~=3D"language-less"]::before { content: "less"; }

div[class~=3D"language-stylus"]::before { content: "stylus"; }

div[class~=3D"language-go"]::before { content: "go"; }

div[class~=3D"language-java"]::before { content: "java"; }

div[class~=3D"language-c"]::before { content: "c"; }

div[class~=3D"language-sh"]::before { content: "sh"; }

div[class~=3D"language-yaml"]::before { content: "yaml"; }

div[class~=3D"language-py"]::before { content: "py"; }

div[class~=3D"language-docker"]::before { content: "docker"; }

div[class~=3D"language-dockerfile"]::before { content: "dockerfile"; }

div[class~=3D"language-makefile"]::before { content: "makefile"; }

div[class~=3D"language-javascript"]::before { content: "js"; }

div[class~=3D"language-typescript"]::before { content: "ts"; }

div[class~=3D"language-markup"]::before { content: "html"; }

div[class~=3D"language-markdown"]::before { content: "md"; }

div[class~=3D"language-json"]::before { content: "json"; }

div[class~=3D"language-ruby"]::before { content: "rb"; }

div[class~=3D"language-python"]::before { content: "py"; }

div[class~=3D"language-bash"]::before { content: "sh"; }

div[class~=3D"language-php"]::before { content: "php"; }

.custom-block .custom-block-title { font-weight: 600; margin-bottom: -0.4re=
m; }

.custom-block.danger, .custom-block.tip, .custom-block.warning { padding: 0=
.1rem 1.5rem; border-left-width: 0.5rem; border-left-style: solid; margin: =
1rem 0px; }

.custom-block.tip { background-color: rgb(243, 245, 247); border-color: rgb=
(66, 185, 131); }

.custom-block.warning { background-color: rgba(255, 229, 100, 0.3); border-=
color: rgb(231, 192, 0); color: rgb(107, 89, 0); }

.custom-block.warning .custom-block-title { color: rgb(178, 148, 0); }

.custom-block.warning a { color: rgba(0, 0, 0, 0.8); }

.custom-block.danger { background-color: rgb(255, 230, 230); border-color: =
rgb(204, 0, 0); color: rgb(77, 0, 0); }

.custom-block.danger .custom-block-title { color: rgb(153, 0, 0); }

.custom-block.danger a { color: rgba(0, 0, 0, 0.8); }

.custom-block.details { display: block; position: relative; border-radius: =
2px; margin: 1.6em 0px; padding: 1.6em; background-color: rgb(238, 238, 238=
); }

.custom-block.details h4 { margin-top: 0px; }

.custom-block.details figure:last-child, .custom-block.details p:last-child=
 { margin-bottom: 0px; padding-bottom: 0px; }

.custom-block.details summary { outline: none; cursor: pointer; }

.arrow { display: inline-block; width: 0px; height: 0px; }

.arrow.up { border-bottom: 6px solid rgb(204, 204, 204); }

.arrow.down, .arrow.up { border-left: 4px solid transparent; border-right: =
4px solid transparent; }

.arrow.down { border-top: 6px solid rgb(204, 204, 204); }

.arrow.right { border-left: 6px solid rgb(204, 204, 204); }

.arrow.left, .arrow.right { border-top: 4px solid transparent; border-botto=
m: 4px solid transparent; }

.arrow.left { border-right: 6px solid rgb(204, 204, 204); }

.theme-default-content:not(.custom) { max-width: 740px; margin: 0px auto; p=
adding: 2rem 2.5rem; }

@media (max-width: 959px) {
  .theme-default-content:not(.custom) { padding: 2rem; }
}

@media (max-width: 419px) {
  .theme-default-content:not(.custom) { padding: 1.5rem; }
}

.table-of-contents .badge { vertical-align: middle; }

body, html { padding: 0px; margin: 0px; background-color: rgb(255, 255, 255=
); }

body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, =
Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sans", "Helvetica Neue", san=
s-serif; -webkit-font-smoothing: antialiased; font-size: 16px; color: rgba(=
0, 0, 0, 0.8); }

.page { padding-left: 19rem; }

.navbar { z-index: 20; right: 0px; height: 4rem; background-color: rgb(255,=
 255, 255); box-sizing: border-box; border-bottom: 1px solid rgb(234, 236, =
239); }

.navbar, .sidebar-mask { position: fixed; top: 0px; left: 0px; }

.sidebar-mask { z-index: 9; width: 100vw; height: 100vh; display: none; }

.sidebar { font-size: 16px; background-color: rgb(255, 255, 255); width: 19=
rem; position: fixed; z-index: 10; margin: 0px; top: 4rem; left: 0px; botto=
m: 0px; box-sizing: border-box; border-right: 1px solid rgb(234, 236, 239);=
 overflow-y: auto; }

.theme-default-content:not(.custom) > :first-child { margin-top: 4rem; }

.theme-default-content:not(.custom) a:hover { text-decoration: underline; }

.theme-default-content:not(.custom) p.demo { padding: 1rem 1.5rem; border: =
1px solid rgb(221, 221, 221); border-radius: 4px; }

.theme-default-content:not(.custom) img { max-width: 100%; }

.theme-default-content.custom { padding: 0px; margin: 0px; }

.theme-default-content.custom img { max-width: 100%; }

a { font-weight: 500; text-decoration: none; }

a, p a code { color: rgb(62, 144, 150); }

p a code { font-weight: 400; }

kbd { background: rgb(238, 238, 238); border-width: 0.15rem 0.15rem 0.25rem=
; border-style: solid; border-color: rgb(221, 221, 221); border-image: init=
ial; border-radius: 0.15rem; padding: 0px 0.15em; }

blockquote { font-size: 1rem; color: rgb(153, 153, 153); border-left: 0.2re=
m solid rgb(223, 226, 229); margin: 1rem 0px; padding: 0.25rem 0px 0.25rem =
1rem; }

blockquote > p { margin: 0px; }

ol, ul { padding-left: 1.2em; }

strong { font-weight: 600; }

h1, h2, h3, h4, h5, h6 { font-weight: 600; line-height: 1.25; }

.theme-default-content:not(.custom) > h1, .theme-default-content:not(.custo=
m) > h2, .theme-default-content:not(.custom) > h3, .theme-default-content:n=
ot(.custom) > h4, .theme-default-content:not(.custom) > h5, .theme-default-=
content:not(.custom) > h6 { margin-top: -3.5rem; padding-top: 5rem; margin-=
bottom: 0px; }

.theme-default-content:not(.custom) > h1:first-child, .theme-default-conten=
t:not(.custom) > h2:first-child, .theme-default-content:not(.custom) > h3:f=
irst-child, .theme-default-content:not(.custom) > h4:first-child, .theme-de=
fault-content:not(.custom) > h5:first-child, .theme-default-content:not(.cu=
stom) > h6:first-child { margin-top: -1.5rem; margin-bottom: 1rem; }

.theme-default-content:not(.custom) > h1:first-child + .custom-block, .them=
e-default-content:not(.custom) > h1:first-child + p, .theme-default-content=
:not(.custom) > h1:first-child + pre, .theme-default-content:not(.custom) >=
 h2:first-child + .custom-block, .theme-default-content:not(.custom) > h2:f=
irst-child + p, .theme-default-content:not(.custom) > h2:first-child + pre,=
 .theme-default-content:not(.custom) > h3:first-child + .custom-block, .the=
me-default-content:not(.custom) > h3:first-child + p, .theme-default-conten=
t:not(.custom) > h3:first-child + pre, .theme-default-content:not(.custom) =
> h4:first-child + .custom-block, .theme-default-content:not(.custom) > h4:=
first-child + p, .theme-default-content:not(.custom) > h4:first-child + pre=
, .theme-default-content:not(.custom) > h5:first-child + .custom-block, .th=
eme-default-content:not(.custom) > h5:first-child + p, .theme-default-conte=
nt:not(.custom) > h5:first-child + pre, .theme-default-content:not(.custom)=
 > h6:first-child + .custom-block, .theme-default-content:not(.custom) > h6=
:first-child + p, .theme-default-content:not(.custom) > h6:first-child + pr=
e { margin-top: 2rem; }

h1:focus .header-anchor, h1:hover .header-anchor, h2:focus .header-anchor, =
h2:hover .header-anchor, h3:focus .header-anchor, h3:hover .header-anchor, =
h4:focus .header-anchor, h4:hover .header-anchor, h5:focus .header-anchor, =
h5:hover .header-anchor, h6:focus .header-anchor, h6:hover .header-anchor {=
 opacity: 1; }

h1 { font-size: 2.2rem; }

h2 { font-size: 1.65rem; padding-bottom: 0.3rem; border-bottom: 1px solid r=
gb(234, 236, 239); }

h3 { font-size: 1.35rem; }

a.header-anchor { font-size: 0.85em; float: left; margin-left: -0.87em; pad=
ding-right: 0.23em; margin-top: 0.125em; opacity: 0; }

a.header-anchor:focus, a.header-anchor:hover { text-decoration: none; }

.line-number, code, kbd { font-family: source-code-pro, Menlo, Monaco, Cons=
olas, "Courier New", monospace; }

ol, p, ul { line-height: 1.7; }

hr { border-width: 1px 0px 0px; border-right-style: initial; border-bottom-=
style: initial; border-left-style: initial; border-right-color: initial; bo=
rder-bottom-color: initial; border-left-color: initial; border-image: initi=
al; border-top-style: solid; border-top-color: rgb(234, 236, 239); }

table { border-collapse: collapse; margin: 1rem 0px; display: block; overfl=
ow-x: auto; }

tr { border-top: 1px solid rgb(223, 226, 229); }

tr:nth-child(2n) { background-color: rgb(246, 248, 250); }

td, th { border: 1px solid rgb(223, 226, 229); padding: 0.6em 1em; }

.theme-container.sidebar-open .sidebar-mask { display: block; }

.theme-container.no-navbar .theme-default-content:not(.custom) > h1, .theme=
-container.no-navbar h2, .theme-container.no-navbar h3, .theme-container.no=
-navbar h4, .theme-container.no-navbar h5, .theme-container.no-navbar h6 { =
margin-top: 1.5rem; padding-top: 0px; }

.theme-container.no-navbar .sidebar { top: 0px; }

@media (min-width: 720px) {
  .theme-container.no-sidebar .sidebar { display: none; }
  .theme-container.no-sidebar .page { padding-left: 0px; }
}

@media (max-width: 959px) {
  .sidebar { font-size: 15px; width: 15.58rem; }
  .page { padding-left: 15.58rem; }
}

@media (max-width: 719px) {
  .sidebar { top: 0px; padding-top: 4rem; transform: translateX(-100%); tra=
nsition: transform 0.2s ease 0s; }
  .page { padding-left: 0px; }
  .theme-container.sidebar-open .sidebar { transform: translateX(0px); }
  .theme-container.no-navbar .sidebar { padding-top: 0px; }
}

@media (max-width: 419px) {
  h1 { font-size: 1.9rem; }
  .theme-default-content div[class*=3D"language-"] { margin: 0.85rem -1.5re=
m; border-radius: 0px; }
}

.max-w-screen-xl, .navbar, .theme-container { max-width: 1280px !important;=
 }

.navbar, .relative, .theme-container { position: relative; }

.fixed { position: fixed; }

.float-l { float: left; }

.float-r { float: right; }

.mx-auto, .navbar, .theme-container { margin-left: auto; margin-right: auto=
; }

.btn { font-weight: 700; padding: 10px 15px; border: none; font-size: 1em; =
margin-right: 10px; border-radius: 2px; transition: all 0.3s ease 0s; curso=
r: pointer; outline: none; }

.btn-primary { background-color: rgb(43, 101, 105); color: rgb(255, 255, 25=
5); }

.btn-primary:hover { background-color: rgb(62, 144, 150); }

@media (min-width: 959px) {
  .sidebar { position: fixed; left: inherit; border-right: none; }
  footer.page-edit { margin: inherit; }
}

.theme-default-content:not(.custom) { margin: inherit; }

.theme-default-content:not(.custom) > h1 { padding-top: 1em; }

@media (min-width: 959px) {
  header.navbar .links { display: flex; flex-direction: row-reverse; }
  header.navbar .links .suggestions, header.navbar .links input { width: 10=
em; }
  header.navbar .links .suggestions, header.navbar .links input:focus { wid=
th: 20em; }
}

@media (max-width: 719px) {
  header.navbar .links input { box-sizing: border-box; font-size: 1rem; }
  header.navbar .links input:focus { width: 87.5vw; }
}

@media (max-width: 719px) {
  .home-link { position: absolute; width: 45px; left: calc(50% - 22.5px); }
}

ul > li > a.sidebar-link { color: rgb(93, 100, 111); font-weight: 500; }

ul.sidebar-links > li > a { color: inherit; }

.sidebar .sidebar-heading { font-weight: 700 !important; }

.sidebar .sidebar-group .arrow { display: none; }

.sidebar .sidebar-group.is-sub-group a.sidebar-link { margin-bottom: 0.2rem=
; }

.sidebar .sidebar-group.is-sub-group { margin-bottom: 0.5rem; }

.sidebar .sidebar-links.sidebar-group-items li:last-child .sidebar-group.is=
-sub-group { margin-bottom: 0px; }

.sidebar .sidebar-group.is-sub-group > .sidebar-heading:not(.clickable) { o=
pacity: 1; font-weight: 700; text-transform: uppercase; font-size: 0.8rem; =
letter-spacing: 0.05em; line-height: 2em; }

.icon.outbound { padding-left: 0.15rem; }

.sidebar::-webkit-scrollbar { width: 5px; position: fixed; right: 0px; }

.sidebar::-webkit-scrollbar-thumb { background: transparent; transition: ba=
ckground-color 2s ease 0s; }

.sidebar::-webkit-scrollbar-thumb:hover, .sidebar:hover::-webkit-scrollbar-=
thumb { background: rgb(234, 236, 239); }

@media (max-width: 719px) {
  .sidebar { width: 80vw; }
}

.embed-responsive { padding-top: 56.25%; height: 0px; position: relative; }

.embed-responsive-16by9 > .embed-responsive-item { width: 100%; height: 100=
%; position: absolute; top: 0px; left: 0px; }

.theme-default-content .custom-block .custom-block-title { letter-spacing: =
0.5px; }

.theme-default-content .tip { border-left: 4px solid rgb(105, 109, 120); ba=
ckground-color: rgb(242, 244, 247); color: rgb(52, 55, 63); }

.theme-default-content .info { border-left: 4px solid rgb(14, 116, 170); ba=
ckground-color: rgb(230, 246, 255); color: rgb(52, 55, 63); }

.theme-default-content .warning { border-left: 4px solid rgb(231, 192, 0); =
background-color: rgb(255, 247, 210); color: rgb(52, 55, 63); }

.theme-default-content .danger { border-left: 4px solid rgb(169, 62, 62); b=
ackground-color: rgb(255, 230, 230); color: rgb(169, 62, 62); }

html.smooth-scroll { scroll-behavior: smooth; }

@supports (-moz-appearance:none) {
  html.smooth-scroll { scroll-behavior: auto; }
}

img[loading] { height: auto; }

#app .navbar { position: sticky; }

#app .navbar .logo { height: 2.5rem; margin: 0px; padding: 1px 3px 0px 0px;=
 vertical-align: top; }

#app .site-name { font-size: 1.5rem; letter-spacing: -0.05rem; background: =
url("../../images/ipfs-logo-text-black.svg") -2px / contain no-repeat; text=
-indent: -99999px; min-width: 180px; min-height: 47px; }

.custom-block.callout { background-color: rgb(213, 236, 238); padding: 0.1r=
em 1.5rem; border-left: 0.5rem solid rgb(62, 144, 150); border-top-color: r=
gb(62, 144, 150); border-right-color: rgb(62, 144, 150); border-bottom-colo=
r: rgb(62, 144, 150); }

.custom-block.right { float: right; padding: 1em 0px 1em 1em; }

.custom-block.left { float: left; padding: 1em 1em 1em 0px; }

code { word-break: break-word; }

:root { --accent-color:#3e9096; --text-color:rgba(0,0,0,0.8); --border-colo=
r:#eaecef; --code-bg-color:#0e2233; --highlight-color:#ffffa0; }

#nprogress { pointer-events: none; }

#nprogress .bar { background: rgb(62, 144, 150); position: fixed; z-index: =
1031; top: 0px; left: 0px; width: 100%; height: 2px; }

#nprogress .peg { display: block; position: absolute; right: 0px; width: 10=
0px; height: 100%; box-shadow: rgb(62, 144, 150) 0px 0px 10px, rgb(62, 144,=
 150) 0px 0px 5px; opacity: 1; transform: rotate(3deg) translateY(-4px); }

#nprogress .spinner { display: block; position: fixed; z-index: 1031; top: =
15px; right: 15px; }

#nprogress .spinner-icon { width: 18px; height: 18px; box-sizing: border-bo=
x; border-color: rgb(62, 144, 150) transparent transparent rgb(62, 144, 150=
); border-style: solid; border-width: 2px; border-radius: 50%; animation: 0=
.4s linear 0s infinite normal none running nprogress-spinner; }

.nprogress-custom-parent { overflow: hidden; position: relative; }

.nprogress-custom-parent #nprogress .bar, .nprogress-custom-parent #nprogre=
ss .spinner { position: absolute; }

@-webkit-keyframes nprogress-spinner {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

@keyframes nprogress-spinner {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.go-to-top[data-v-5fd4ef0c] { cursor: pointer; position: fixed; bottom: 2re=
m; right: 2.5rem; width: 2rem; color: rgb(62, 144, 150); z-index: 1; }

.go-to-top[data-v-5fd4ef0c]:hover { color: rgb(107, 188, 194); }

@media (max-width: 959px) {
  .go-to-top[data-v-5fd4ef0c] { display: none; }
}

.fade-enter-active[data-v-5fd4ef0c], .fade-leave-active[data-v-5fd4ef0c] { =
transition: opacity 0.3s ease 0s; }

.fade-enter[data-v-5fd4ef0c], .fade-leave-to[data-v-5fd4ef0c] { opacity: 0;=
 }

.icon.outbound { color: rgb(170, 170, 170); display: inline-block; vertical=
-align: middle; position: relative; top: -1px; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: now=
rap; border-width: 0px; }

.home { padding: 4rem 2rem 0px; max-width: 960px; margin: 0px auto; display=
: block; }

.home .hero { text-align: center; }

.home .hero img { max-width: 100%; max-height: 280px; display: block; margi=
n: 3rem auto 1.5rem; }

.home .hero h1 { font-size: 3rem; }

.home .hero .action, .home .hero .description, .home .hero h1 { margin: 1.8=
rem auto; }

.home .hero .description { max-width: 35rem; font-size: 1.6rem; line-height=
: 1.3; color: rgba(102, 102, 102, 0.8); }

.home .hero .action-button { display: inline-block; font-size: 1.2rem; colo=
r: rgb(255, 255, 255); background-color: rgb(62, 144, 150); padding: 0.8rem=
 1.6rem; border-radius: 4px; transition: background-color 0.1s ease 0s; box=
-sizing: border-box; border-bottom: 1px solid rgb(56, 130, 135); }

.home .hero .action-button:hover { background-color: rgb(71, 164, 171); }

.home .features { border-top: 1px solid rgb(234, 236, 239); padding: 1.2rem=
 0px; margin-top: 2.5rem; display: flex; flex-wrap: wrap; align-items: flex=
-start; place-content: stretch space-between; }

.home .feature { flex-grow: 1; flex-basis: 30%; max-width: 30%; }

.home .feature h2 { font-size: 1.4rem; font-weight: 500; border-bottom: non=
e; padding-bottom: 0px; color: rgba(26, 26, 26, 0.8); }

.home .feature p, .home .footer { color: rgba(64, 64, 64, 0.8); }

.home .footer { padding: 2.5rem; border-top: 1px solid rgb(234, 236, 239); =
text-align: center; }

@media (max-width: 719px) {
  .home .features { flex-direction: column; }
  .home .feature { max-width: 100%; padding: 0px 2.5rem; }
}

@media (max-width: 419px) {
  .home { padding-left: 1.5rem; padding-right: 1.5rem; }
  .home .hero img { max-height: 210px; margin: 2rem auto 1.2rem; }
  .home .hero h1 { font-size: 2rem; }
  .home .hero .action, .home .hero .description, .home .hero h1 { margin: 1=
.2rem auto; }
  .home .hero .description { font-size: 1.2rem; }
  .home .hero .action-button { font-size: 1rem; padding: 0.6rem 1.2rem; }
  .home .feature h2 { font-size: 1.25rem; }
}

.algolia-search-wrapper > span { vertical-align: middle; }

.algolia-search-wrapper .algolia-autocomplete { line-height: normal; }

.algolia-search-wrapper .algolia-autocomplete .ds-dropdown-menu { backgroun=
d-color: rgb(255, 255, 255); border: 1px solid rgb(153, 153, 153); border-r=
adius: 4px; font-size: 16px; margin: 6px 0px 0px; padding: 4px; text-align:=
 left; }

.algolia-search-wrapper .algolia-autocomplete .ds-dropdown-menu::before { b=
order-color: rgb(153, 153, 153); }

.algolia-search-wrapper .algolia-autocomplete .ds-dropdown-menu [class*=3D"=
ds-dataset-"] { border: none; padding: 0px; }

.algolia-search-wrapper .algolia-autocomplete .ds-dropdown-menu .ds-suggest=
ions { margin-top: 0px; }

.algolia-search-wrapper .algolia-autocomplete .ds-dropdown-menu .ds-suggest=
ion { border-bottom: 1px solid rgb(234, 236, 239); }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
--highlight { color: rgb(44, 129, 91); }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
 { border-color: rgb(234, 236, 239); padding: 0px; }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
 .algolia-docsearch-suggestion--category-header { padding: 5px 10px; margin=
-top: 0px; background: rgb(62, 144, 150); color: rgb(255, 255, 255); font-w=
eight: 600; }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
 .algolia-docsearch-suggestion--category-header .algolia-docsearch-suggesti=
on--highlight { background: rgba(255, 255, 255, 0.6); }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
 .algolia-docsearch-suggestion--wrapper { padding: 0px; }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
 .algolia-docsearch-suggestion--title { font-weight: 600; margin-bottom: 0p=
x; color: rgba(0, 0, 0, 0.8); }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
 .algolia-docsearch-suggestion--subcategory-column { vertical-align: top; p=
adding: 5px 7px 5px 5px; border-color: rgb(234, 236, 239); background: rgb(=
241, 243, 245); }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
 .algolia-docsearch-suggestion--subcategory-column::after { display: none; =
}

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggestion=
 .algolia-docsearch-suggestion--subcategory-column-text { color: rgb(85, 85=
, 85); }

.algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-footer { b=
order-color: rgb(234, 236, 239); }

.algolia-search-wrapper .algolia-autocomplete .ds-cursor .algolia-docsearch=
-suggestion--content { color: rgba(0, 0, 0, 0.8); background-color: rgb(231=
, 237, 243) !important; }

@media (min-width: 719px) {
  .algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggesti=
on .algolia-docsearch-suggestion--subcategory-column { float: none; width: =
150px; min-width: 150px; display: table-cell; }
  .algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggesti=
on .algolia-docsearch-suggestion--content { float: none; display: table-cel=
l; width: 100%; vertical-align: top; }
  .algolia-search-wrapper .algolia-autocomplete .algolia-docsearch-suggesti=
on .ds-dropdown-menu { min-width: 515px !important; }
}

@media (max-width: 719px) {
  .algolia-search-wrapper .ds-dropdown-menu { min-width: calc(100vw - 4rem)=
 !important; max-width: calc(100vw - 4rem) !important; }
  .algolia-search-wrapper .algolia-docsearch-suggestion--wrapper { padding:=
 5px 7px 5px 5px !important; }
  .algolia-search-wrapper .algolia-docsearch-suggestion--subcategory-column=
 { padding: 0px !important; background: rgb(255, 255, 255) !important; }
  .algolia-search-wrapper .algolia-docsearch-suggestion--subcategory-column=
-text::after { content: " > "; font-size: 10px; line-height: 14.4px; displa=
y: inline-block; width: 5px; margin: -3px 3px 0px; vertical-align: middle; =
}
}

.search-box { display: inline-block; position: relative; margin-right: 1rem=
; }

.search-box input { cursor: text; width: 10rem; height: 2rem; color: rgba(6=
4, 64, 64, 0.8); display: inline-block; border: 1px solid rgb(207, 212, 219=
); border-radius: 2rem; font-size: 0.9rem; line-height: 2rem; padding: 0px =
0.5rem 0px 2rem; outline: none; transition: all 0.2s ease 0s; background: u=
rl("../img/search.83621669.svg") 0.6rem 0.5rem / 1rem no-repeat rgb(255, 25=
5, 255); }

.search-box input:focus { cursor: auto; border-color: rgb(62, 144, 150); }

.search-box .suggestions { background: rgb(255, 255, 255); width: 20rem; po=
sition: absolute; top: 2rem; border: 1px solid rgb(207, 212, 219); border-r=
adius: 6px; padding: 0.4rem; list-style-type: none; }

.search-box .suggestions.align-right { right: 0px; }

.search-box .suggestion { line-height: 1.4; padding: 0.4rem 0.6rem; border-=
radius: 4px; cursor: pointer; }

.search-box .suggestion a { white-space: normal; color: rgba(89, 89, 89, 0.=
8); }

.search-box .suggestion a .page-title { font-weight: 600; }

.search-box .suggestion a .header { font-size: 0.9em; margin-left: 0.25em; =
}

.search-box .suggestion.focused { background-color: rgb(243, 244, 245); }

.search-box .suggestion.focused a { color: rgb(62, 144, 150); }

@media (max-width: 959px) {
  .search-box input { cursor: pointer; width: 0px; border-color: transparen=
t; position: relative; }
  .search-box input:focus { cursor: text; left: 0px; width: 10rem; }
}

@media not all {
  .search-box input { height: 2rem; }
}

@media (max-width: 959px) and (min-width: 719px) {
  .search-box .suggestions { left: 0px; }
}

@media (max-width: 719px) {
  .search-box { margin-right: 0px; }
  .search-box input { left: 1rem; }
  .search-box .suggestions { right: 0px; }
}

@media (max-width: 419px) {
  .search-box .suggestions { width: calc(100vw - 4rem); }
  .search-box input:focus { width: 8rem; }
}

.sidebar-button { cursor: pointer; display: none; width: 1.25rem; height: 1=
.25rem; position: absolute; padding: 0.6rem; top: 0.6rem; left: 1rem; }

.sidebar-button .icon { display: block; width: 1.25rem; height: 1.25rem; }

@media (max-width: 719px) {
  .sidebar-button { display: block; }
}

.dropdown-enter, .dropdown-leave-to { height: 0px !important; }

.dropdown-wrapper { cursor: pointer; }

.dropdown-wrapper .dropdown-title, .dropdown-wrapper .mobile-dropdown-title=
 { display: block; font-size: 0.9rem; font-family: inherit; cursor: inherit=
; padding: inherit; line-height: 1.4rem; background: transparent; border: n=
one; font-weight: 500; color: rgba(0, 0, 0, 0.8); }

.dropdown-wrapper .dropdown-title:hover, .dropdown-wrapper .mobile-dropdown=
-title:hover { border-color: transparent; }

.dropdown-wrapper .dropdown-title .arrow, .dropdown-wrapper .mobile-dropdow=
n-title .arrow { vertical-align: middle; margin-top: -1px; margin-left: 0.4=
rem; }

.dropdown-wrapper .mobile-dropdown-title { display: none; font-weight: 600;=
 }

.dropdown-wrapper .mobile-dropdown-title font-size inherit:hover { color: r=
gb(62, 144, 150); }

.dropdown-wrapper .nav-dropdown .dropdown-item { color: inherit; line-heigh=
t: 1.7rem; }

.dropdown-wrapper .nav-dropdown .dropdown-item h4 { margin: 0.45rem 0px 0px=
; border-top: 1px solid rgb(238, 238, 238); padding: 1rem 1.5rem 0.45rem 1.=
25rem; }

.dropdown-wrapper .nav-dropdown .dropdown-item .dropdown-subitem-wrapper { =
padding: 0px; list-style: none; }

.dropdown-wrapper .nav-dropdown .dropdown-item .dropdown-subitem-wrapper .d=
ropdown-subitem { font-size: 0.9em; }

.dropdown-wrapper .nav-dropdown .dropdown-item a { display: block; line-hei=
ght: 1.7rem; position: relative; border-bottom: none; font-weight: 400; mar=
gin-bottom: 0px; padding: 0px 1.5rem 0px 1.25rem; }

.dropdown-wrapper .nav-dropdown .dropdown-item a.router-link-active, .dropd=
own-wrapper .nav-dropdown .dropdown-item a:hover { color: rgb(62, 144, 150)=
; }

.dropdown-wrapper .nav-dropdown .dropdown-item a.router-link-active::after =
{ content: ""; width: 0px; height: 0px; border-left: 5px solid rgb(62, 144,=
 150); border-top: 3px solid transparent; border-bottom: 3px solid transpar=
ent; position: absolute; top: calc(50% - 2px); left: 9px; }

.dropdown-wrapper .nav-dropdown .dropdown-item:first-child h4 { margin-top:=
 0px; padding-top: 0px; border-top: 0px; }

@media (max-width: 719px) {
  .dropdown-wrapper.open .dropdown-title { margin-bottom: 0.5rem; }
  .dropdown-wrapper .dropdown-title { display: none; }
  .dropdown-wrapper .mobile-dropdown-title { display: block; }
  .dropdown-wrapper .nav-dropdown { transition: height 0.1s ease-out 0s; ov=
erflow: hidden; }
  .dropdown-wrapper .nav-dropdown .dropdown-item h4 { border-top: 0px; marg=
in-top: 0px; padding-top: 0px; }
  .dropdown-wrapper .nav-dropdown .dropdown-item > a, .dropdown-wrapper .na=
v-dropdown .dropdown-item h4 { font-size: 15px; line-height: 2rem; }
  .dropdown-wrapper .nav-dropdown .dropdown-item .dropdown-subitem { font-s=
ize: 14px; padding-left: 1rem; }
}

@media (min-width: 719px) {
  .dropdown-wrapper { height: 1.8rem; }
  .dropdown-wrapper.open .nav-dropdown, .dropdown-wrapper:hover .nav-dropdo=
wn { display: block !important; }
  .dropdown-wrapper .nav-dropdown { display: none; box-sizing: border-box; =
max-height: calc(100vh - 2.7rem); overflow-y: auto; position: absolute; top=
: 100%; right: 0px; background-color: rgb(255, 255, 255); padding: 0.6rem 0=
px; border-width: 1px; border-style: solid; border-image: initial; border-c=
olor: rgb(221, 221, 221) rgb(221, 221, 221) rgb(204, 204, 204); text-align:=
 left; border-radius: 0.25rem; white-space: nowrap; margin: 0px; height: au=
to !important; }
}

.nav-links { display: inline-block; }

.nav-links a { line-height: 1.4rem; color: inherit; }

.nav-links a.router-link-active, .nav-links a:hover { color: rgb(62, 144, 1=
50); }

.nav-links .nav-item { position: relative; display: inline-block; margin-le=
ft: 1.5rem; line-height: 2rem; }

.nav-links .nav-item:first-child { margin-left: 0px; }

.nav-links .repo-link { margin-left: 1.5rem; }

@media (max-width: 719px) {
  .nav-links .nav-item, .nav-links .repo-link { margin-left: 0px; }
}

@media (min-width: 719px) {
  .nav-links a.router-link-active, .nav-links a:hover { color: rgba(0, 0, 0=
, 0.8); }
  .nav-item > a:not(.external).router-link-active, .nav-item > a:not(.exter=
nal):hover { margin-bottom: -2px; border-bottom: 2px solid rgb(69, 160, 167=
); }
}

.navbar { padding: 0.7rem 1.5rem; line-height: 2.6rem; }

.navbar a, .navbar img, .navbar span { display: inline-block; }

.navbar .logo { height: 2.6rem; min-width: 2.6rem; margin-right: 0.8rem; ve=
rtical-align: top; }

.navbar .site-name { font-size: 1.3rem; font-weight: 600; color: rgba(0, 0,=
 0, 0.8); position: relative; }

.navbar .links { padding-left: 1.5rem; box-sizing: border-box; background-c=
olor: rgb(255, 255, 255); white-space: nowrap; font-size: 0.9rem; position:=
 absolute; right: 1.5rem; top: 0.7rem; display: flex; }

.navbar .links .search-box { flex: 0 0 auto; vertical-align: top; }

@media (max-width: 719px) {
  .navbar { padding-left: 4rem; }
  .navbar .can-hide { display: none; }
  .navbar .links { padding-left: 1.5rem; }
  .navbar .site-name { width: calc(100vw - 9.4rem); overflow: hidden; white=
-space: nowrap; text-overflow: ellipsis; }
}

.page-edit { max-width: 740px; margin: 0px auto; padding: 2rem 2.5rem; }

@media (max-width: 959px) {
  .page-edit { padding: 2rem; }
}

@media (max-width: 419px) {
  .page-edit { padding: 1.5rem; }
}

.page-edit { padding-top: 1rem; padding-bottom: 1rem; overflow: auto; }

.page-edit .edit-link { display: inline-block; }

.page-edit .edit-link a { color: rgba(64, 64, 64, 0.8); margin-right: 0.25r=
em; }

.page-edit .last-updated { float: right; font-size: 0.9em; }

.page-edit .last-updated .prefix { font-weight: 500; color: rgba(64, 64, 64=
, 0.8); }

.page-edit .last-updated .time { font-weight: 400; color: rgb(118, 118, 118=
); }

@media (max-width: 719px) {
  .page-edit .edit-link { margin-bottom: 0.5rem; }
  .page-edit .last-updated { font-size: 0.8em; float: none; text-align: lef=
t; }
}

.page-nav { max-width: 740px; margin: 0px auto; padding: 2rem 2.5rem; }

@media (max-width: 959px) {
  .page-nav { padding: 2rem; }
}

@media (max-width: 419px) {
  .page-nav { padding: 1.5rem; }
}

.page-nav { padding-top: 1rem; padding-bottom: 0px; }

.page-nav .inner { min-height: 2rem; margin-top: 0px; border-top: 1px solid=
 rgb(234, 236, 239); padding-top: 1rem; overflow: auto; }

.page-nav .next { float: right; }

.feedback-edit-or-issue[data-v-063e6196] { padding: 1em 0px; }

.feedback-result[data-v-063e6196] { animation: 0.5s ease 0s 1 normal none r=
unning fadein-data-v-063e6196; min-height: 38px; display: flex; align-items=
: center; }

.feedback-result [data-v-063e6196] { margin: 0px; }

.feedback-actions[data-v-063e6196] { display: flex; justify-content: center=
; }

.feedback-actions button[data-v-063e6196] { flex: 1 1 0%; }

@media (min-width: 719px) {
  .illustration[data-v-063e6196] { width: 40%; float: right; }
  .feedback-actions[data-v-063e6196] { display: block; }
}

@-webkit-keyframes fadein-data-v-063e6196 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes fadein-data-v-063e6196 {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.legacy-callout[data-v-00666086] { background-color: rgb(244, 250, 251); co=
lor: rgba(51, 51, 51, 0.8); border-color: rgb(62, 144, 150); padding: 1rem =
2rem; margin-top: 3rem; }

.legacy-links a[data-v-00666086] { font-weight: 400; }

section[data-v-00666086] { margin: 1rem 0px; }

section ul[data-v-00666086] { margin: 0px; padding: 0px; list-style: none; =
}

section ul li[data-v-00666086] { margin: 0px; line-height: 2em; padding: 0p=
x; }

@media (min-width: 959px) {
  section[data-v-00666086] { display: flex; }
  section .block[data-v-00666086] { flex: 1 1 0%; }
}

.page[data-v-4f5abb4a] { padding-bottom: 2rem; display: block; }

.content-footer[data-v-4f5abb4a] { padding-top: 0px; max-width: 740px; }

.page-edit[data-v-4f5abb4a] { max-width: 100%; padding: 2rem; }

.content-feedback[data-v-4f5abb4a] { padding: 0px 2rem; }

@media (min-width: 719px) {
  .content-footer[data-v-4f5abb4a] { padding: 0px 2.5rem; }
  .content-feedback[data-v-4f5abb4a] { padding: 0px; margin: 0px; }
  .page-edit[data-v-4f5abb4a] { padding: 2.5rem 0px; }
  section[data-v-4f5abb4a] { display: flex; }
  section .block[data-v-4f5abb4a] { flex: 1 1 0%; }
}

.sidebar-group .sidebar-group { padding-left: 0.5em; }

.sidebar-group:not(.collapsable) .sidebar-heading:not(.clickable) { cursor:=
 auto; color: inherit; }

.sidebar-group.is-sub-group { padding-left: 0px; }

.sidebar-group.is-sub-group > .sidebar-heading { font-size: 0.95em; line-he=
ight: 1.4; font-weight: 400; padding-left: 2rem; }

.sidebar-group.is-sub-group > .sidebar-heading:not(.clickable) { opacity: 0=
.5; }

.sidebar-group.is-sub-group > .sidebar-group-items { padding-left: 1rem; }

.sidebar-group.is-sub-group > .sidebar-group-items > li > .sidebar-link { f=
ont-size: 0.95em; border-left: none; }

.sidebar-group.depth-2 > .sidebar-heading { border-left: none; }

.sidebar-heading { color: rgba(0, 0, 0, 0.8); transition: color 0.15s ease =
0s; cursor: pointer; font-size: 1.1em; font-weight: 700; padding: 0.35rem 1=
.5rem 0.35rem 1.25rem; width: 100%; box-sizing: border-box; margin: 0px; bo=
rder-left: 0.25rem solid transparent; }

.sidebar-heading.open, .sidebar-heading:hover { color: inherit; }

.sidebar-heading .arrow { position: relative; top: -0.12em; left: 0.5em; }

.sidebar-heading.clickable.active { font-weight: 600; color: rgb(62, 144, 1=
50); border-left-color: rgb(62, 144, 150); }

.sidebar-heading.clickable:hover { color: rgb(62, 144, 150); }

.sidebar-group-items { transition: height 0.1s ease-out 0s; font-size: 0.95=
em; overflow: hidden; }

.sidebar .sidebar-sub-headers { padding-left: 1rem; font-size: 0.95em; }

a.sidebar-link { font-size: 1em; font-weight: 400; display: inline-block; c=
olor: rgba(0, 0, 0, 0.8); border-left: 0.25rem solid transparent; padding: =
0.35rem 1rem 0.35rem 1.25rem; line-height: 1.4; width: 100%; box-sizing: bo=
rder-box; }

a.sidebar-link:hover { color: rgb(62, 144, 150); }

a.sidebar-link.active { font-weight: 600; color: rgb(62, 144, 150); border-=
left-color: rgb(62, 144, 150); }

.sidebar-group a.sidebar-link { padding-left: 2rem; }

.sidebar-sub-headers a.sidebar-link { padding-top: 0.25rem; padding-bottom:=
 0.25rem; border-left: none; }

.sidebar-sub-headers a.sidebar-link.active { font-weight: 500; }

.sidebar ul { padding: 0px; margin: 0px; list-style-type: none; }

.sidebar a { display: inline-block; }

.sidebar .nav-links { display: none; border-bottom: 1px solid rgb(234, 236,=
 239); padding: 0.5rem 0px 0.75rem; }

.sidebar .nav-links a { font-weight: 600; }

.sidebar .nav-links .nav-item, .sidebar .nav-links .repo-link { display: bl=
ock; line-height: 1.25rem; font-size: 1.1em; padding: 0.5rem 0px 0.5rem 1.5=
rem; }

.sidebar > .sidebar-links { padding: 1.5rem 0px; }

.sidebar > .sidebar-links > li > a.sidebar-link { font-size: 1.1em; line-he=
ight: 1.7; font-weight: 700; }

.sidebar > .sidebar-links > li:not(:first-child) { margin-top: 0.75rem; }

@media (max-width: 719px) {
  .sidebar .nav-links { display: block; }
  .sidebar .nav-links .dropdown-wrapper .nav-dropdown .dropdown-item a.rout=
er-link-active::after { top: calc(1rem - 2px); }
  .sidebar > .sidebar-links { padding: 1rem 0px; }
}

h2[data-v-0d020454], h3[data-v-0d020454] { border-bottom: none; margin: 0.5=
rem 0px; }

ul[data-v-0d020454] { list-style: none; margin: 0px; padding: 0px; }

ul li[data-v-0d020454] { margin: 0px; padding: 0px; }

.content-status-vote[data-v-0d020454] { margin-top: 3rem; }

.illustration[data-v-0d020454] { width: 20%; float: right; }

.section[data-v-0d020454] { margin-bottom: 3rem; }

@media (min-width: 959px) {
  .illustration[data-v-0d020454] { width: 40%; float: right; }
}

.number-block-item { background-color: rgb(213, 236, 238); margin-top: 1em;=
 padding: 1em; text-align: center; }

.number-block-number { color: rgb(62, 144, 150); font-size: 3em; font-weigh=
t: 700; }

@media (min-width: 959px) {
  .number-block { display: flex; margin-top: 1em; }
  .number-block-item { flex: 1 1 0px; margin-right: 1em; }
  .number-block-item:last-child { margin-right: 0px; }
}

.badge[data-v-15b7b770] { display: inline-block; font-size: 14px; height: 1=
8px; line-height: 18px; border-radius: 3px; padding: 0px 6px; color: rgb(25=
5, 255, 255); background-color: rgb(66, 185, 131); }

.badge.green[data-v-15b7b770], .badge.tip[data-v-15b7b770] { background-col=
or: rgb(62, 144, 150); }

.badge.error[data-v-15b7b770] { background-color: rgb(218, 89, 97); }

.badge.warn[data-v-15b7b770], .badge.warning[data-v-15b7b770], .badge.yello=
w[data-v-15b7b770] { background-color: rgb(231, 192, 0); }

.badge + .badge[data-v-15b7b770] { margin-left: 5px; }

.theme-code-block[data-v-759a7d02] { display: none; }

.theme-code-block__active[data-v-759a7d02] { display: block; }

.theme-code-block > pre[data-v-759a7d02] { background-color: orange; }

.theme-code-group__nav[data-v-deefee04] { margin-bottom: -35px; background-=
color: rgb(14, 34, 51); padding-bottom: 22px; border-top-left-radius: 6px; =
border-top-right-radius: 6px; padding-left: 10px; padding-top: 10px; }

.theme-code-group__ul[data-v-deefee04] { margin: auto 0px; padding-left: 0p=
x; display: inline-flex; list-style: none; }

.theme-code-group__nav-tab[data-v-deefee04] { border: 0px; padding: 5px; cu=
rsor: pointer; background-color: transparent; font-size: 0.85em; line-heigh=
t: 1.4; color: rgba(255, 255, 255, 0.9); font-weight: 600; }

.theme-code-group__nav-tab-active[data-v-deefee04] { border-bottom: 1px sol=
id rgb(66, 185, 131); }

.pre-blank[data-v-deefee04] { color: rgb(66, 185, 131); }

.searchbox { display: inline-block; position: relative; width: 200px; white=
-space: nowrap; box-sizing: border-box; height: 32px !important; visibility=
: visible !important; }

.searchbox .algolia-autocomplete { display: block; width: 100%; height: 100=
%; }

.searchbox__wrapper { width: 100%; height: 100%; z-index: 999; position: re=
lative; }

.searchbox__input { display: inline-block; box-sizing: border-box; transiti=
on: box-shadow 0.4s ease 0s, background 0.4s ease 0s; border: 0px; border-r=
adius: 16px; box-shadow: rgb(204, 204, 204) 0px 0px 0px 1px inset; padding:=
 0px 26px 0px 32px; width: 100%; height: 100%; vertical-align: middle; whit=
e-space: normal; font-size: 12px; appearance: none; background: rgb(255, 25=
5, 255) !important; }

.searchbox__input::-webkit-search-cancel-button, .searchbox__input::-webkit=
-search-decoration, .searchbox__input::-webkit-search-results-button, .sear=
chbox__input::-webkit-search-results-decoration { display: none; }

.searchbox__input:hover { box-shadow: rgb(179, 179, 179) 0px 0px 0px 1px in=
set; }

.searchbox__input:active, .searchbox__input:focus { outline: 0px; box-shado=
w: rgb(170, 170, 170) 0px 0px 0px 1px inset; background: rgb(255, 255, 255)=
; }

.searchbox__input::placeholder { color: rgb(170, 170, 170); }

.searchbox__submit { position: absolute; top: 0px; margin: 0px; border: 0px=
; border-radius: 16px 0px 0px 16px; background-color: rgba(69, 142, 225, 0)=
; padding: 0px; width: 32px; height: 100%; vertical-align: middle; text-ali=
gn: center; font-size: inherit; user-select: none; right: inherit; left: 0p=
x; }

.searchbox__submit::before { display: inline-block; margin-right: -4px; hei=
ght: 100%; vertical-align: middle; content: ""; }

.searchbox__submit:active, .searchbox__submit:hover { cursor: pointer; }

.searchbox__submit:focus { outline: 0px; }

.searchbox__submit svg { width: 14px; height: 14px; vertical-align: middle;=
 fill: rgb(109, 126, 150); }

.searchbox__reset { display: block; position: absolute; top: 8px; right: 8p=
x; margin: 0px; border: 0px; background: none; cursor: pointer; padding: 0p=
x; font-size: inherit; user-select: none; fill: rgba(0, 0, 0, 0.5); }

.searchbox__reset.hide { display: none; }

.searchbox__reset:focus { outline: 0px; }

.searchbox__reset svg { display: block; margin: 4px; width: 8px; height: 8p=
x; }

.searchbox__input:valid ~ .searchbox__reset { display: block; animation-nam=
e: sbx-reset-in; animation-duration: 0.15s; }

@-webkit-keyframes sbx-reset-in {=20
  0% { transform: translate3d(-20%, 0px, 0px); opacity: 0; }
  100% { transform: none; opacity: 1; }
}

@keyframes sbx-reset-in {=20
  0% { transform: translate3d(-20%, 0px, 0px); opacity: 0; }
  100% { transform: none; opacity: 1; }
}

.algolia-autocomplete.algolia-autocomplete-right .ds-dropdown-menu { right:=
 0px !important; left: inherit !important; }

.algolia-autocomplete.algolia-autocomplete-right .ds-dropdown-menu::before =
{ right: 48px; }

.algolia-autocomplete.algolia-autocomplete-left .ds-dropdown-menu { left: 0=
px !important; right: inherit !important; }

.algolia-autocomplete.algolia-autocomplete-left .ds-dropdown-menu::before {=
 left: 48px; }

.algolia-autocomplete .ds-dropdown-menu { top: -6px; border-radius: 4px; ma=
rgin: 6px 0px 0px; padding: 0px; text-align: left; height: auto; position: =
relative; background: transparent; border: none; z-index: 999; max-width: 6=
00px; min-width: 500px; box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px, rgb=
a(0, 0, 0, 0.1) 0px 2px 3px 0px; }

.algolia-autocomplete .ds-dropdown-menu::before { display: block; position:=
 absolute; content: ""; width: 14px; height: 14px; background: rgb(255, 255=
, 255); z-index: 1000; top: -7px; border-top: 1px solid rgb(217, 217, 217);=
 border-right: 1px solid rgb(217, 217, 217); transform: rotate(-45deg); bor=
der-radius: 2px; }

.algolia-autocomplete .ds-dropdown-menu .ds-suggestions { position: relativ=
e; z-index: 1000; margin-top: 8px; }

.algolia-autocomplete .ds-dropdown-menu .ds-suggestions a:hover { text-deco=
ration: none; }

.algolia-autocomplete .ds-dropdown-menu .ds-suggestion { cursor: pointer; }

.algolia-autocomplete .ds-dropdown-menu .ds-suggestion.ds-cursor .algolia-d=
ocsearch-suggestion.suggestion-layout-simple, .algolia-autocomplete .ds-dro=
pdown-menu .ds-suggestion.ds-cursor .algolia-docsearch-suggestion:not(.sugg=
estion-layout-simple) .algolia-docsearch-suggestion--content { background-c=
olor: rgba(69, 142, 225, 0.05); }

.algolia-autocomplete .ds-dropdown-menu [class^=3D"ds-dataset-"] { position=
: relative; border: 1px solid rgb(217, 217, 217); background: rgb(255, 255,=
 255); border-radius: 4px; overflow: auto; padding: 0px 8px 8px; }

.algolia-autocomplete .ds-dropdown-menu * { box-sizing: border-box; }

.algolia-autocomplete .algolia-docsearch-suggestion { display: block; posit=
ion: relative; padding: 0px 8px; background: rgb(255, 255, 255); color: rgb=
(2, 6, 12); overflow: hidden; }

.algolia-autocomplete .algolia-docsearch-suggestion--highlight { color: rgb=
(23, 77, 140); background: rgba(143, 187, 237, 0.1); padding: 0.1em 0.05em;=
 }

.algolia-autocomplete .algolia-docsearch-suggestion--category-header .algol=
ia-docsearch-suggestion--category-header-lvl0 .algolia-docsearch-suggestion=
--highlight, .algolia-autocomplete .algolia-docsearch-suggestion--category-=
header .algolia-docsearch-suggestion--category-header-lvl1 .algolia-docsear=
ch-suggestion--highlight, .algolia-autocomplete .algolia-docsearch-suggesti=
on--text .algolia-docsearch-suggestion--highlight { padding: 0px 0px 1px; b=
ackground: inherit; box-shadow: rgba(69, 142, 225, 0.8) 0px -2px 0px 0px in=
set; color: inherit; }

.algolia-autocomplete .algolia-docsearch-suggestion--content { display: blo=
ck; float: right; width: 70%; position: relative; padding: 5.33333px 0px 5.=
33333px 10.6667px; cursor: pointer; }

.algolia-autocomplete .algolia-docsearch-suggestion--content::before { cont=
ent: ""; position: absolute; display: block; top: 0px; height: 100%; width:=
 1px; background: rgb(221, 221, 221); left: -1px; }

.algolia-autocomplete .algolia-docsearch-suggestion--category-header { posi=
tion: relative; border-bottom: 1px solid rgb(221, 221, 221); display: none;=
 margin-top: 8px; padding: 4px 0px; font-size: 1em; color: rgb(51, 54, 61);=
 }

.algolia-autocomplete .algolia-docsearch-suggestion--wrapper { width: 100%;=
 float: left; padding: 8px 0px 0px; }

.algolia-autocomplete .algolia-docsearch-suggestion--subcategory-column { f=
loat: left; width: 30%; text-align: right; position: relative; padding: 5.3=
3333px 10.6667px; color: rgb(164, 167, 174); font-size: 0.9em; overflow-wra=
p: break-word; }

.algolia-autocomplete .algolia-docsearch-suggestion--subcategory-column::be=
fore { content: ""; position: absolute; display: block; top: 0px; height: 1=
00%; width: 1px; background: rgb(221, 221, 221); right: 0px; }

.algolia-autocomplete .algolia-docsearch-suggestion--subcategory-inline { d=
isplay: none; }

.algolia-autocomplete .algolia-docsearch-suggestion--title { margin-bottom:=
 4px; color: rgb(2, 6, 12); font-size: 0.9em; font-weight: 700; }

.algolia-autocomplete .algolia-docsearch-suggestion--text { display: block;=
 line-height: 1.2em; font-size: 0.85em; color: rgb(99, 103, 109); }

.algolia-autocomplete .algolia-docsearch-suggestion--no-results { width: 10=
0%; padding: 8px 0px; text-align: center; font-size: 1.2em; }

.algolia-autocomplete .algolia-docsearch-suggestion--no-results::before { d=
isplay: none; }

.algolia-autocomplete .algolia-docsearch-suggestion code { padding: 1px 5px=
; font-size: 90%; border: none; color: rgb(34, 34, 34); background-color: r=
gb(235, 235, 235); border-radius: 3px; font-family: Menlo, Monaco, Consolas=
, "Courier New", monospace; }

.algolia-autocomplete .algolia-docsearch-suggestion code .algolia-docsearch=
-suggestion--highlight { background: none; }

.algolia-autocomplete .algolia-docsearch-suggestion.algolia-docsearch-sugge=
stion__main .algolia-docsearch-suggestion--category-header, .algolia-autoco=
mplete .algolia-docsearch-suggestion.algolia-docsearch-suggestion__secondar=
y { display: block; }

@media (min-width: 768px) {
  .algolia-autocomplete .algolia-docsearch-suggestion .algolia-docsearch-su=
ggestion--subcategory-column { display: block; }
}

@media (max-width: 768px) {
  .algolia-autocomplete .algolia-docsearch-suggestion .algolia-docsearch-su=
ggestion--subcategory-column { display: inline-block; width: auto; float: l=
eft; padding: 0px; color: rgb(2, 6, 12); font-size: 0.9em; font-weight: 700=
; text-align: left; opacity: 0.5; }
  .algolia-autocomplete .algolia-docsearch-suggestion .algolia-docsearch-su=
ggestion--subcategory-column::before { display: none; }
  .algolia-autocomplete .algolia-docsearch-suggestion .algolia-docsearch-su=
ggestion--subcategory-column::after { content: "|"; }
  .algolia-autocomplete .algolia-docsearch-suggestion .algolia-docsearch-su=
ggestion--content { display: inline-block; width: auto; text-align: left; f=
loat: left; padding: 0px; }
  .algolia-autocomplete .algolia-docsearch-suggestion .algolia-docsearch-su=
ggestion--content::before { display: none; }
}

.algolia-autocomplete .suggestion-layout-simple.algolia-docsearch-suggestio=
n { border-bottom: 1px solid rgb(238, 238, 238); padding: 8px; margin: 0px;=
 }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--content { width: 100%; padding: 0px; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--content::before { display: none; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--category-header { margin: 0px; padding: 0px; display: block; width: 100=
%; border: none; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--category-header-lvl0, .algolia-autocomplete .suggestion-layout-simple .=
algolia-docsearch-suggestion--category-header-lvl1 { opacity: 0.6; font-siz=
e: 0.85em; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--category-header-lvl1::before { background-image: url("data:image/svg+xm=
l;utf8,<svg width=3D\"10\" height=3D\"10\" viewBox=3D\"0 0 20 38\" xmlns=3D=
\"http://www.w3.org/2000/svg\"><path d=3D\"M1.49 4.31l14 16.126.002-2.624-1=
4 16.074-1.314 1.51 3.017 2.626 1.313-1.508 14-16.075 1.142-1.313-1.14-1.31=
3-14-16.125L3.2.18.18 2.8l1.31 1.51z\" fill-rule=3D\"evenodd\" fill=3D\"%23=
1D3657\" /></svg>"); content: ""; width: 10px; height: 10px; display: inlin=
e-block; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--wrapper { width: 100%; float: left; margin: 0px; padding: 0px; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--duplicate-content, .algolia-autocomplete .suggestion-layout-simple .alg=
olia-docsearch-suggestion--subcategory-inline { display: none !important; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--title { margin: 0px; color: rgb(69, 142, 225); font-size: 0.9em; font-w=
eight: 400; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--title::before { content: "#"; font-weight: 700; color: rgb(69, 142, 225=
); display: inline-block; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--text { margin: 4px 0px 0px; display: block; line-height: 1.4em; padding=
: 5.33333px 8px; background: rgb(248, 248, 248); font-size: 0.85em; opacity=
: 0.8; }

.algolia-autocomplete .suggestion-layout-simple .algolia-docsearch-suggesti=
on--text .algolia-docsearch-suggestion--highlight { color: rgb(63, 65, 69);=
 font-weight: 700; box-shadow: none; }

.algolia-autocomplete .algolia-docsearch-footer { width: 134px; height: 20p=
x; z-index: 2000; margin-top: 10.6667px; float: right; font-size: 0px; line=
-height: 0; }

.algolia-autocomplete .algolia-docsearch-footer--logo { background-image: u=
rl("data:image/svg+xml;charset=3Dutf-8,%3Csvg width=3D'168' height=3D'24' x=
mlns=3D'http://www.w3.org/2000/svg'%3E%3Cg fill=3D'none' fill-rule=3D'eveno=
dd'%3E%3Cpath d=3D'M78.988.938h16.594a2.968 2.968 0 012.966 2.966V20.5a2.96=
7 2.967 0 01-2.966 2.964H78.988a2.967 2.967 0 01-2.966-2.964V3.897A2.961 2.=
961 0 0178.988.938zm41.937 17.866c-4.386.02-4.386-3.54-4.386-4.106l-.007-13=
.336 2.675-.424v13.254c0 .322 0 2.358 1.718 2.364v2.248zm-10.846-2.18c.821 =
0 1.43-.047 1.855-.129v-2.719a6.334 6.334 0 00-1.574-.199 5.7 5.7 0 00-.897=
.069 2.699 2.699 0 00-.814.24c-.24.116-.439.28-.582.491-.15.212-.219.335-.2=
19.656 0 .628.219.991.616 1.23s.938.362 1.615.362zm-.233-9.7c.883 0 1.629.1=
09 2.231.328.602.218 1.088.525 1.444.915.363.396.609.922.76 1.483.157.56.23=
2 1.175.232 1.85v6.874a32.5 32.5 0 01-1.868.314c-.834.123-1.772.185-2.813.1=
85-.69 0-1.327-.069-1.895-.198a4.001 4.001 0 01-1.471-.636 3.085 3.085 0 01=
-.951-1.134c-.226-.465-.343-1.12-.343-1.803 0-.656.13-1.073.384-1.525a3.24 =
3.24 0 011.047-1.106c.445-.287.95-.492 1.532-.615a8.8 8.8 0 011.82-.185 8.4=
04 8.404 0 011.972.24v-.438c0-.307-.035-.6-.11-.874a1.88 1.88 0 00-.384-.73=
 1.784 1.784 0 00-.724-.493 3.164 3.164 0 00-1.143-.205c-.616 0-1.177.075-1=
.69.164a7.735 7.735 0 00-1.26.307l-.321-2.192c.335-.117.834-.233 1.478-.349=
a10.98 10.98 0 012.073-.178zm52.842 9.626c.822 0 1.43-.048 1.854-.13V13.7a6=
.347 6.347 0 00-1.574-.199c-.294 0-.595.021-.896.069a2.7 2.7 0 00-.814.24 1=
.46 1.46 0 00-.582.491c-.15.212-.218.335-.218.656 0 .628.218.991.615 1.23.4=
04.245.938.362 1.615.362zm-.226-9.694c.883 0 1.629.108 2.231.327.602.219 1.=
088.526 1.444.915.355.39.609.923.759 1.483a6.8 6.8 0 01.233 1.852v6.873c-.4=
1.088-1.034.19-1.868.314-.834.123-1.772.184-2.813.184-.69 0-1.327-.068-1.89=
5-.198a4.001 4.001 0 01-1.471-.635 3.085 3.085 0 01-.951-1.134c-.226-.465-.=
343-1.12-.343-1.804 0-.656.13-1.073.384-1.524.26-.45.608-.82 1.047-1.107.44=
5-.286.95-.491 1.532-.614a8.803 8.803 0 012.751-.13c.329.034.671.096 1.04.1=
85v-.437a3.3 3.3 0 00-.109-.875 1.873 1.873 0 00-.384-.731 1.784 1.784 0 00=
-.724-.492 3.165 3.165 0 00-1.143-.205c-.616 0-1.177.075-1.69.164a7.75 7.75=
 0 00-1.26.307l-.321-2.193c.335-.116.834-.232 1.478-.348a11.633 11.633 0 01=
2.073-.177zm-8.034-1.271a1.626 1.626 0 01-1.628-1.62c0-.895.725-1.62 1.628-=
1.62.904 0 1.63.725 1.63 1.62 0 .895-.733 1.62-1.63 1.62zm1.348 13.22h-2.68=
9V7.27l2.69-.423v11.956zm-4.714 0c-4.386.02-4.386-3.54-4.386-4.107l-.008-13=
.336 2.676-.424v13.254c0 .322 0 2.358 1.718 2.364v2.248zm-8.698-5.903c0-1.1=
56-.253-2.119-.746-2.788-.493-.677-1.183-1.01-2.067-1.01-.882 0-1.574.333-2=
.065 1.01-.493.676-.733 1.632-.733 2.788 0 1.168.246 1.953.74 2.63.492.683 =
1.183 1.018 2.066 1.018.882 0 1.574-.342 2.067-1.019.492-.683.738-1.46.738-=
2.63zm2.737-.007c0 .902-.13 1.584-.397 2.33a5.52 5.52 0 01-1.128 1.906 4.98=
6 4.986 0 01-1.752 1.223c-.685.286-1.739.45-2.265.45-.528-.006-1.574-.157-2=
.252-.45a5.096 5.096 0 01-1.744-1.223c-.487-.527-.863-1.162-1.137-1.906a6.3=
45 6.345 0 01-.41-2.33c0-.902.123-1.77.397-2.508a5.554 5.554 0 011.15-1.892=
 5.133 5.133 0 011.75-1.216c.679-.287 1.425-.423 2.232-.423.808 0 1.553.142=
 2.237.423a4.88 4.88 0 011.753 1.216 5.644 5.644 0 011.135 1.892c.287.738.4=
31 1.606.431 2.508zm-20.138 0c0 1.12.246 2.363.738 2.882.493.52 1.13.78 1.9=
1.78.424 0 .828-.062 1.204-.178.377-.116.677-.253.917-.417V9.33a10.476 10.4=
76 0 00-1.766-.226c-.971-.028-1.71.37-2.23 1.004-.513.636-.773 1.75-.773 2.=
788zm7.438 5.274c0 1.824-.466 3.156-1.404 4.004-.936.846-2.367 1.27-4.296 1=
.27-.705 0-2.17-.137-3.34-.396l.431-2.118c.98.205 2.272.26 2.95.26 1.074 0 =
1.84-.219 2.299-.656.459-.437.684-1.086.684-1.948v-.437a8.07 8.07 0 01-1.04=
7.397c-.43.13-.93.198-1.492.198-.739 0-1.41-.116-2.018-.349a4.206 4.206 0 0=
1-1.567-1.025c-.431-.45-.774-1.017-1.013-1.694-.24-.677-.363-1.885-.363-2.7=
73 0-.834.13-1.88.384-2.577.26-.696.629-1.298 1.129-1.796.493-.498 1.095-.8=
81 1.8-1.162a6.605 6.605 0 012.428-.457c.87 0 1.67.109 2.45.24.78.129 1.444=
.265 1.985.415V18.17z' fill=3D'%235468FF'/%3E%3Cpath d=3D'M6.972 6.677v1.62=
7c-.712-.446-1.52-.67-2.425-.67-.585 0-1.045.13-1.38.391a1.24 1.24 0 00-.50=
2 1.03c0 .425.164.765.494 1.02.33.256.835.532 1.516.83.447.192.795.356 1.04=
5.495.25.138.537.332.862.582.324.25.563.548.718.894.154.345.23.741.23 1.188=
 0 .947-.334 1.691-1.004 2.234-.67.542-1.537.814-2.601.814-1.18 0-2.16-.229=
-2.936-.686v-1.708c.84.628 1.814.942 2.92.942.585 0 1.048-.136 1.388-.407.3=
4-.271.51-.646.51-1.125 0-.287-.1-.55-.302-.79-.203-.24-.42-.42-.655-.542-.=
234-.123-.585-.29-1.053-.503a61.27 61.27 0 01-.582-.271 13.67 13.67 0 01-.5=
5-.287 4.275 4.275 0 01-.567-.351 6.92 6.92 0 01-.455-.4c-.18-.17-.31-.34-.=
39-.51-.08-.17-.155-.37-.224-.598a2.553 2.553 0 01-.104-.742c0-.915.333-1.6=
38.998-2.17.664-.532 1.523-.798 2.576-.798.968 0 1.793.17 2.473.51zm7.468 5=
.696v-.287c-.022-.607-.187-1.088-.495-1.444-.309-.357-.75-.535-1.324-.535-.=
532 0-.99.194-1.373.583-.382.388-.622.949-.717 1.683h3.909zm1.005 2.792v1.4=
04c-.596.34-1.383.51-2.362.51-1.255 0-2.255-.377-3-1.132-.744-.755-1.116-1.=
744-1.116-2.968 0-1.297.34-2.316 1.021-3.055.68-.74 1.548-1.11 2.6-1.11 1.0=
33 0 1.852.323 2.458.966.606.644.91 1.572.91 2.784 0 .33-.033.676-.096 1.03=
8h-5.314c.107.702.405 1.239.894 1.611.49.372 1.106.558 1.85.558.862 0 1.58-=
.202 2.155-.606zm6.605-1.77h-1.212c-.596 0-1.045.116-1.349.35-.303.234-.454=
.532-.454.894 0 .372.117.664.35.877.235.213.575.32 1.022.32.51 0 .912-.142 =
1.204-.424.293-.281.44-.651.44-1.108v-.91zm-4.068-2.554V9.325c.627-.361 1.4=
57-.542 2.489-.542 2.116 0 3.175 1.026 3.175 3.08V17h-1.548v-.957c-.415.68-=
1.143 1.02-2.186 1.02-.766 0-1.38-.22-1.843-.661-.462-.442-.694-1.003-.694-=
1.684 0-.776.293-1.38.878-1.81.585-.431 1.404-.647 2.457-.647h1.34V11.8c0-.=
554-.133-.971-.399-1.253-.266-.282-.707-.423-1.324-.423a4.07 4.07 0 00-2.34=
5.718zm9.333-1.93v1.42c.394-1 1.101-1.5 2.123-1.5.148 0 .313.016.494.048v1.=
531a1.885 1.885 0 00-.75-.143c-.542 0-.989.24-1.34.718-.351.479-.527 1.048-=
.527 1.707V17h-1.563V8.91h1.563zm5.01 4.084c.022.82.272 1.492.75 2.019.479.=
526 1.15.79 2.01.79.639 0 1.235-.176 1.788-.527v1.404c-.521.319-1.186.479-1=
.995.479-1.265 0-2.276-.4-3.031-1.197-.755-.798-1.133-1.792-1.133-2.984 0-1=
.16.38-2.151 1.14-2.975.761-.825 1.79-1.237 3.088-1.237.702 0 1.346.149 1.9=
3.447v1.436a3.242 3.242 0 00-1.77-.495c-.84 0-1.513.266-2.019.798-.505.532-=
.758 1.213-.758 2.042zM40.24 5.72v4.579c.458-1 1.293-1.5 2.505-1.5.787 0 1.=
42.245 1.899.734.479.49.718 1.17.718 2.042V17h-1.564v-5.106c0-.553-.14-.98-=
.422-1.284-.282-.303-.652-.455-1.11-.455-.531 0-1.002.202-1.411.606-.41.405=
-.615 1.022-.615 1.851V17h-1.563V5.72h1.563zm14.966 10.02c.596 0 1.096-.253=
 1.5-.758.404-.506.606-1.157.606-1.955 0-.915-.202-1.62-.606-2.114-.404-.49=
5-.92-.742-1.548-.742-.553 0-1.05.224-1.491.67-.442.447-.662 1.133-.662 2.0=
58 0 .958.212 1.67.638 2.138.425.469.946.703 1.563.703zM53.004 5.72v4.42c.5=
74-.894 1.388-1.341 2.44-1.341 1.022 0 1.857.383 2.506 1.149.649.766.973 1.=
781.973 3.047 0 1.138-.309 2.109-.925 2.912-.617.803-1.463 1.205-2.537 1.20=
5-1.075 0-1.894-.447-2.457-1.34V17h-1.58V5.72h1.58zm9.908 11.104l-3.223-7.9=
13h1.739l1.005 2.632 1.26 3.415c.096-.32.48-1.458 1.15-3.415l.909-2.632h1.6=
6l-2.92 7.866c-.777 2.074-1.963 3.11-3.559 3.11a2.92 2.92 0 01-.734-.079v-1=
.34c.17.042.351.064.543.064 1.032 0 1.755-.57 2.17-1.708z' fill=3D'%235D649=
4'/%3E%3Cpath d=3D'M89.632 5.967v-.772a.978.978 0 00-.978-.977h-2.28a.978.9=
78 0 00-.978.977v.793c0 .088.082.15.171.13a7.127 7.127 0 011.984-.28c.65 0 =
1.295.088 1.917.259.082.02.164-.04.164-.13m-6.248 1.01l-.39-.389a.977.977 0=
 00-1.382 0l-.465.465a.973.973 0 000 1.38l.383.383c.062.061.15.047.205-.014=
.226-.307.472-.601.746-.874.281-.28.568-.526.883-.751.068-.042.075-.137.02-=
.2m4.16 2.453v3.341c0 .096.104.165.192.117l2.97-1.537c.068-.034.089-.117.05=
5-.184a3.695 3.695 0 00-3.08-1.866c-.068 0-.136.054-.136.13m0 8.048a4.489 4=
.489 0 01-4.49-4.482 4.488 4.488 0 014.49-4.482 4.488 4.488 0 014.489 4.482=
 4.484 4.484 0 01-4.49 4.482m0-10.85a6.363 6.363 0 100 12.729 6.37 6.37 0 0=
06.372-6.368 6.358 6.358 0 00-6.371-6.36' fill=3D'%23FFF'/%3E%3C/g%3E%3C/sv=
g%3E"); background-repeat: no-repeat; background-position: 50% center; back=
ground-size: 100%; overflow: hidden; text-indent: -9000px; width: 100%; hei=
ght: 100%; display: block; padding: 0px !important; }
------MultipartBoundary--6V0Wl9F4SfHcxYcJ2HcpRKDAh61pWLJewhIgsWtcqa----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.ipfs.io/images/ipfs-logo-text-black.svg

<svg xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 780.6 235.3"><clip=
Path id=3D"a"><path d=3D"M-546.4-295.4h6494.7v3613.8H-546.4z"/></clipPath><=
path fill=3D"#191919" d=3D"M1.2 63H19v105H1.2zm35.6 0h36.3c7.9 0 14.5.9 19.=
6 2.6s9.2 4.1 12.1 7.1c2.9 2.8 5 6.3 6.2 10.2s1.8 8 1.8 12.1c0 4.4-.6 8.7-1=
.8 12.9-1.2 4-3.3 7.7-6.2 10.8-3.4 3.3-7.6 5.8-12.1 7.3-5.1 1.8-11.5 2.7-19=
.3 2.7H54.3V168H36.8zM73 114c3.7.1 7.5-.3 11.1-1.3 2.5-.7 4.9-1.9 6.8-3.7 1=
.6-1.6 2.9-3.6 3.5-5.8.7-2.5 1-5 1-7.6.1-2.6-.3-5.2-1-7.7-.7-2.1-1.9-4-3.6-=
5.5-2-1.6-4.4-2.8-6.9-3.4-3.6-.9-7.2-1.3-10.9-1.2H54.5V114zm119.9-51v15.3h-=
49.2V108H190v15.4h-46.3V168h-17.8V63zm26.2 72.9c.8 6.9 3.3 11.9 7.4 15s10.4=
 4.7 18.6 4.7c3.4.1 6.8-.3 10.1-1.3 2.4-.8 4.6-1.9 6.6-3.5 1.6-1.4 2.8-3.2 =
3.5-5.2.7-2.1 1-4.2 1-6.4 0-1.7-.2-3.3-.7-4.9-.6-1.7-1.4-3.2-2.6-4.5-1.5-1.=
5-3.2-2.7-5.1-3.6-2.6-1.1-5.4-1.9-8.2-2.4l-13.4-2.5c-4.8-.8-9.5-2.1-14.1-3.=
7-3.8-1.3-7.3-3.3-10.4-5.8-2.8-2.4-5-5.4-6.3-8.8-1.5-4.1-2.2-8.4-2.1-12.7-.=
3-8.9 3.9-17.4 11.3-22.4 3.8-2.7 8.1-4.6 12.6-5.6 5.2-1.2 10.5-1.8 15.8-1.8=
 7.2 0 13.3.8 18.2 2.5 4.4 1.4 8.4 3.6 11.9 6.5 2.9 2.6 5.3 5.8 6.9 9.3s2.6=
 7.2 3.2 11l-16.8 2.6c-1.4-5.9-3.7-10.2-7.1-13.1s-8.7-4.3-16.1-4.3c-3.5-.1-=
7.1.3-10.5 1.1-2.4.6-4.8 1.6-6.8 3.1-1.6 1.2-2.9 2.8-3.7 4.6-.7 1.7-1.1 3.5=
-1.1 5.4 0 4.6 1.2 8 3.7 10.3s6.9 4 13.2 5.3l14.5 2.8c11.1 2.1 19.2 5.6 24.=
4 10.5s7.8 12.1 7.8 21.4c0 4.2-.8 8.4-2.4 12.3-1.6 3.8-4.2 7.2-7.4 9.8-3.7 =
3-7.9 5.2-12.4 6.6-5.6 1.7-11.4 2.5-17.3 2.4-13.4 0-24-2.8-31.6-8.5s-11.9-1=
4.4-12.6-26.2z"/><path fill=3D"#9ad4db" d=3D"M367.8 40.7h4v155.4h-4z"/><pat=
h fill=3D"none" d=3D"M406.6 62.7h396.1v102H406.6z" clip-path=3D"url(#a)"/><=
path d=3D"M584.5 141.5c9.4 0 16.3-5 16.3-12.3 0-5.7-3.5-9-11-10.7l-6.6-1.5c=
-4.3-1-6.3-2.5-6.3-5 0-3.2 3.3-5.3 7.6-5.3 4.4 0 7.2 1.9 8 4.9h7.5c-.8-6.8-=
6.6-10.9-15.4-10.9-8.9 0-15.3 4.9-15.3 11.8 0 5.8 3.5 9.2 11 10.9l6.9 1.6c4=
 .9 5.8 2.5 5.8 5 0 3.2-3.4 5.5-8.3 5.5-4.7 0-7.6-1.9-8.6-5h-7.8c.7 6.7 6.8=
 11 16.2 11zm-40 0c9.7 0 15.8-5.5 16.9-13.2h-7.6c-1 4.3-4.4 6.6-9.3 6.6-6.5=
 0-10.5-5.3-10.5-14 0-8.5 4-13.7 10.5-13.7 5.2 0 8.4 2.9 9.3 6.8h7.6c-1-7.6=
-7-13.4-16.9-13.4-11.5 0-18.5 7.8-18.5 20.3 0 12.7 7 20.6 18.5 20.6zm-44.5-=
6.7c-6.8 0-10.6-5-10.6-13.8s3.8-13.8 10.6-13.8c6.7 0 10.6 5.1 10.6 13.8 0 8=
.7-3.9 13.8-10.6 13.8zm0 6.7c11.5 0 18.6-7.7 18.6-20.4s-7.1-20.4-18.6-20.4c=
-11.5 0-18.6 7.8-18.6 20.4 0 12.6 7 20.4 18.6 20.4zm-52.3-7.8h-9.9V95.4h9.9=
c10.8 0 17.3 7.1 17.3 19.1 0 12.2-6.3 19.2-17.3 19.2zm.9 7c15.6 0 24.6-9.6 =
24.6-26.3 0-16.5-9.1-26-24.6-26h-18.9v52.3z"/></svg>
------MultipartBoundary--6V0Wl9F4SfHcxYcJ2HcpRKDAh61pWLJewhIgsWtcqa----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.ipfs.io/assets/img/search.83621669.svg

<?xml version=3D"1.0" encoding=3D"UTF-8"?><svg xmlns=3D"http://www.w3.org/2=
000/svg" width=3D"12" height=3D"13"><g stroke-width=3D"2" stroke=3D"#aaa" f=
ill=3D"none"><path d=3D"M11.29 11.71l-4-4"/><circle cx=3D"5" cy=3D"5" r=3D"=
4"/></g></svg>=0A
------MultipartBoundary--6V0Wl9F4SfHcxYcJ2HcpRKDAh61pWLJewhIgsWtcqa----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://docs.ipfs.io/images/ipfs-logo.svg

<svg height=3D"196" viewBox=3D"0 0 169 196" width=3D"169" xmlns=3D"http://w=
ww.w3.org/2000/svg"><g fill=3D"none"><path d=3D"m.3 146 84 48.5 84-48.5v-97=
l-84-48.5-84 48.5z" fill=3D"#469ea2"/><path d=3D"m75.7 12.1-61 35.2c.099986=
2 1.0977279.0999862 2.2022721 0 3.3l60.9 35.2c5.1404674-3.8005698 12.159532=
6-3.8005698 17.3 0l60.9-35.2c-.099986-1.0977279-.099986-2.2022721 0-3.3l-60=
.8-35.2c-5.1404674 3.8005698-12.1595326 3.8005698-17.3 0zm84 48.2-61 35.6c.=
6781079 6.333528-2.7916258 12.385389-8.6 15l.1 70c.986199.434978 1.9245643.=
971186 2.8 1.6l60.9-35.2c-.678108-6.333528 2.791626-12.385389 8.6-15v-70.4c=
-.974881-.4570934-1.911257-.9921657-2.8-1.6zm-150.8.4c-.87543567.6288135-1.=
81380101 1.1650223-2.8 1.6v70.4c5.8882155 2.52578 9.3951061 8.642449 8.6 15=
l60.9 35.2c.8754357-.628814 1.813801-1.165022 2.8-1.6v-70.4c-5.8882155-2.52=
578-9.3951061-8.642449-8.6-15z" fill=3D"#6acad1"/><path d=3D"m84.3 11 75.1 =
43.4v86.7l-75.1 43.4-75.1-43.4v-86.8zm0-10.3-84 48.5v97l84 48.5 84-48.5v-97=
z" fill=3D"#469ea2"/><path d=3D"m84.9 114.000051h-1.2c-4.167157.010607-8.16=
67088-1.640073-11.1133434-4.586708-2.9466346-2.946634-4.5973143-6.946186-4.=
5867079-11.113343v-1.2c-.0106064-4.167157 1.6400733-8.1667088 4.5867079-11.=
1133434s6.9461864-4.5973143 11.1133434-4.5867079h1.2c4.167157-.0106064 8.16=
67088 1.6400733 11.1133434 4.5867079s4.5973146 6.9461864 4.5867076 11.11334=
34v1.2c.010607 4.167157-1.640073 8.166709-4.5867076 11.113343-2.9466346 2.9=
46635-6.9461864 4.597315-11.1133434 4.586708zm0 64.499878h-1.2c-5.6800683-.=
017032-10.9234942 3.044823-13.7 8.000071l14.3 8.2 14.3-8.2c-2.7765058-4.955=
248-8.0199317-8.017103-13.7-8.000071zm83.5-48.49998h-.6c-4.167157-.010607-8=
.166709 1.640073-11.113343 4.586708-2.946635 2.946634-4.597315 6.946186-4.5=
86657 11.113343v1.2c-.014381 2.665273.67556 5.287049 2 7.6l14.3-8.3zm-14.3-=
88.999949c-1.312716 2.3177361-2.001821 4.936333-2.000051 7.6v1.2c-.010607 4=
.167157 1.640073 8.1667088 4.586708 11.1133434 2.946634 2.9466346 6.946186 =
4.5973143 11.113343 4.5867079h.6v-16.3000513zm-69.8-40.3-14.3 8.2c2.763108 =
4.9814936 8.0035416 8.0798521 13.7 8.1000713h1.2c5.6800683.0170313 10.92349=
42-3.0448232 13.7-8.0000713zm-69.7 40.2-14.3 8.3v16.3000513h.6c4.16715701.0=
106064 8.16670879-1.6400733 11.1133434-4.5867079 2.9466346-2.9466346 4.5973=
143-6.9461864 4.5867079-11.1133434v-1.2c-.0339338-2.6906753-.7202372-5.3329=
433-2.0000513-7.7zm-13.7 89.099949h-.6v16.200051l14.3 8.3c1.3127164-2.31773=
6 2.0018209-4.936333 2.0000513-7.6v-1.2c.0106064-4.167157-1.6400733-8.16670=
9-4.5867079-11.113343-2.94663461-2.946635-6.94618639-4.597315-11.1133434-4.=
586708z" fill=3D"#469ea2"/><g fill=3D"#083b54"><path d=3D"m84.3 195.2v-97.1=
l-84-48.5v97.1z" fill-opacity=3D".15"/><path d=3D"m168.4 145.8v-97l-84 48.5=
v97.1z" fill-opacity=3D".05"/></g></g></svg>
------MultipartBoundary--6V0Wl9F4SfHcxYcJ2HcpRKDAh61pWLJewhIgsWtcqa------
